{"version":3,"sources":["rpc/rpc_grpc_web_pb.js","rpc/validator_pb.js","config/auth-creds.js","rpc/rpc_pb.js","utils/discussion-utils.js","components/content-pages/message-info.js","config/api-url.js","services/messageServices.js","services/paymentServices.js","style/theme.js","utils/system.js","components/content-pages/markdown/c13n-image.js","components/content-pages/markdown/c13n-link.js","components/content-pages/markdown/c13n-link-ref.js","components/content-pages/markdown/c13n-text.js","components/content-pages/markdown/c13n-inline-code.js","utils/payreq/payreq-tracker.js","payload-protocol/parsers.js","media/arrow-right.svg","payload-protocol/utils.js","components/content-pages/chat-history-input.js","services/discussionServices.js","components/content-pages/chat-history-statistics.js","utils/identicon.js","components/content-pages/user-preview.js","utils/users-utils.js","components/content-pages/chat-history.js","utils/settings.js","components/content-pages/user-settings.js","services/channelServices.js","services/nodeInfoServices.js","components/content-pages/open-channel.js","components/content-pages/connect-peer.js","components/content-pages/user-funds.js","services/contactServices.js","components/content-pages/search-users.js","components/content-pages/contacts.js","media/arc-logo.png","media/programize_logo.png","components/content-pages/logo.js","config/version.js","utils/accounts-utils.js","components/accounts.js","components/content-pages/version-error.js","components/content-pages/connection-screen.js","components/content-pages/group-chat.js","components/contents.js","media/arc-logo-short.png","components/side.js","components/content-pages/funds-initialization.js","utils/fiat-rates.js","media/notification.mp3","components/main.js","App.js","index.js","utils/crypto-utils.js"],"names":["grpc","web","require","proto","services","NodeInfoServiceClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","NodeInfoServicePromiseClient","methodDescriptor_NodeInfoService_GetVersion","MethodDescriptor","MethodType","UNARY","VersionRequest","Version","request","serializeBinary","deserializeBinary","AbstractClientBase","MethodInfo","prototype","getVersion","metadata","callback","rpcCall","unaryCall","methodDescriptor_NodeInfoService_GetSelfInfo","SelfInfoRequest","SelfInfoResponse","getSelfInfo","methodDescriptor_NodeInfoService_GetSelfBalance","SelfBalanceRequest","SelfBalanceResponse","getSelfBalance","methodDescriptor_NodeInfoService_GetNodes","GetNodesRequest","NodeInfoResponse","getNodes","methodDescriptor_NodeInfoService_SearchNodeByAddress","SearchNodeByAddressRequest","searchNodeByAddress","methodDescriptor_NodeInfoService_SearchNodeByAlias","SearchNodeByAliasRequest","searchNodeByAlias","methodDescriptor_NodeInfoService_ConnectNode","ConnectNodeRequest","ConnectNodeResponse","connectNode","ChannelServiceClient","ChannelServicePromiseClient","methodDescriptor_ChannelService_OpenChannel","OpenChannelRequest","OpenChannelResponse","openChannel","ContactServiceClient","ContactServicePromiseClient","methodDescriptor_ContactService_GetContacts","GetContactsRequest","GetContactsResponse","getContacts","methodDescriptor_ContactService_AddContact","AddContactRequest","AddContactResponse","addContact","methodDescriptor_ContactService_RemoveContactByID","RemoveContactByIDRequest","RemoveContactResponse","removeContactByID","methodDescriptor_ContactService_RemoveContactByAddress","RemoveContactByAddressRequest","removeContactByAddress","MessageServiceClient","MessageServicePromiseClient","methodDescriptor_MessageService_EstimateMessage","EstimateMessageRequest","EstimateMessageResponse","estimateMessage","methodDescriptor_MessageService_SendMessage","SendMessageRequest","SendMessageResponse","sendMessage","methodDescriptor_MessageService_SubscribeMessages","SERVER_STREAMING","SubscribeMessageRequest","SubscribeMessageResponse","subscribeMessages","serverStreaming","DiscussionServiceClient","DiscussionServicePromiseClient","methodDescriptor_DiscussionService_GetDiscussions","GetDiscussionsRequest","GetDiscussionsResponse","getDiscussions","methodDescriptor_DiscussionService_GetDiscussionHistoryByID","GetDiscussionHistoryByIDRequest","GetDiscussionHistoryResponse","getDiscussionHistoryByID","methodDescriptor_DiscussionService_GetDiscussionStatistics","GetDiscussionStatisticsRequest","GetDiscussionStatisticsResponse","getDiscussionStatistics","methodDescriptor_DiscussionService_AddDiscussion","AddDiscussionRequest","AddDiscussionResponse","addDiscussion","methodDescriptor_DiscussionService_UpdateDiscussionLastRead","UpdateDiscussionLastReadRequest","UpdateDiscussionResponse","updateDiscussionLastRead","methodDescriptor_DiscussionService_RemoveDiscussion","RemoveDiscussionRequest","RemoveDiscussionResponse","removeDiscussion","PaymentServiceClient","PaymentServicePromiseClient","methodDescriptor_PaymentService_CreateInvoice","CreateInvoiceRequest","CreateInvoiceResponse","createInvoice","methodDescriptor_PaymentService_LookupInvoice","LookupInvoiceRequest","LookupInvoiceResponse","lookupInvoice","module","exports","jspb","goog","global","Function","google_protobuf_descriptor_pb","exportSymbol","validator","FieldValidator","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","regex","getField","intGt","intLt","msgExists","humanError","floatGt","getOptionalFloatingPointField","floatLt","floatEpsilon","floatGte","floatLte","stringNotEmpty","repeatedCountMin","repeatedCountMax","lengthGt","lengthLt","lengthEq","isInEnum","uuidVer","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRegex","readInt64","setIntGt","setIntLt","readBool","setMsgExists","setHumanError","readDouble","setFloatGt","setFloatLt","setFloatEpsilon","setFloatGte","setFloatLte","setStringNotEmpty","setRepeatedCountMin","setRepeatedCountMax","setLengthGt","setLengthLt","setLengthEq","setIsInEnum","readInt32","setUuidVer","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","writeString","writeInt64","writeBool","writeDouble","writeInt32","getRegex","getFieldWithDefault","setField","clearRegex","hasRegex","getIntGt","clearIntGt","hasIntGt","getIntLt","clearIntLt","hasIntLt","getMsgExists","clearMsgExists","hasMsgExists","getHumanError","clearHumanError","hasHumanError","getFloatGt","clearFloatGt","hasFloatGt","getFloatLt","clearFloatLt","hasFloatLt","getFloatEpsilon","clearFloatEpsilon","hasFloatEpsilon","getFloatGte","clearFloatGte","hasFloatGte","getFloatLte","clearFloatLte","hasFloatLte","getStringNotEmpty","clearStringNotEmpty","hasStringNotEmpty","getRepeatedCountMin","clearRepeatedCountMin","hasRepeatedCountMin","getRepeatedCountMax","clearRepeatedCountMax","hasRepeatedCountMax","getLengthGt","clearLengthGt","hasLengthGt","getLengthLt","clearLengthLt","hasLengthLt","getLengthEq","clearLengthEq","hasLengthEq","getIsInEnum","clearIsInEnum","hasIsInEnum","getUuidVer","clearUuidVer","hasUuidVer","OneofValidator","required","setRequired","getRequired","clearRequired","hasRequired","field","ExtensionFieldInfo","FieldOptions","extensionsBinary","ExtensionFieldBinaryInfo","readMessage","writeMessage","extensions","oneof","OneofOptions","object","extend","attemptUsernameRead","read","window","localStorage","getItem","toString","attemptPasswordRead","authCreds","Buffer","from","google_protobuf_timestamp_pb","KeySetPageOptions","lastId","pageSize","reverse","readUint64","setLastId","setPageSize","setReverse","getLastId","writeUint64","getPageSize","getReverse","setProto3IntField","setProto3BooleanField","version","commit","commitHash","setVersion","setCommit","setCommitHash","length","getCommit","getCommitHash","setProto3StringField","NodeInfo","alias","address","setAlias","setAddress","getAlias","getAddress","Chain","chain","network","setChain","setNetwork","getChain","getNetwork","repeatedFields_","info","getInfo","chainsList","toObjectList","getChainsList","setInfo","addChains","writeRepeatedMessage","getWrapperField","setWrapperField","clearInfo","hasInfo","getRepeatedWrapperField","setChainsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearChainsList","walletConfirmedSat","walletUnconfirmedSat","channelLocalMsat","channelRemoteMsat","pendingOpenLocalMsat","pendingOpenRemoteMsat","unsettledLocalMsat","unsettledRemoteMsat","setWalletConfirmedSat","setWalletUnconfirmedSat","setChannelLocalMsat","setChannelRemoteMsat","setPendingOpenLocalMsat","setPendingOpenRemoteMsat","setUnsettledLocalMsat","setUnsettledRemoteMsat","getWalletConfirmedSat","getWalletUnconfirmedSat","getChannelLocalMsat","getChannelRemoteMsat","getPendingOpenLocalMsat","getPendingOpenRemoteMsat","getUnsettledLocalMsat","getUnsettledRemoteMsat","nodesList","getNodesList","addNodes","setNodesList","clearNodesList","hostport","setHostport","getHostport","amtMsat","pushAmtMsat","minInputConfs","targetConfirmationBlock","satPerVbyte","setAmtMsat","setPushAmtMsat","setMinInputConfs","readUint32","setTargetConfirmationBlock","setSatPerVbyte","getAmtMsat","getPushAmtMsat","getMinInputConfs","getTargetConfirmationBlock","writeUint32","getSatPerVbyte","fundingTxid","outputIndex","setFundingTxid","setOutputIndex","getFundingTxid","getOutputIndex","ContactInfo","node","getNode","id","setNode","setId","setDisplayName","getId","getDisplayName","clearNode","hasNode","contactsList","getContactsList","addContacts","setContactsList","clearContactsList","contact","getContact","setContact","clearContact","hasContact","discussionId","sender","receiver","senderVerified","payload","totalFeesMsat","sentTimestamp","getSentTimestamp","Timestamp","receivedTimestamp","getReceivedTimestamp","paymentRoutesList","getPaymentRoutesList","PaymentRoute","preimage","payReq","setDiscussionId","setSender","setReceiver","setSenderVerified","setPayload","setTotalFeesMsat","setSentTimestamp","setReceivedTimestamp","addPaymentRoutes","setPreimage","setPayReq","getDiscussionId","getSender","getReceiver","getSenderVerified","getPayload","getTotalFeesMsat","getPreimage","getPayReq","clearSentTimestamp","hasSentTimestamp","clearReceivedTimestamp","hasReceivedTimestamp","setPaymentRoutesList","clearPaymentRoutesList","hopsList","getHopsList","PaymentHop","totalTimelock","routeAmtMsat","routeFeesMsat","addHops","setTotalTimelock","setRouteAmtMsat","setRouteFeesMsat","getTotalTimelock","getRouteAmtMsat","getRouteFeesMsat","setHopsList","clearHopsList","chanId","hopAddress","amtToForwardMsat","feeMsat","setChanId","setHopAddress","setAmtToForwardMsat","setFeeMsat","getChanId","getHopAddress","getAmtToForwardMsat","getFeeMsat","MessageOptions","feeLimitMsat","anonymous","setFeeLimitMsat","setAnonymous","getFeeLimitMsat","getAnonymous","getOptions","setOptions","clearOptions","hasOptions","successProb","getMessage","setSuccessProb","setMessage","getSuccessProb","setProto3FloatField","clearMessage","hasMessage","sentMessage","getSentMessage","setSentMessage","clearSentMessage","hasSentMessage","receivedMessage","getReceivedMessage","setReceivedMessage","clearReceivedMessage","hasReceivedMessage","DiscussionInfo","participantsList","getRepeatedField","DiscussionOptions","lastReadMsgId","lastMsgId","addParticipants","setLastReadMsgId","setLastMsgId","getParticipantsList","writeRepeatedString","getLastReadMsgId","getLastMsgId","setParticipantsList","addToRepeatedField","clearParticipantsList","discussion","getDiscussion","setDiscussion","clearDiscussion","hasDiscussion","pageOptions","getPageOptions","setPageOptions","clearPageOptions","hasPageOptions","amtMsatSent","amtMsatReceived","amtMsatFees","messagesSent","messagesReceived","setAmtMsatSent","setAmtMsatReceived","setAmtMsatFees","setMessagesSent","setMessagesReceived","getAmtMsatSent","getAmtMsatReceived","getAmtMsatFees","getMessagesSent","getMessagesReceived","memo","expiry","pb_private","setMemo","setExpiry","setPrivate","getMemo","getExpiry","getPrivate","invoice","getInvoice","Invoice","setInvoice","clearInvoice","hasInvoice","hash","paymentRequest","valueMsat","amtPaidMsat","createdTimestamp","getCreatedTimestamp","settledTimestamp","getSettledTimestamp","routeHintsList","getRouteHintsList","RouteHint","state","addIndex","settleIndex","invoiceHtlcsList","getInvoiceHtlcsList","InvoiceHTLC","setHash","setPaymentRequest","setValueMsat","setAmtPaidMsat","setCreatedTimestamp","setSettledTimestamp","addRouteHints","readEnum","setState","setAddIndex","setSettleIndex","addInvoiceHtlcs","getHash","getPaymentRequest","getValueMsat","getAmtPaidMsat","getState","writeEnum","getAddIndex","getSettleIndex","clearCreatedTimestamp","hasCreatedTimestamp","clearSettledTimestamp","hasSettledTimestamp","setRouteHintsList","clearRouteHintsList","setProto3EnumField","setInvoiceHtlcsList","clearInvoiceHtlcsList","hopHintsList","getHopHintsList","HopHint","addHopHints","setHopHintsList","clearHopHintsList","pubkey","feeBaseMsat","feeRate","cltvExpiryDelta","setPubkey","setFeeBaseMsat","setFeeRate","setCltvExpiryDelta","getPubkey","getFeeBaseMsat","getFeeRate","getCltvExpiryDelta","acceptTimestamp","getAcceptTimestamp","resolveTimestamp","getResolveTimestamp","expiryHeight","setAcceptTimestamp","setResolveTimestamp","setExpiryHeight","getExpiryHeight","clearAcceptTimestamp","hasAcceptTimestamp","clearResolveTimestamp","hasResolveTimestamp","InvoiceState","INVOICE_OPEN","INVOICE_ACCEPTED","INVOICE_SETTLED","INVOICE_CANCELLED","InvoiceHTLCState","INVOICE_HTLC_ACCEPTED","INVOICE_HTLC_SETTLED","INVOICE_HTLC_CANCELLED","concatUserNames","props","users","res","forEach","elem","contactName","findContactName","findAlias","concat","substring","slice","concatUserAddresses","item","lookup","contacts","find","user","userLookup","routesToAddresses","routes","addressArray","route","lastHop","push","populateChatHistoryMetadata","chatHistory","previousElem","seconds","appendToChatHistory","setChatHistory","oldHistory","cryptoUtils","MessageInfo","prepareHopsArray","hops","temp","unshift","selfInfo","selectedMessage","dataSource","renderItem","className","Item","CopyOutlined","onClick","copyText","document","getElementById","select","setSelectionRange","execCommand","NotificationManager","onChange","isLast","msatToCurrentCryptoUnit","parseInt","selectedCryptoUnit","Date","now","Math","random","apiUrl","rpcClient","client","Object","req","messageOptions","err","a","messageClient","description","private","paymentClient","theme","menuDark","menuDarkLite","menuNormal","menuLight","sleep","ms","Promise","resolve","setTimeout","C13nImage","React","useState","focus","setFocus","automaticImageLoading","style","width","transition","smoothAnimations","src","title","cancelButtonProps","display","visible","bodyStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","screen","height","href","target","c13nLink","c13nLinkRef","c13nText","c13nInlineCode","paidPayreqs","myPaidPayreqs","checkPayreq","payreq","checkMyPayreq","console","log","lightningPayReq","renderers","image","mdProps","link","linkReference","text","inlineCode","payloadToDom","myMessage","payloadObj","JSON","parse","n","t","c13nMpToDom","c13nPpToDom","c","source","disallowedTypes","unwrapDisallowed","fontSize","border","borderRadius","padding","color","attL","u","invoiceObj","decode","e","invoiceTimeLeft","timeExpireDate","round","invoicePaid","millisatoshis","CheckOutlined","placement","onConfirm","createC13nPpMessage","selectedDiscussion","updateCurrentFunds","setLastFundChange","Number","okText","cancelText","type","margin","secondsToDhms","paddingLeft","createC13nMpMessage","attachmentList","messageObj","v","stringify","d","floor","h","m","exportTextMessage","ChatHistoryInput","selectedInput","setSelectedInput","currentFee","setCurrentFee","messageToSend","setMessageToSend","emojiPickerActive","setEmojiPickerActive","amount","setAmount","fileDialogActive","setFileDialogActive","imageURL","setImageURL","uploadLoading","setUploadLoading","payreqModalActive","setPayreqModalActive","payreqAmount","setPayreqAmount","payreqDescription","setPayreqDescription","payreqExpiry","setPayreqExpiry","payreqPrivate","setPayreqPrivate","currentCryptoAmtToMsat","anonymousActive","retrieveDefaultCryptoAmount","warning","useEffect","calculateFee","onBlur","trigger","overlay","FileImageOutlined","FormOutlined","setAnonymousActive","checkedChildren","EyeInvisibleOutlined","unCheckedChildren","EyeOutlined","disabled","PlusOutlined","TextArea","onFocus","updateLastMessageSeen","updateChatScroll","key","preventDefault","onKeyDown","shiftKey","placeholder","resize","scrollHeight","maxHeight","borderColor","SmileOutlined","marginLeft","selectedCryptoToVerbose","currentCryptoAmtToFiat","selectedFiatUnit","parseFloat","min","max","input","selectAmountInputText","numCast","isNaN","onEmojiClick","emoji","pickerStyle","backgroundColor","disableSearchBar","disableAutoFocus","disableSkinTonePicker","onMouseDown","ChatButton","onOk","uri","tags","createAttachment","show","onCancel","okButtonProps","LoadingOutlined","spin","orientation","accept","ress","error","selectPayreqAmountInputText","defaultValue","Option","defaultChecked","getDiscussionHistoryById","keySetPageOptions","discussionInfo","discussionOptions","participants","discussionClient","ChatHistoryStatistics","loaded","setLoaded","totalIncome","setTotalIncome","totalOutcome","setTotalOutcome","totalFees","setTotalFees","totalSent","setTotalSent","totalReceived","setTotalReceived","ArrowDownOutlined","ArrowUpOutlined","jdenticon","iconCache","generateIdenticon","size","Parser","icon","toSvg","UserPreview","setVisible","findUserByAddress","addr","splitURI","URI","split","ChatHistory","setOldListHeight","lastMessageSeen","setLastMessageSeen","noMoreHistory","setNoMoreHistory","feeModalVisible","setFeeModalVisible","statisticsModalVisible","setStatisticsModalVisible","rawMessageInfoModalVisible","setRawMessageInfoModalVisible","userPreviewVisible","setUserPreviewVisible","userPreviewUser","setUserPreviewUser","setSelectedMessage","pageLoaded","setPageLoaded","anonymousBucket","chatHistoryIcon","chatHistoryUsrName","history","hidden","calculateTextAlign","chatLayout","findSenderName","calculateFlexRowDirection","calculateChatHistoryMessageColor","calculatePartialFailureIndicatorDisplay","atBottom","scrollTop","clientHeight","loadHistory","fresh","setSelectedDiscussion","oldValue","async_selectedDiscusion","previousId","on","code","setAnonymousBucket","setChatScroll","element","scroll","top","behavior","monthToStr","unixToDate","unix","format","date","hours","getHours","minutes","getMinutes","getMonth","getDate","substr","getUTCFullYear","getFullYear","DoubleRightOutlined","sideSquashed","sideActivated","setSideActivated","EllipsisOutlined","Content","innerWidth","innerHeight","left","bottom","opacity","DownCircleOutlined","locale","emptyText","flexDirection","textAlign","chatIdenticons","marginTop","SafetyOutlined","CloseCircleOutlined","ExclamationCircleOutlined","myMessageColor","otherMessageColor","maxWidth","selectedPage","footer","msatAmtToFiat","data","saveMyMessageColor","setMyMessageColor","setItem","saveOtherMessageColor","setOtherMessageColor","messageColorsArray","UserSettings","url","Panel","header","checked","setAutomaticImageLoading","saveAutomaticImageLoadingSetting","setSmoothAnimations","saveSmoothAnimationsSetting","setChatIdenticons","saveChatIdenticonsSetting","setChatLayout","triangle","colors","onChangeComplete","hex","developerLogs","setDeveloperLogs","saveDeveloperLogsSetting","setSelectedCryptoUnit","setSelectedFiatUnit","label","backendVersion","channelClient","meta","nodeInfoClient","OpenChannel","setMode","lightningAddress","setLightningAddress","pushAmount","setPushAmount","minimumInputConfirmations","setMinimumInputConfirmations","targetConfirmationBlocks","setTargetConfirmationBlocks","success","defaultActiveKey","TabPane","tab","layout","ConnectPeer","params","UserFunds","walletConfirmedBalance","setWalletConfirmedBalance","walletUnconfirmedBalance","setWalletUnconfirmedBalance","channelTotalBalance","setChannelTotalBalance","pendingChannelBalance","setPendingChannelBalance","setChannelRemoteBalance","connectPeerModalVisible","setConnectPeerModalVisible","openChannelModalVisible","setOpenChannelModalVisible","contactClient","SearchUsers","aliasToSearch","setaliasToSearch","addressToSearch","setAddressToSearch","searchedAlias","setSearchedAlias","searchedAddress","setSearchedAddress","userSelected","setUserSelected","friendlyName","setFriendlyName","contactAddModalActive","setContactAddModalActive","contactRemoveModalActive","setContactRemoveModalActive","searchAliasLoading","setSearchAliasLoading","searchAliasEmptyText","setSearchAliasEmptyText","searchAddressLoading","setSearchAddressLoading","searchAddressEmptyText","setSearchAddressEmptyText","enteredAlias","setEnteredAlias","searchAliasTouched","setSearchAliasTouched","aliasFormValid","setAliasFormValid","enteredAddress","setEnteredAddress","searchAddressTouched","setSearchAddressTouched","addressFormValid","setAddressFormValid","enteredAliasIsValid","enteredAddressIsValid","searchUsersByAlias","searchUsersByAddress","onSubmit","event","SearchOutlined","itemLayout","inContacts","inDiscussion","discussions","includes","setSelectedPage","setDiscussions","oldDiscussions","MessageOutlined","UserDeleteOutlined","UserAddOutlined","parsedContact","setContacts","createContact","filter","Contacts","Logo","arcLogo","programizeLogo","addToAccounts","account","accounts","setAccounts","oldAccounts","saveAccounts","accountsArray","Accounts","addAccountModalVisible","setAddAccountModalVisible","deleteAccountModalVisible","setDeleteAccountModalVisible","credentialsModalVisible","setCredentialsModalVisible","usernameToUse","setUsernameToUse","passwordToUse","setPasswordToUse","urlToAdd","setUrlToAdd","selectedAccount","setSelectedAccount","loadAccount","deadline","setSeconds","getSeconds","getTime","setBackendVersion","setLoadAccount","credentialsModalLogin","location","reload","addAccountHandler","username","lastActive","sort","b","DeleteOutlined","removeFromAccounts","formLayout","labelCol","span","wrapperCol","VersionScreen","ConnectionScreen","GroupChat","setAliasToSearch","searchLoading","setSearchLoading","searchGroupTouched","setSearchGroupTouched","enteredGroupIsValid","groupInputIsInvalid","groupModalVisible","setGroupModalVisible","groupFormIsValid","setSelectedParticipants","oldParticipants","filtered","selectedParticipants","addr_list","createGroupDiscussion","MinusOutlined","Contents","contentsProps","page","getContentPage","Side","stringToSearch","SetStringToSearch","selectedSearchOption","setSelectedSearchOption","selectedSideDiscussion","setSelectedSideDiscussion","deleteDiscussionModalActive","setDeleteDiscussionModalActive","calculateUnreadStatus","body","requestFullscreen","setFundsInitVisible","setFundsInitDisabled","removeItem","backendStatus","msgStreamActive","parseLastFundChange","lastFundChange","parseCurrentFunds","parseCurrentFiatAmount","changePage","scrollbarColor","messageCounter","disc","titleNotificationChecker","name","toLowerCase","Group","optionType","Button","chainInfo","FundsInitialization","mainnetNodes","testnetNodes","defaultAmount","defaultPushAmount","setKey","loading","setLoading","mode","setDisabled","borderBottom","fontWeight","balance","https","getExchangeRates","setExchangeRates","get","resp","chunk","rates","Main","setInitialConnection","setBackendStatus","msgRxUp","setMsgRxUp","setMsgStreamActive","setSelfInfo","setChainInfo","setUsers","currentFunds","setCurrentFunds","setSideSquashed","exchangeRates","fundsInitVisible","setBalance","fetchAccountData","fetchUsers","fetchContacts","fetchDiscussions","loadSettings","loadAutomaticImageLoadingSetting","loadSmoothAnimationsSetting","loadSelectedCryptoUnit","loadSelectedFiatUnit","loadChatIdenticonsSetting","loadChatLayoutSetting","loadMyMessageColor","loadOtherMessageColor","loadDeveloperLogsSetting","calculateFundsInitialization","modalDisabled","fundColor","newAmount","oldAmount","oldFunds","fundsWrapper","mainProps","pageName","sideMenuAction","initial","old","oldStatus","parsedContacts","map","discussionsArray","initializeExchangeRates","upStatusChecker","setInterval","loadAccounts","streamValue","startTime","setHours","curPage","oldUsers","oldPage","aliasLookup","directlyToRoom","oldSelectedDiscussion","messageText","hasFocus","Audio","notificationAudio","play","Notification","requestPermission","enterTimeout","leaveTimeout","onResize","windowWidth","App","ReactDOM","render","cryptoRate","toFixed","rate","btc","satToCurrentCryptoUnit","satAmt","msatAmt","unit"],"mappings":"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","file":"static/js/main.7185a0c0.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for services\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')\n\nvar validator_pb = require('./validator_pb.js')\nconst proto = {};\nproto.services = require('./rpc_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.NodeInfoServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.NodeInfoServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.VersionRequest,\n *   !proto.services.Version>}\n */\nconst methodDescriptor_NodeInfoService_GetVersion = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetVersion',\n  grpc.web.MethodType.UNARY,\n  proto.services.VersionRequest,\n  proto.services.Version,\n  /**\n   * @param {!proto.services.VersionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.Version.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.VersionRequest,\n *   !proto.services.Version>}\n */\nconst methodInfo_NodeInfoService_GetVersion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.Version,\n  /**\n   * @param {!proto.services.VersionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.Version.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.VersionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.Version)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.Version>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getVersion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetVersion',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetVersion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.VersionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.Version>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getVersion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetVersion',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetVersion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SelfInfoRequest,\n *   !proto.services.SelfInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetSelfInfo = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetSelfInfo',\n  grpc.web.MethodType.UNARY,\n  proto.services.SelfInfoRequest,\n  proto.services.SelfInfoResponse,\n  /**\n   * @param {!proto.services.SelfInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SelfInfoRequest,\n *   !proto.services.SelfInfoResponse>}\n */\nconst methodInfo_NodeInfoService_GetSelfInfo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SelfInfoResponse,\n  /**\n   * @param {!proto.services.SelfInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SelfInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SelfInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SelfInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getSelfInfo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfInfo',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfInfo,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SelfInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SelfInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getSelfInfo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfInfo',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfInfo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SelfBalanceRequest,\n *   !proto.services.SelfBalanceResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetSelfBalance = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetSelfBalance',\n  grpc.web.MethodType.UNARY,\n  proto.services.SelfBalanceRequest,\n  proto.services.SelfBalanceResponse,\n  /**\n   * @param {!proto.services.SelfBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SelfBalanceRequest,\n *   !proto.services.SelfBalanceResponse>}\n */\nconst methodInfo_NodeInfoService_GetSelfBalance = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SelfBalanceResponse,\n  /**\n   * @param {!proto.services.SelfBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SelfBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SelfBalanceResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SelfBalanceResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getSelfBalance =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfBalance',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfBalance,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SelfBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SelfBalanceResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getSelfBalance =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfBalance',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfBalance);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetNodesRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetNodes = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetNodes',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetNodesRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.GetNodesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetNodesRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_GetNodes = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.GetNodesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetNodesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getNodes =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetNodes',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetNodes,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetNodesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getNodes =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetNodes',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetNodes);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SearchNodeByAddressRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_SearchNodeByAddress = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/SearchNodeByAddress',\n  grpc.web.MethodType.UNARY,\n  proto.services.SearchNodeByAddressRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SearchNodeByAddressRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_SearchNodeByAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SearchNodeByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.searchNodeByAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SearchNodeByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.searchNodeByAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAddress);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SearchNodeByAliasRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_SearchNodeByAlias = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/SearchNodeByAlias',\n  grpc.web.MethodType.UNARY,\n  proto.services.SearchNodeByAliasRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAliasRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SearchNodeByAliasRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_SearchNodeByAlias = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAliasRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SearchNodeByAliasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.searchNodeByAlias =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAlias',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAlias,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SearchNodeByAliasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.searchNodeByAlias =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAlias',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAlias);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.ConnectNodeRequest,\n *   !proto.services.ConnectNodeResponse>}\n */\nconst methodDescriptor_NodeInfoService_ConnectNode = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/ConnectNode',\n  grpc.web.MethodType.UNARY,\n  proto.services.ConnectNodeRequest,\n  proto.services.ConnectNodeResponse,\n  /**\n   * @param {!proto.services.ConnectNodeRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.ConnectNodeResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.ConnectNodeRequest,\n *   !proto.services.ConnectNodeResponse>}\n */\nconst methodInfo_NodeInfoService_ConnectNode = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.ConnectNodeResponse,\n  /**\n   * @param {!proto.services.ConnectNodeRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.ConnectNodeResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.ConnectNodeRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.ConnectNodeResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.ConnectNodeResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.connectNode =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/ConnectNode',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_ConnectNode,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.ConnectNodeRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.ConnectNodeResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.connectNode =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/ConnectNode',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_ConnectNode);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ChannelServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ChannelServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.OpenChannelRequest,\n *   !proto.services.OpenChannelResponse>}\n */\nconst methodDescriptor_ChannelService_OpenChannel = new grpc.web.MethodDescriptor(\n  '/services.ChannelService/OpenChannel',\n  grpc.web.MethodType.UNARY,\n  proto.services.OpenChannelRequest,\n  proto.services.OpenChannelResponse,\n  /**\n   * @param {!proto.services.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.OpenChannelResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.OpenChannelRequest,\n *   !proto.services.OpenChannelResponse>}\n */\nconst methodInfo_ChannelService_OpenChannel = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.OpenChannelResponse,\n  /**\n   * @param {!proto.services.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.OpenChannelResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.OpenChannelResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.OpenChannelResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ChannelServiceClient.prototype.openChannel =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ChannelService/OpenChannel',\n      request,\n      metadata || {},\n      methodDescriptor_ChannelService_OpenChannel,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.OpenChannelResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ChannelServicePromiseClient.prototype.openChannel =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ChannelService/OpenChannel',\n      request,\n      metadata || {},\n      methodDescriptor_ChannelService_OpenChannel);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ContactServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ContactServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetContactsRequest,\n *   !proto.services.GetContactsResponse>}\n */\nconst methodDescriptor_ContactService_GetContacts = new grpc.web.MethodDescriptor(\n  '/services.ContactService/GetContacts',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetContactsRequest,\n  proto.services.GetContactsResponse,\n  /**\n   * @param {!proto.services.GetContactsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetContactsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetContactsRequest,\n *   !proto.services.GetContactsResponse>}\n */\nconst methodInfo_ContactService_GetContacts = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetContactsResponse,\n  /**\n   * @param {!proto.services.GetContactsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetContactsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetContactsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.GetContactsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetContactsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.getContacts =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/GetContacts',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_GetContacts,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetContactsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.GetContactsResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.getContacts =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/GetContacts',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_GetContacts);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.AddContactRequest,\n *   !proto.services.AddContactResponse>}\n */\nconst methodDescriptor_ContactService_AddContact = new grpc.web.MethodDescriptor(\n  '/services.ContactService/AddContact',\n  grpc.web.MethodType.UNARY,\n  proto.services.AddContactRequest,\n  proto.services.AddContactResponse,\n  /**\n   * @param {!proto.services.AddContactRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.AddContactRequest,\n *   !proto.services.AddContactResponse>}\n */\nconst methodInfo_ContactService_AddContact = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.AddContactResponse,\n  /**\n   * @param {!proto.services.AddContactRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.AddContactRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.AddContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.AddContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.addContact =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/AddContact',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_AddContact,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.AddContactRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.AddContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.addContact =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/AddContact',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_AddContact);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveContactByIDRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodDescriptor_ContactService_RemoveContactByID = new grpc.web.MethodDescriptor(\n  '/services.ContactService/RemoveContactByID',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveContactByIDRequest,\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveContactByIDRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodInfo_ContactService_RemoveContactByID = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveContactByIDRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.removeContactByID =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByID',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByID,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveContactByIDRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.removeContactByID =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByID',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByID);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveContactByAddressRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodDescriptor_ContactService_RemoveContactByAddress = new grpc.web.MethodDescriptor(\n  '/services.ContactService/RemoveContactByAddress',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveContactByAddressRequest,\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveContactByAddressRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodInfo_ContactService_RemoveContactByAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveContactByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.removeContactByAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveContactByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.removeContactByAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByAddress);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.MessageServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.MessageServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.EstimateMessageRequest,\n *   !proto.services.EstimateMessageResponse>}\n */\nconst methodDescriptor_MessageService_EstimateMessage = new grpc.web.MethodDescriptor(\n  '/services.MessageService/EstimateMessage',\n  grpc.web.MethodType.UNARY,\n  proto.services.EstimateMessageRequest,\n  proto.services.EstimateMessageResponse,\n  /**\n   * @param {!proto.services.EstimateMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.EstimateMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.EstimateMessageRequest,\n *   !proto.services.EstimateMessageResponse>}\n */\nconst methodInfo_MessageService_EstimateMessage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.EstimateMessageResponse,\n  /**\n   * @param {!proto.services.EstimateMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.EstimateMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.EstimateMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.EstimateMessageResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.EstimateMessageResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.estimateMessage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.MessageService/EstimateMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_EstimateMessage,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.EstimateMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.EstimateMessageResponse>}\n *     Promise that resolves to the response\n */\nproto.services.MessageServicePromiseClient.prototype.estimateMessage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.MessageService/EstimateMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_EstimateMessage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SendMessageRequest,\n *   !proto.services.SendMessageResponse>}\n */\nconst methodDescriptor_MessageService_SendMessage = new grpc.web.MethodDescriptor(\n  '/services.MessageService/SendMessage',\n  grpc.web.MethodType.UNARY,\n  proto.services.SendMessageRequest,\n  proto.services.SendMessageResponse,\n  /**\n   * @param {!proto.services.SendMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SendMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SendMessageRequest,\n *   !proto.services.SendMessageResponse>}\n */\nconst methodInfo_MessageService_SendMessage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SendMessageResponse,\n  /**\n   * @param {!proto.services.SendMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SendMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SendMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SendMessageResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SendMessageResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.sendMessage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.MessageService/SendMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SendMessage,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SendMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SendMessageResponse>}\n *     Promise that resolves to the response\n */\nproto.services.MessageServicePromiseClient.prototype.sendMessage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.MessageService/SendMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SendMessage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SubscribeMessageRequest,\n *   !proto.services.SubscribeMessageResponse>}\n */\nconst methodDescriptor_MessageService_SubscribeMessages = new grpc.web.MethodDescriptor(\n  '/services.MessageService/SubscribeMessages',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.SubscribeMessageRequest,\n  proto.services.SubscribeMessageResponse,\n  /**\n   * @param {!proto.services.SubscribeMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SubscribeMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SubscribeMessageRequest,\n *   !proto.services.SubscribeMessageResponse>}\n */\nconst methodInfo_MessageService_SubscribeMessages = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SubscribeMessageResponse,\n  /**\n   * @param {!proto.services.SubscribeMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SubscribeMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SubscribeMessageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.SubscribeMessageResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.subscribeMessages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.MessageService/SubscribeMessages',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SubscribeMessages);\n};\n\n\n/**\n * @param {!proto.services.SubscribeMessageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.SubscribeMessageResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServicePromiseClient.prototype.subscribeMessages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.MessageService/SubscribeMessages',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SubscribeMessages);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.DiscussionServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.DiscussionServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionsRequest,\n *   !proto.services.GetDiscussionsResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussions = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussions',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.GetDiscussionsRequest,\n  proto.services.GetDiscussionsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionsRequest,\n *   !proto.services.GetDiscussionsResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussions = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionsResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussions =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussions',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussions);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionsResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussions =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussions',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussions);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionHistoryByIDRequest,\n *   !proto.services.GetDiscussionHistoryResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussionHistoryByID = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussionHistoryByID',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.GetDiscussionHistoryByIDRequest,\n  proto.services.GetDiscussionHistoryResponse,\n  /**\n   * @param {!proto.services.GetDiscussionHistoryByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionHistoryResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionHistoryByIDRequest,\n *   !proto.services.GetDiscussionHistoryResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussionHistoryByID = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionHistoryResponse,\n  /**\n   * @param {!proto.services.GetDiscussionHistoryByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionHistoryResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionHistoryResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussionHistoryByID =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionHistoryByID',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionHistoryByID);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionHistoryResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussionHistoryByID =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionHistoryByID',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionHistoryByID);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionStatisticsRequest,\n *   !proto.services.GetDiscussionStatisticsResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussionStatistics = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussionStatistics',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetDiscussionStatisticsRequest,\n  proto.services.GetDiscussionStatisticsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionStatisticsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionStatisticsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionStatisticsRequest,\n *   !proto.services.GetDiscussionStatisticsResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussionStatistics = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionStatisticsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionStatisticsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionStatisticsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionStatisticsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.GetDiscussionStatisticsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionStatisticsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussionStatistics =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionStatistics',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionStatistics,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionStatisticsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.GetDiscussionStatisticsResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussionStatistics =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionStatistics',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionStatistics);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.AddDiscussionRequest,\n *   !proto.services.AddDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_AddDiscussion = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/AddDiscussion',\n  grpc.web.MethodType.UNARY,\n  proto.services.AddDiscussionRequest,\n  proto.services.AddDiscussionResponse,\n  /**\n   * @param {!proto.services.AddDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.AddDiscussionRequest,\n *   !proto.services.AddDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_AddDiscussion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.AddDiscussionResponse,\n  /**\n   * @param {!proto.services.AddDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.AddDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.AddDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.AddDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.addDiscussion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/AddDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_AddDiscussion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.AddDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.AddDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.addDiscussion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/AddDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_AddDiscussion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.UpdateDiscussionLastReadRequest,\n *   !proto.services.UpdateDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_UpdateDiscussionLastRead = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/UpdateDiscussionLastRead',\n  grpc.web.MethodType.UNARY,\n  proto.services.UpdateDiscussionLastReadRequest,\n  proto.services.UpdateDiscussionResponse,\n  /**\n   * @param {!proto.services.UpdateDiscussionLastReadRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.UpdateDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.UpdateDiscussionLastReadRequest,\n *   !proto.services.UpdateDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_UpdateDiscussionLastRead = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.UpdateDiscussionResponse,\n  /**\n   * @param {!proto.services.UpdateDiscussionLastReadRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.UpdateDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.UpdateDiscussionLastReadRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.UpdateDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.UpdateDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.updateDiscussionLastRead =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/UpdateDiscussionLastRead',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_UpdateDiscussionLastRead,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.UpdateDiscussionLastReadRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.UpdateDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.updateDiscussionLastRead =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/UpdateDiscussionLastRead',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_UpdateDiscussionLastRead);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveDiscussionRequest,\n *   !proto.services.RemoveDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_RemoveDiscussion = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/RemoveDiscussion',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveDiscussionRequest,\n  proto.services.RemoveDiscussionResponse,\n  /**\n   * @param {!proto.services.RemoveDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveDiscussionRequest,\n *   !proto.services.RemoveDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_RemoveDiscussion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveDiscussionResponse,\n  /**\n   * @param {!proto.services.RemoveDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.removeDiscussion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/RemoveDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_RemoveDiscussion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.removeDiscussion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/RemoveDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_RemoveDiscussion);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.PaymentServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.PaymentServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.CreateInvoiceRequest,\n *   !proto.services.CreateInvoiceResponse>}\n */\nconst methodDescriptor_PaymentService_CreateInvoice = new grpc.web.MethodDescriptor(\n  '/services.PaymentService/CreateInvoice',\n  grpc.web.MethodType.UNARY,\n  proto.services.CreateInvoiceRequest,\n  proto.services.CreateInvoiceResponse,\n  /**\n   * @param {!proto.services.CreateInvoiceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.CreateInvoiceResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.CreateInvoiceRequest,\n *   !proto.services.CreateInvoiceResponse>}\n */\nconst methodInfo_PaymentService_CreateInvoice = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.CreateInvoiceResponse,\n  /**\n   * @param {!proto.services.CreateInvoiceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.CreateInvoiceResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.CreateInvoiceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.CreateInvoiceResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.CreateInvoiceResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.PaymentServiceClient.prototype.createInvoice =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.PaymentService/CreateInvoice',\n      request,\n      metadata || {},\n      methodDescriptor_PaymentService_CreateInvoice,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.CreateInvoiceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.CreateInvoiceResponse>}\n *     Promise that resolves to the response\n */\nproto.services.PaymentServicePromiseClient.prototype.createInvoice =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.PaymentService/CreateInvoice',\n      request,\n      metadata || {},\n      methodDescriptor_PaymentService_CreateInvoice);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.LookupInvoiceRequest,\n *   !proto.services.LookupInvoiceResponse>}\n */\nconst methodDescriptor_PaymentService_LookupInvoice = new grpc.web.MethodDescriptor(\n  '/services.PaymentService/LookupInvoice',\n  grpc.web.MethodType.UNARY,\n  proto.services.LookupInvoiceRequest,\n  proto.services.LookupInvoiceResponse,\n  /**\n   * @param {!proto.services.LookupInvoiceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.LookupInvoiceResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.LookupInvoiceRequest,\n *   !proto.services.LookupInvoiceResponse>}\n */\nconst methodInfo_PaymentService_LookupInvoice = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.LookupInvoiceResponse,\n  /**\n   * @param {!proto.services.LookupInvoiceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.LookupInvoiceResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.LookupInvoiceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.LookupInvoiceResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.LookupInvoiceResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.PaymentServiceClient.prototype.lookupInvoice =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.PaymentService/LookupInvoice',\n      request,\n      metadata || {},\n      methodDescriptor_PaymentService_LookupInvoice,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.LookupInvoiceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.LookupInvoiceResponse>}\n *     Promise that resolves to the response\n */\nproto.services.PaymentServicePromiseClient.prototype.lookupInvoice =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.PaymentService/LookupInvoice',\n      request,\n      metadata || {},\n      methodDescriptor_PaymentService_LookupInvoice);\n};\n\n\nmodule.exports = proto.services;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\ngoog.exportSymbol('proto.validator.FieldValidator', null, global);\ngoog.exportSymbol('proto.validator.OneofValidator', null, global);\ngoog.exportSymbol('proto.validator.field', null, global);\ngoog.exportSymbol('proto.validator.oneof', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.validator.FieldValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.validator.FieldValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.validator.FieldValidator.displayName = 'proto.validator.FieldValidator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.validator.FieldValidator.prototype.toObject = function(opt_includeInstance) {\n    return proto.validator.FieldValidator.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.validator.FieldValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.validator.FieldValidator.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      regex: jspb.Message.getField(msg, 1),\n      intGt: jspb.Message.getField(msg, 2),\n      intLt: jspb.Message.getField(msg, 3),\n      msgExists: jspb.Message.getField(msg, 4),\n      humanError: jspb.Message.getField(msg, 5),\n      floatGt: jspb.Message.getOptionalFloatingPointField(msg, 6),\n      floatLt: jspb.Message.getOptionalFloatingPointField(msg, 7),\n      floatEpsilon: jspb.Message.getOptionalFloatingPointField(msg, 8),\n      floatGte: jspb.Message.getOptionalFloatingPointField(msg, 9),\n      floatLte: jspb.Message.getOptionalFloatingPointField(msg, 10),\n      stringNotEmpty: jspb.Message.getField(msg, 11),\n      repeatedCountMin: jspb.Message.getField(msg, 12),\n      repeatedCountMax: jspb.Message.getField(msg, 13),\n      lengthGt: jspb.Message.getField(msg, 14),\n      lengthLt: jspb.Message.getField(msg, 15),\n      lengthEq: jspb.Message.getField(msg, 16),\n      isInEnum: jspb.Message.getField(msg, 17),\n      uuidVer: jspb.Message.getField(msg, 18)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.validator.FieldValidator}\n */\nproto.validator.FieldValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.validator.FieldValidator;\n  return proto.validator.FieldValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.validator.FieldValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.validator.FieldValidator}\n */\nproto.validator.FieldValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRegex(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setIntGt(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setIntLt(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMsgExists(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHumanError(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatGt(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatLt(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatEpsilon(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatGte(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatLte(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStringNotEmpty(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRepeatedCountMin(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRepeatedCountMax(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthGt(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthLt(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthEq(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsInEnum(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUuidVer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.validator.FieldValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.validator.FieldValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.validator.FieldValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.validator.FieldValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeDouble(\n      6,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeDouble(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeDouble(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeDouble(\n      9,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeDouble(\n      10,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));\n  if (f != null) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 14));\n  if (f != null) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 15));\n  if (f != null) {\n    writer.writeInt64(\n      15,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 16));\n  if (f != null) {\n    writer.writeInt64(\n      16,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));\n  if (f != null) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 18));\n  if (f != null) {\n    writer.writeInt32(\n      18,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string regex = 1;\n * @return {string}\n */\nproto.validator.FieldValidator.prototype.getRegex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.validator.FieldValidator.prototype.setRegex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRegex = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRegex = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 int_gt = 2;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getIntGt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setIntGt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIntGt = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIntGt = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 int_lt = 3;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getIntLt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setIntLt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIntLt = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIntLt = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool msg_exists = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getMsgExists = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setMsgExists = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearMsgExists = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasMsgExists = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string human_error = 5;\n * @return {string}\n */\nproto.validator.FieldValidator.prototype.getHumanError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.validator.FieldValidator.prototype.setHumanError = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearHumanError = function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasHumanError = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional double float_gt = 6;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatGt = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatGt = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatGt = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatGt = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional double float_lt = 7;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatLt = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatLt = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatLt = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatLt = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional double float_epsilon = 8;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatEpsilon = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatEpsilon = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatEpsilon = function() {\n  jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatEpsilon = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional double float_gte = 9;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatGte = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatGte = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatGte = function() {\n  jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatGte = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional double float_lte = 10;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatLte = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatLte = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatLte = function() {\n  jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatLte = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional bool string_not_empty = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getStringNotEmpty = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setStringNotEmpty = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearStringNotEmpty = function() {\n  jspb.Message.setField(this, 11, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasStringNotEmpty = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional int64 repeated_count_min = 12;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getRepeatedCountMin = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setRepeatedCountMin = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRepeatedCountMin = function() {\n  jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRepeatedCountMin = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional int64 repeated_count_max = 13;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getRepeatedCountMax = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setRepeatedCountMax = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRepeatedCountMax = function() {\n  jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRepeatedCountMax = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional int64 length_gt = 14;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthGt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthGt = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthGt = function() {\n  jspb.Message.setField(this, 14, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthGt = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional int64 length_lt = 15;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthLt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthLt = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthLt = function() {\n  jspb.Message.setField(this, 15, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthLt = function() {\n  return jspb.Message.getField(this, 15) != null;\n};\n\n\n/**\n * optional int64 length_eq = 16;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthEq = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthEq = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthEq = function() {\n  jspb.Message.setField(this, 16, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthEq = function() {\n  return jspb.Message.getField(this, 16) != null;\n};\n\n\n/**\n * optional bool is_in_enum = 17;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getIsInEnum = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setIsInEnum = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIsInEnum = function() {\n  jspb.Message.setField(this, 17, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIsInEnum = function() {\n  return jspb.Message.getField(this, 17) != null;\n};\n\n\n/**\n * optional int32 uuid_ver = 18;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getUuidVer = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setUuidVer = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearUuidVer = function() {\n  jspb.Message.setField(this, 18, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasUuidVer = function() {\n  return jspb.Message.getField(this, 18) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.validator.OneofValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.validator.OneofValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.validator.OneofValidator.displayName = 'proto.validator.OneofValidator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.validator.OneofValidator.prototype.toObject = function(opt_includeInstance) {\n    return proto.validator.OneofValidator.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.validator.OneofValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.validator.OneofValidator.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      required: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.validator.OneofValidator}\n */\nproto.validator.OneofValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.validator.OneofValidator;\n  return proto.validator.OneofValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.validator.OneofValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.validator.OneofValidator}\n */\nproto.validator.OneofValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRequired(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.validator.OneofValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.validator.OneofValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.validator.OneofValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.validator.OneofValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool required = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.OneofValidator.prototype.getRequired = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.OneofValidator.prototype.setRequired = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.validator.OneofValidator.prototype.clearRequired = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.OneofValidator.prototype.hasRequired = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `field`.\n * @type {!jspb.ExtensionFieldInfo<!proto.validator.FieldValidator>}\n */\nproto.validator.field = new jspb.ExtensionFieldInfo(\n  65020,\n  {field: 0},\n  proto.validator.FieldValidator,\n  /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n    proto.validator.FieldValidator.toObject),\n  0);\n\ngoogle_protobuf_descriptor_pb.FieldOptions.extensionsBinary[65020] = new jspb.ExtensionFieldBinaryInfo(\n  proto.validator.field,\n  jspb.BinaryReader.prototype.readMessage,\n  jspb.BinaryWriter.prototype.writeMessage,\n  proto.validator.FieldValidator.serializeBinaryToWriter,\n  proto.validator.FieldValidator.deserializeBinaryFromReader,\n  false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.FieldOptions.extensions[65020] = proto.validator.field;\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `oneof`.\n * @type {!jspb.ExtensionFieldInfo<!proto.validator.OneofValidator>}\n */\nproto.validator.oneof = new jspb.ExtensionFieldInfo(\n  65021,\n  {oneof: 0},\n  proto.validator.OneofValidator,\n  /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n    proto.validator.OneofValidator.toObject),\n  0);\n\ngoogle_protobuf_descriptor_pb.OneofOptions.extensionsBinary[65021] = new jspb.ExtensionFieldBinaryInfo(\n  proto.validator.oneof,\n  jspb.BinaryReader.prototype.readMessage,\n  jspb.BinaryWriter.prototype.writeMessage,\n  proto.validator.OneofValidator.serializeBinaryToWriter,\n  proto.validator.OneofValidator.deserializeBinaryFromReader,\n  false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.OneofOptions.extensions[65021] = proto.validator.oneof;\n\ngoog.object.extend(exports, proto.validator);\n","const attemptUsernameRead = () => {\n  const read = window.localStorage.getItem('httpUsername');\n  if (read) {\n    return read.toString();\n  }\n};\n\nconst attemptPasswordRead = () => {\n  const read = window.localStorage.getItem('httpPassword');\n  if (read) {\n    return read.toString();\n  }\n};\n\nconst authCreds = () => {\n  // console.log({\"Authorization\": 'Basic ' + Buffer.from(`${attemptUsernameRead()}:${attemptPasswordRead()}`).toString('base64')})\n  return {\"Authorization\": 'Basic ' + Buffer.from(`${attemptUsernameRead()}:${attemptPasswordRead()}`).toString('base64')};\n};\n\nexport default authCreds;","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\nvar validator_pb = require('./validator_pb.js');\ngoog.exportSymbol('proto.services.AddContactRequest', null, global);\ngoog.exportSymbol('proto.services.AddContactResponse', null, global);\ngoog.exportSymbol('proto.services.AddDiscussionRequest', null, global);\ngoog.exportSymbol('proto.services.AddDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.Chain', null, global);\ngoog.exportSymbol('proto.services.ConnectNodeRequest', null, global);\ngoog.exportSymbol('proto.services.ConnectNodeResponse', null, global);\ngoog.exportSymbol('proto.services.ContactInfo', null, global);\ngoog.exportSymbol('proto.services.CreateInvoiceRequest', null, global);\ngoog.exportSymbol('proto.services.CreateInvoiceResponse', null, global);\ngoog.exportSymbol('proto.services.DiscussionInfo', null, global);\ngoog.exportSymbol('proto.services.DiscussionOptions', null, global);\ngoog.exportSymbol('proto.services.EstimateMessageRequest', null, global);\ngoog.exportSymbol('proto.services.EstimateMessageResponse', null, global);\ngoog.exportSymbol('proto.services.GetContactsRequest', null, global);\ngoog.exportSymbol('proto.services.GetContactsResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionHistoryByIDRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionHistoryResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionStatisticsRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionStatisticsResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionsRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionsResponse', null, global);\ngoog.exportSymbol('proto.services.GetNodesRequest', null, global);\ngoog.exportSymbol('proto.services.HopHint', null, global);\ngoog.exportSymbol('proto.services.Invoice', null, global);\ngoog.exportSymbol('proto.services.InvoiceHTLC', null, global);\ngoog.exportSymbol('proto.services.InvoiceHTLCState', null, global);\ngoog.exportSymbol('proto.services.InvoiceState', null, global);\ngoog.exportSymbol('proto.services.KeySetPageOptions', null, global);\ngoog.exportSymbol('proto.services.LookupInvoiceRequest', null, global);\ngoog.exportSymbol('proto.services.LookupInvoiceResponse', null, global);\ngoog.exportSymbol('proto.services.Message', null, global);\ngoog.exportSymbol('proto.services.MessageOptions', null, global);\ngoog.exportSymbol('proto.services.NodeInfo', null, global);\ngoog.exportSymbol('proto.services.NodeInfoResponse', null, global);\ngoog.exportSymbol('proto.services.OpenChannelRequest', null, global);\ngoog.exportSymbol('proto.services.OpenChannelResponse', null, global);\ngoog.exportSymbol('proto.services.PaymentHop', null, global);\ngoog.exportSymbol('proto.services.PaymentRoute', null, global);\ngoog.exportSymbol('proto.services.RemoveContactByAddressRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveContactByIDRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveContactResponse', null, global);\ngoog.exportSymbol('proto.services.RemoveDiscussionRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.RouteHint', null, global);\ngoog.exportSymbol('proto.services.SearchNodeByAddressRequest', null, global);\ngoog.exportSymbol('proto.services.SearchNodeByAliasRequest', null, global);\ngoog.exportSymbol('proto.services.SelfBalanceRequest', null, global);\ngoog.exportSymbol('proto.services.SelfBalanceResponse', null, global);\ngoog.exportSymbol('proto.services.SelfInfoRequest', null, global);\ngoog.exportSymbol('proto.services.SelfInfoResponse', null, global);\ngoog.exportSymbol('proto.services.SendMessageRequest', null, global);\ngoog.exportSymbol('proto.services.SendMessageResponse', null, global);\ngoog.exportSymbol('proto.services.SubscribeMessageRequest', null, global);\ngoog.exportSymbol('proto.services.SubscribeMessageResponse', null, global);\ngoog.exportSymbol('proto.services.UpdateDiscussionLastReadRequest', null, global);\ngoog.exportSymbol('proto.services.UpdateDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.Version', null, global);\ngoog.exportSymbol('proto.services.VersionRequest', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.KeySetPageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.KeySetPageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.KeySetPageOptions.displayName = 'proto.services.KeySetPageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.KeySetPageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.KeySetPageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.KeySetPageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.KeySetPageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      lastId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      reverse: jspb.Message.getFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.KeySetPageOptions}\n */\nproto.services.KeySetPageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.KeySetPageOptions;\n  return proto.services.KeySetPageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.KeySetPageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.KeySetPageOptions}\n */\nproto.services.KeySetPageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPageSize(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReverse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.KeySetPageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.KeySetPageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.KeySetPageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.KeySetPageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPageSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getReverse();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 last_id = 1;\n * @return {number}\n */\nproto.services.KeySetPageOptions.prototype.getLastId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.KeySetPageOptions.prototype.setLastId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 page_size = 2;\n * @return {number}\n */\nproto.services.KeySetPageOptions.prototype.getPageSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.KeySetPageOptions.prototype.setPageSize = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool reverse = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.KeySetPageOptions.prototype.getReverse = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.KeySetPageOptions.prototype.setReverse = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.VersionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.VersionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.VersionRequest.displayName = 'proto.services.VersionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.VersionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.VersionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.VersionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.VersionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.VersionRequest}\n */\nproto.services.VersionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.VersionRequest;\n  return proto.services.VersionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.VersionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.VersionRequest}\n */\nproto.services.VersionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.VersionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.VersionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.VersionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.VersionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Version = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.Version, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Version.displayName = 'proto.services.Version';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Version.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Version.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Version} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Version.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      version: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      commit: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      commitHash: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Version}\n */\nproto.services.Version.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Version;\n  return proto.services.Version.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Version} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Version}\n */\nproto.services.Version.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommit(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommitHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Version.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Version.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Version} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Version.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCommit();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCommitHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string version = 1;\n * @return {string}\n */\nproto.services.Version.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setVersion = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string commit = 2;\n * @return {string}\n */\nproto.services.Version.prototype.getCommit = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setCommit = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string commit_hash = 3;\n * @return {string}\n */\nproto.services.Version.prototype.getCommitHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setCommitHash = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.NodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.NodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.NodeInfo.displayName = 'proto.services.NodeInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.NodeInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.NodeInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.NodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.NodeInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      alias: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      address: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.NodeInfo;\n  return proto.services.NodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.NodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.NodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.NodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.NodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.NodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string alias = 1;\n * @return {string}\n */\nproto.services.NodeInfo.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.NodeInfo.prototype.setAlias = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.services.NodeInfo.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.NodeInfo.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfInfoRequest.displayName = 'proto.services.SelfInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfInfoRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfInfoRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfInfoRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfInfoRequest}\n */\nproto.services.SelfInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfInfoRequest;\n  return proto.services.SelfInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfInfoRequest}\n */\nproto.services.SelfInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Chain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.Chain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Chain.displayName = 'proto.services.Chain';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Chain.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Chain.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Chain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Chain.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      chain: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      network: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Chain}\n */\nproto.services.Chain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Chain;\n  return proto.services.Chain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Chain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Chain}\n */\nproto.services.Chain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChain(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Chain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Chain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Chain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Chain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChain();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string chain = 1;\n * @return {string}\n */\nproto.services.Chain.prototype.getChain = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Chain.prototype.setChain = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string network = 2;\n * @return {string}\n */\nproto.services.Chain.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Chain.prototype.setNetwork = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.SelfInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.SelfInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfInfoResponse.displayName = 'proto.services.SelfInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.SelfInfoResponse.repeatedFields_ = [2];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfInfoResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfInfoResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfInfoResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      info: (f = msg.getInfo()) && proto.services.NodeInfo.toObject(includeInstance, f),\n      chainsList: jspb.Message.toObjectList(msg.getChainsList(),\n        proto.services.Chain.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfInfoResponse}\n */\nproto.services.SelfInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfInfoResponse;\n  return proto.services.SelfInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfInfoResponse}\n */\nproto.services.SelfInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.setInfo(value);\n      break;\n    case 2:\n      var value = new proto.services.Chain;\n      reader.readMessage(value,proto.services.Chain.deserializeBinaryFromReader);\n      msg.addChains(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getChainsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.services.Chain.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional NodeInfo info = 1;\n * @return {?proto.services.NodeInfo}\n */\nproto.services.SelfInfoResponse.prototype.getInfo = function() {\n  return /** @type{?proto.services.NodeInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {?proto.services.NodeInfo|undefined} value */\nproto.services.SelfInfoResponse.prototype.setInfo = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SelfInfoResponse.prototype.clearInfo = function() {\n  this.setInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SelfInfoResponse.prototype.hasInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Chain chains = 2;\n * @return {!Array<!proto.services.Chain>}\n */\nproto.services.SelfInfoResponse.prototype.getChainsList = function() {\n  return /** @type{!Array<!proto.services.Chain>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.Chain, 2));\n};\n\n\n/** @param {!Array<!proto.services.Chain>} value */\nproto.services.SelfInfoResponse.prototype.setChainsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.services.Chain=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.Chain}\n */\nproto.services.SelfInfoResponse.prototype.addChains = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.Chain, opt_index);\n};\n\n\nproto.services.SelfInfoResponse.prototype.clearChainsList = function() {\n  this.setChainsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfBalanceRequest.displayName = 'proto.services.SelfBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfBalanceRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfBalanceRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfBalanceRequest}\n */\nproto.services.SelfBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfBalanceRequest;\n  return proto.services.SelfBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfBalanceRequest}\n */\nproto.services.SelfBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfBalanceResponse.displayName = 'proto.services.SelfBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfBalanceResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfBalanceResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      walletConfirmedSat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      walletUnconfirmedSat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      channelLocalMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      channelRemoteMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      pendingOpenLocalMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      pendingOpenRemoteMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      unsettledLocalMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      unsettledRemoteMsat: jspb.Message.getFieldWithDefault(msg, 8, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfBalanceResponse}\n */\nproto.services.SelfBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfBalanceResponse;\n  return proto.services.SelfBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfBalanceResponse}\n */\nproto.services.SelfBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWalletConfirmedSat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWalletUnconfirmedSat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelLocalMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelRemoteMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPendingOpenLocalMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPendingOpenRemoteMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setUnsettledLocalMsat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setUnsettledRemoteMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getWalletConfirmedSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getWalletUnconfirmedSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getChannelLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getChannelRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getPendingOpenLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getPendingOpenRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getUnsettledLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getUnsettledRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 wallet_confirmed_sat = 1;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getWalletConfirmedSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setWalletConfirmedSat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 wallet_unconfirmed_sat = 2;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getWalletUnconfirmedSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setWalletUnconfirmedSat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 channel_local_msat = 3;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getChannelLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setChannelLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 channel_remote_msat = 4;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getChannelRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setChannelRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 pending_open_local_msat = 5;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getPendingOpenLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setPendingOpenLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 pending_open_remote_msat = 6;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getPendingOpenRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setPendingOpenRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 unsettled_local_msat = 7;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getUnsettledLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setUnsettledLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional uint64 unsettled_remote_msat = 8;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getUnsettledRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setUnsettledRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetNodesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetNodesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetNodesRequest.displayName = 'proto.services.GetNodesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetNodesRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetNodesRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetNodesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetNodesRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetNodesRequest}\n */\nproto.services.GetNodesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetNodesRequest;\n  return proto.services.GetNodesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetNodesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetNodesRequest}\n */\nproto.services.GetNodesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetNodesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetNodesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetNodesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetNodesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SearchNodeByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SearchNodeByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SearchNodeByAddressRequest.displayName = 'proto.services.SearchNodeByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SearchNodeByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SearchNodeByAddressRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SearchNodeByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SearchNodeByAddressRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SearchNodeByAddressRequest}\n */\nproto.services.SearchNodeByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SearchNodeByAddressRequest;\n  return proto.services.SearchNodeByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SearchNodeByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SearchNodeByAddressRequest}\n */\nproto.services.SearchNodeByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SearchNodeByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SearchNodeByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SearchNodeByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SearchNodeByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.SearchNodeByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SearchNodeByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SearchNodeByAliasRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SearchNodeByAliasRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SearchNodeByAliasRequest.displayName = 'proto.services.SearchNodeByAliasRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SearchNodeByAliasRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SearchNodeByAliasRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SearchNodeByAliasRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SearchNodeByAliasRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      alias: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SearchNodeByAliasRequest}\n */\nproto.services.SearchNodeByAliasRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SearchNodeByAliasRequest;\n  return proto.services.SearchNodeByAliasRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SearchNodeByAliasRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SearchNodeByAliasRequest}\n */\nproto.services.SearchNodeByAliasRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SearchNodeByAliasRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SearchNodeByAliasRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SearchNodeByAliasRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SearchNodeByAliasRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string alias = 1;\n * @return {string}\n */\nproto.services.SearchNodeByAliasRequest.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SearchNodeByAliasRequest.prototype.setAlias = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.NodeInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.NodeInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.NodeInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.NodeInfoResponse.displayName = 'proto.services.NodeInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.NodeInfoResponse.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.NodeInfoResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.NodeInfoResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.NodeInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.NodeInfoResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      nodesList: jspb.Message.toObjectList(msg.getNodesList(),\n        proto.services.NodeInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.NodeInfoResponse}\n */\nproto.services.NodeInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.NodeInfoResponse;\n  return proto.services.NodeInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.NodeInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.NodeInfoResponse}\n */\nproto.services.NodeInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.addNodes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.NodeInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.NodeInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.NodeInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.NodeInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated NodeInfo nodes = 1;\n * @return {!Array<!proto.services.NodeInfo>}\n */\nproto.services.NodeInfoResponse.prototype.getNodesList = function() {\n  return /** @type{!Array<!proto.services.NodeInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {!Array<!proto.services.NodeInfo>} value */\nproto.services.NodeInfoResponse.prototype.setNodesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.NodeInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfoResponse.prototype.addNodes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.NodeInfo, opt_index);\n};\n\n\nproto.services.NodeInfoResponse.prototype.clearNodesList = function() {\n  this.setNodesList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ConnectNodeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ConnectNodeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ConnectNodeRequest.displayName = 'proto.services.ConnectNodeRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ConnectNodeRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ConnectNodeRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ConnectNodeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ConnectNodeRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      hostport: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ConnectNodeRequest}\n */\nproto.services.ConnectNodeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ConnectNodeRequest;\n  return proto.services.ConnectNodeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ConnectNodeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ConnectNodeRequest}\n */\nproto.services.ConnectNodeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHostport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ConnectNodeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ConnectNodeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ConnectNodeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ConnectNodeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHostport();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.ConnectNodeRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ConnectNodeRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string hostport = 2;\n * @return {string}\n */\nproto.services.ConnectNodeRequest.prototype.getHostport = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ConnectNodeRequest.prototype.setHostport = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ConnectNodeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ConnectNodeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ConnectNodeResponse.displayName = 'proto.services.ConnectNodeResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ConnectNodeResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ConnectNodeResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ConnectNodeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ConnectNodeResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ConnectNodeResponse}\n */\nproto.services.ConnectNodeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ConnectNodeResponse;\n  return proto.services.ConnectNodeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ConnectNodeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ConnectNodeResponse}\n */\nproto.services.ConnectNodeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ConnectNodeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ConnectNodeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ConnectNodeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ConnectNodeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.OpenChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.OpenChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.OpenChannelRequest.displayName = 'proto.services.OpenChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.OpenChannelRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.OpenChannelRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.OpenChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.OpenChannelRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      pushAmtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      minInputConfs: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      targetConfirmationBlock: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      satPerVbyte: jspb.Message.getFieldWithDefault(msg, 6, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.OpenChannelRequest}\n */\nproto.services.OpenChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.OpenChannelRequest;\n  return proto.services.OpenChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.OpenChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.OpenChannelRequest}\n */\nproto.services.OpenChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinInputConfs(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTargetConfirmationBlock(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSatPerVbyte(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.OpenChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.OpenChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.OpenChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.OpenChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getPushAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMinInputConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getTargetConfirmationBlock();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getSatPerVbyte();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.OpenChannelRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.OpenChannelRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 2;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 push_amt_msat = 3;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getPushAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setPushAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 min_input_confs = 4;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getMinInputConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setMinInputConfs = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint32 target_confirmation_block = 5;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getTargetConfirmationBlock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setTargetConfirmationBlock = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 sat_per_vbyte = 6;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getSatPerVbyte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setSatPerVbyte = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.OpenChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.OpenChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.OpenChannelResponse.displayName = 'proto.services.OpenChannelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.OpenChannelResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.OpenChannelResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.OpenChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.OpenChannelResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      fundingTxid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      outputIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.OpenChannelResponse}\n */\nproto.services.OpenChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.OpenChannelResponse;\n  return proto.services.OpenChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.OpenChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.OpenChannelResponse}\n */\nproto.services.OpenChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingTxid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.OpenChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.OpenChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.OpenChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.OpenChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string funding_txid = 1;\n * @return {string}\n */\nproto.services.OpenChannelResponse.prototype.getFundingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.OpenChannelResponse.prototype.setFundingTxid = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint32 output_index = 2;\n * @return {number}\n */\nproto.services.OpenChannelResponse.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelResponse.prototype.setOutputIndex = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ContactInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ContactInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ContactInfo.displayName = 'proto.services.ContactInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ContactInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ContactInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ContactInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ContactInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      node: (f = msg.getNode()) && proto.services.NodeInfo.toObject(includeInstance, f),\n      id: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      displayName: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ContactInfo}\n */\nproto.services.ContactInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ContactInfo;\n  return proto.services.ContactInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ContactInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ContactInfo}\n */\nproto.services.ContactInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDisplayName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ContactInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ContactInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ContactInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ContactInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getDisplayName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional NodeInfo node = 1;\n * @return {?proto.services.NodeInfo}\n */\nproto.services.ContactInfo.prototype.getNode = function() {\n  return /** @type{?proto.services.NodeInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {?proto.services.NodeInfo|undefined} value */\nproto.services.ContactInfo.prototype.setNode = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.ContactInfo.prototype.clearNode = function() {\n  this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.ContactInfo.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint64 id = 2;\n * @return {number}\n */\nproto.services.ContactInfo.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.ContactInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string display_name = 3;\n * @return {string}\n */\nproto.services.ContactInfo.prototype.getDisplayName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ContactInfo.prototype.setDisplayName = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetContactsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetContactsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetContactsRequest.displayName = 'proto.services.GetContactsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetContactsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetContactsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetContactsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetContactsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetContactsRequest}\n */\nproto.services.GetContactsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetContactsRequest;\n  return proto.services.GetContactsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetContactsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetContactsRequest}\n */\nproto.services.GetContactsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetContactsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetContactsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetContactsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetContactsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetContactsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.GetContactsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.GetContactsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetContactsResponse.displayName = 'proto.services.GetContactsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.GetContactsResponse.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetContactsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetContactsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetContactsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetContactsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contactsList: jspb.Message.toObjectList(msg.getContactsList(),\n        proto.services.ContactInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetContactsResponse}\n */\nproto.services.GetContactsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetContactsResponse;\n  return proto.services.GetContactsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetContactsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetContactsResponse}\n */\nproto.services.GetContactsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.addContacts(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetContactsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetContactsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetContactsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetContactsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContactsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ContactInfo contacts = 1;\n * @return {!Array<!proto.services.ContactInfo>}\n */\nproto.services.GetContactsResponse.prototype.getContactsList = function() {\n  return /** @type{!Array<!proto.services.ContactInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {!Array<!proto.services.ContactInfo>} value */\nproto.services.GetContactsResponse.prototype.setContactsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.ContactInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.ContactInfo}\n */\nproto.services.GetContactsResponse.prototype.addContacts = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.ContactInfo, opt_index);\n};\n\n\nproto.services.GetContactsResponse.prototype.clearContactsList = function() {\n  this.setContactsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddContactRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddContactRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddContactRequest.displayName = 'proto.services.AddContactRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddContactRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddContactRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddContactRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddContactRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contact: (f = msg.getContact()) && proto.services.ContactInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddContactRequest}\n */\nproto.services.AddContactRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddContactRequest;\n  return proto.services.AddContactRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddContactRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddContactRequest}\n */\nproto.services.AddContactRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.setContact(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddContactRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddContactRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddContactRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddContactRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContact();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ContactInfo contact = 1;\n * @return {?proto.services.ContactInfo}\n */\nproto.services.AddContactRequest.prototype.getContact = function() {\n  return /** @type{?proto.services.ContactInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {?proto.services.ContactInfo|undefined} value */\nproto.services.AddContactRequest.prototype.setContact = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddContactRequest.prototype.clearContact = function() {\n  this.setContact(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddContactRequest.prototype.hasContact = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddContactResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddContactResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddContactResponse.displayName = 'proto.services.AddContactResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddContactResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddContactResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddContactResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddContactResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contact: (f = msg.getContact()) && proto.services.ContactInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddContactResponse}\n */\nproto.services.AddContactResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddContactResponse;\n  return proto.services.AddContactResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddContactResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddContactResponse}\n */\nproto.services.AddContactResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.setContact(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddContactResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddContactResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddContactResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddContactResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContact();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ContactInfo contact = 1;\n * @return {?proto.services.ContactInfo}\n */\nproto.services.AddContactResponse.prototype.getContact = function() {\n  return /** @type{?proto.services.ContactInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {?proto.services.ContactInfo|undefined} value */\nproto.services.AddContactResponse.prototype.setContact = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddContactResponse.prototype.clearContact = function() {\n  this.setContact(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddContactResponse.prototype.hasContact = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactByIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactByIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactByIDRequest.displayName = 'proto.services.RemoveContactByIDRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactByIDRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactByIDRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactByIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactByIDRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactByIDRequest}\n */\nproto.services.RemoveContactByIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactByIDRequest;\n  return proto.services.RemoveContactByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactByIDRequest}\n */\nproto.services.RemoveContactByIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactByIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactByIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.RemoveContactByIDRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.RemoveContactByIDRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactByAddressRequest.displayName = 'proto.services.RemoveContactByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactByAddressRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactByAddressRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactByAddressRequest}\n */\nproto.services.RemoveContactByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactByAddressRequest;\n  return proto.services.RemoveContactByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactByAddressRequest}\n */\nproto.services.RemoveContactByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.RemoveContactByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.RemoveContactByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactResponse.displayName = 'proto.services.RemoveContactResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactResponse}\n */\nproto.services.RemoveContactResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactResponse;\n  return proto.services.RemoveContactResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactResponse}\n */\nproto.services.RemoveContactResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Message = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.Message.repeatedFields_, null);\n};\ngoog.inherits(proto.services.Message, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Message.displayName = 'proto.services.Message';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.Message.repeatedFields_ = [10];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Message.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Message.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Message} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Message.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      discussionId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      sender: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      receiver: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      senderVerified: jspb.Message.getFieldWithDefault(msg, 11, false),\n      payload: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      totalFeesMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      sentTimestamp: (f = msg.getSentTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      receivedTimestamp: (f = msg.getReceivedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      paymentRoutesList: jspb.Message.toObjectList(msg.getPaymentRoutesList(),\n        proto.services.PaymentRoute.toObject, includeInstance),\n      preimage: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n      payReq: jspb.Message.getFieldWithDefault(msg, 13, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Message}\n */\nproto.services.Message.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Message;\n  return proto.services.Message.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Message} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Message}\n */\nproto.services.Message.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSender(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReceiver(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSenderVerified(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFeesMsat(value);\n      break;\n    case 8:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setSentTimestamp(value);\n      break;\n    case 9:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setReceivedTimestamp(value);\n      break;\n    case 10:\n      var value = new proto.services.PaymentRoute;\n      reader.readMessage(value,proto.services.PaymentRoute.deserializeBinaryFromReader);\n      msg.addPaymentRoutes(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreimage(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Message.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Message.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Message} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Message.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getSender();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getReceiver();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getSenderVerified();\n  if (f) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getTotalFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSentTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getReceivedTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentRoutesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.services.PaymentRoute.serializeBinaryToWriter\n    );\n  }\n  f = message.getPreimage();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.Message.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 discussion_id = 2;\n * @return {number}\n */\nproto.services.Message.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string sender = 3;\n * @return {string}\n */\nproto.services.Message.prototype.getSender = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setSender = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string receiver = 4;\n * @return {string}\n */\nproto.services.Message.prototype.getReceiver = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setReceiver = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional bool sender_verified = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.Message.prototype.getSenderVerified = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.Message.prototype.setSenderVerified = function(value) {\n  jspb.Message.setProto3BooleanField(this, 11, value);\n};\n\n\n/**\n * optional string payload = 5;\n * @return {string}\n */\nproto.services.Message.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int64 amt_msat = 6;\n * @return {number}\n */\nproto.services.Message.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 total_fees_msat = 7;\n * @return {number}\n */\nproto.services.Message.prototype.getTotalFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setTotalFeesMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp sent_timestamp = 8;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Message.prototype.getSentTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Message.prototype.setSentTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.services.Message.prototype.clearSentTimestamp = function() {\n  this.setSentTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Message.prototype.hasSentTimestamp = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp received_timestamp = 9;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Message.prototype.getReceivedTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Message.prototype.setReceivedTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.services.Message.prototype.clearReceivedTimestamp = function() {\n  this.setReceivedTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Message.prototype.hasReceivedTimestamp = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * repeated PaymentRoute payment_routes = 10;\n * @return {!Array<!proto.services.PaymentRoute>}\n */\nproto.services.Message.prototype.getPaymentRoutesList = function() {\n  return /** @type{!Array<!proto.services.PaymentRoute>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.PaymentRoute, 10));\n};\n\n\n/** @param {!Array<!proto.services.PaymentRoute>} value */\nproto.services.Message.prototype.setPaymentRoutesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.services.PaymentRoute=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.Message.prototype.addPaymentRoutes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.services.PaymentRoute, opt_index);\n};\n\n\nproto.services.Message.prototype.clearPaymentRoutesList = function() {\n  this.setPaymentRoutesList([]);\n};\n\n\n/**\n * optional string preimage = 12;\n * @return {string}\n */\nproto.services.Message.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPreimage = function(value) {\n  jspb.Message.setProto3StringField(this, 12, value);\n};\n\n\n/**\n * optional string pay_req = 13;\n * @return {string}\n */\nproto.services.Message.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPayReq = function(value) {\n  jspb.Message.setProto3StringField(this, 13, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PaymentRoute = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.PaymentRoute.repeatedFields_, null);\n};\ngoog.inherits(proto.services.PaymentRoute, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PaymentRoute.displayName = 'proto.services.PaymentRoute';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.PaymentRoute.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PaymentRoute.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PaymentRoute.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PaymentRoute} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PaymentRoute.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      hopsList: jspb.Message.toObjectList(msg.getHopsList(),\n        proto.services.PaymentHop.toObject, includeInstance),\n      totalTimelock: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      routeAmtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      routeFeesMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.PaymentRoute.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PaymentRoute;\n  return proto.services.PaymentRoute.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PaymentRoute} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.PaymentRoute.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.PaymentHop;\n      reader.readMessage(value,proto.services.PaymentHop.deserializeBinaryFromReader);\n      msg.addHops(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTotalTimelock(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRouteAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRouteFeesMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PaymentRoute.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PaymentRoute.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PaymentRoute} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PaymentRoute.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHopsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.PaymentHop.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalTimelock();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getRouteAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRouteFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated PaymentHop hops = 1;\n * @return {!Array<!proto.services.PaymentHop>}\n */\nproto.services.PaymentRoute.prototype.getHopsList = function() {\n  return /** @type{!Array<!proto.services.PaymentHop>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.PaymentHop, 1));\n};\n\n\n/** @param {!Array<!proto.services.PaymentHop>} value */\nproto.services.PaymentRoute.prototype.setHopsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.PaymentHop=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentRoute.prototype.addHops = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.PaymentHop, opt_index);\n};\n\n\nproto.services.PaymentRoute.prototype.clearHopsList = function() {\n  this.setHopsList([]);\n};\n\n\n/**\n * optional uint32 total_timelock = 2;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getTotalTimelock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setTotalTimelock = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 route_amt_msat = 3;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getRouteAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setRouteAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 route_fees_msat = 4;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getRouteFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setRouteFeesMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PaymentHop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.PaymentHop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PaymentHop.displayName = 'proto.services.PaymentHop';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PaymentHop.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PaymentHop.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PaymentHop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PaymentHop.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      chanId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      hopAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtToForwardMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      feeMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentHop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PaymentHop;\n  return proto.services.PaymentHop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PaymentHop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentHop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHopAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForwardMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PaymentHop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PaymentHop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PaymentHop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PaymentHop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getHopAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtToForwardMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getChanId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setChanId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string hop_address = 2;\n * @return {string}\n */\nproto.services.PaymentHop.prototype.getHopAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.PaymentHop.prototype.setHopAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_to_forward_msat = 3;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getAmtToForwardMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setAmtToForwardMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee_msat = 4;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setFeeMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.MessageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.MessageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.MessageOptions.displayName = 'proto.services.MessageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.MessageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.MessageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.MessageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.MessageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      feeLimitMsat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      anonymous: jspb.Message.getFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.MessageOptions}\n */\nproto.services.MessageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.MessageOptions;\n  return proto.services.MessageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.MessageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.MessageOptions}\n */\nproto.services.MessageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimitMsat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.MessageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.MessageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.MessageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.MessageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeLimitMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_limit_msat = 1;\n * @return {number}\n */\nproto.services.MessageOptions.prototype.getFeeLimitMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.MessageOptions.prototype.setFeeLimitMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool anonymous = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.MessageOptions.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.MessageOptions.prototype.setAnonymous = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.EstimateMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.EstimateMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.EstimateMessageRequest.displayName = 'proto.services.EstimateMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.EstimateMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.EstimateMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.EstimateMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.EstimateMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      payload: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      options: (f = msg.getOptions()) && proto.services.MessageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.EstimateMessageRequest}\n */\nproto.services.EstimateMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.EstimateMessageRequest;\n  return proto.services.EstimateMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.EstimateMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.EstimateMessageRequest}\n */\nproto.services.EstimateMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = new proto.services.MessageOptions;\n      reader.readMessage(value,proto.services.MessageOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.EstimateMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.EstimateMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.EstimateMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.EstimateMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.services.MessageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.EstimateMessageRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string payload = 2;\n * @return {string}\n */\nproto.services.EstimateMessageRequest.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.EstimateMessageRequest.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 3;\n * @return {number}\n */\nproto.services.EstimateMessageRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional MessageOptions options = 4;\n * @return {?proto.services.MessageOptions}\n */\nproto.services.EstimateMessageRequest.prototype.getOptions = function() {\n  return /** @type{?proto.services.MessageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.MessageOptions, 4));\n};\n\n\n/** @param {?proto.services.MessageOptions|undefined} value */\nproto.services.EstimateMessageRequest.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.services.EstimateMessageRequest.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.EstimateMessageRequest.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.EstimateMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.EstimateMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.EstimateMessageResponse.displayName = 'proto.services.EstimateMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.EstimateMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.EstimateMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.EstimateMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.EstimateMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      successProb: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),\n      message: (f = msg.getMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.EstimateMessageResponse}\n */\nproto.services.EstimateMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.EstimateMessageResponse;\n  return proto.services.EstimateMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.EstimateMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.EstimateMessageResponse}\n */\nproto.services.EstimateMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setSuccessProb(value);\n      break;\n    case 2:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.EstimateMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.EstimateMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.EstimateMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.EstimateMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccessProb();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional double success_prob = 1;\n * @return {number}\n */\nproto.services.EstimateMessageResponse.prototype.getSuccessProb = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageResponse.prototype.setSuccessProb = function(value) {\n  jspb.Message.setProto3FloatField(this, 1, value);\n};\n\n\n/**\n * optional Message message = 2;\n * @return {?proto.services.Message}\n */\nproto.services.EstimateMessageResponse.prototype.getMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 2));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.EstimateMessageResponse.prototype.setMessage = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.services.EstimateMessageResponse.prototype.clearMessage = function() {\n  this.setMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.EstimateMessageResponse.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SendMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SendMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SendMessageRequest.displayName = 'proto.services.SendMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SendMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SendMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SendMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      payload: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      payReq: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      options: (f = msg.getOptions()) && proto.services.MessageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SendMessageRequest}\n */\nproto.services.SendMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SendMessageRequest;\n  return proto.services.SendMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SendMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SendMessageRequest}\n */\nproto.services.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    case 4:\n      var value = new proto.services.MessageOptions;\n      reader.readMessage(value,proto.services.MessageOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SendMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SendMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SendMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.services.MessageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.SendMessageRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SendMessageRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string payload = 2;\n * @return {string}\n */\nproto.services.SendMessageRequest.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SendMessageRequest.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 3;\n * @return {number}\n */\nproto.services.SendMessageRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SendMessageRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string pay_req = 5;\n * @return {string}\n */\nproto.services.SendMessageRequest.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SendMessageRequest.prototype.setPayReq = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional MessageOptions options = 4;\n * @return {?proto.services.MessageOptions}\n */\nproto.services.SendMessageRequest.prototype.getOptions = function() {\n  return /** @type{?proto.services.MessageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.MessageOptions, 4));\n};\n\n\n/** @param {?proto.services.MessageOptions|undefined} value */\nproto.services.SendMessageRequest.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.services.SendMessageRequest.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SendMessageRequest.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SendMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SendMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SendMessageResponse.displayName = 'proto.services.SendMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SendMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SendMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SendMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SendMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      sentMessage: (f = msg.getSentMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SendMessageResponse}\n */\nproto.services.SendMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SendMessageResponse;\n  return proto.services.SendMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SendMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SendMessageResponse}\n */\nproto.services.SendMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setSentMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SendMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SendMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SendMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SendMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message sent_message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.SendMessageResponse.prototype.getSentMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.SendMessageResponse.prototype.setSentMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SendMessageResponse.prototype.clearSentMessage = function() {\n  this.setSentMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SendMessageResponse.prototype.hasSentMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SubscribeMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SubscribeMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SubscribeMessageRequest.displayName = 'proto.services.SubscribeMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SubscribeMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SubscribeMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SubscribeMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SubscribeMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SubscribeMessageRequest}\n */\nproto.services.SubscribeMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SubscribeMessageRequest;\n  return proto.services.SubscribeMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SubscribeMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SubscribeMessageRequest}\n */\nproto.services.SubscribeMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SubscribeMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SubscribeMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SubscribeMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SubscribeMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SubscribeMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SubscribeMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SubscribeMessageResponse.displayName = 'proto.services.SubscribeMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SubscribeMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SubscribeMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SubscribeMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SubscribeMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      receivedMessage: (f = msg.getReceivedMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SubscribeMessageResponse}\n */\nproto.services.SubscribeMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SubscribeMessageResponse;\n  return proto.services.SubscribeMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SubscribeMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SubscribeMessageResponse}\n */\nproto.services.SubscribeMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setReceivedMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SubscribeMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SubscribeMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SubscribeMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SubscribeMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message received_message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.SubscribeMessageResponse.prototype.getReceivedMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.SubscribeMessageResponse.prototype.setReceivedMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SubscribeMessageResponse.prototype.clearReceivedMessage = function() {\n  this.setReceivedMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SubscribeMessageResponse.prototype.hasReceivedMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.DiscussionInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.DiscussionInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.services.DiscussionInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.DiscussionInfo.displayName = 'proto.services.DiscussionInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.DiscussionInfo.repeatedFields_ = [2];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.DiscussionInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.DiscussionInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.DiscussionInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.DiscussionInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      participantsList: jspb.Message.getRepeatedField(msg, 2),\n      options: (f = msg.getOptions()) && proto.services.DiscussionOptions.toObject(includeInstance, f),\n      lastReadMsgId: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      lastMsgId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.DiscussionInfo}\n */\nproto.services.DiscussionInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.DiscussionInfo;\n  return proto.services.DiscussionInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.DiscussionInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.DiscussionInfo}\n */\nproto.services.DiscussionInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addParticipants(value);\n      break;\n    case 3:\n      var value = new proto.services.DiscussionOptions;\n      reader.readMessage(value,proto.services.DiscussionOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastReadMsgId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastMsgId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.DiscussionInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.DiscussionInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.DiscussionInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.DiscussionInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getParticipantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.services.DiscussionOptions.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastReadMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getLastMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * repeated string participants = 2;\n * @return {!Array<string>}\n */\nproto.services.DiscussionInfo.prototype.getParticipantsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {!Array<string>} value */\nproto.services.DiscussionInfo.prototype.setParticipantsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.services.DiscussionInfo.prototype.addParticipants = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.services.DiscussionInfo.prototype.clearParticipantsList = function() {\n  this.setParticipantsList([]);\n};\n\n\n/**\n * optional DiscussionOptions options = 3;\n * @return {?proto.services.DiscussionOptions}\n */\nproto.services.DiscussionInfo.prototype.getOptions = function() {\n  return /** @type{?proto.services.DiscussionOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionOptions, 3));\n};\n\n\n/** @param {?proto.services.DiscussionOptions|undefined} value */\nproto.services.DiscussionInfo.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.services.DiscussionInfo.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.DiscussionInfo.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 last_read_msg_id = 4;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getLastReadMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setLastReadMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 last_msg_id = 5;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getLastMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setLastMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.DiscussionOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.DiscussionOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.DiscussionOptions.displayName = 'proto.services.DiscussionOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.DiscussionOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.DiscussionOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.DiscussionOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.DiscussionOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      feeLimitMsat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      anonymous: jspb.Message.getFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.DiscussionOptions}\n */\nproto.services.DiscussionOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.DiscussionOptions;\n  return proto.services.DiscussionOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.DiscussionOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.DiscussionOptions}\n */\nproto.services.DiscussionOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimitMsat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.DiscussionOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.DiscussionOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.DiscussionOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.DiscussionOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeLimitMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_limit_msat = 1;\n * @return {number}\n */\nproto.services.DiscussionOptions.prototype.getFeeLimitMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionOptions.prototype.setFeeLimitMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool anonymous = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.DiscussionOptions.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.DiscussionOptions.prototype.setAnonymous = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionsRequest.displayName = 'proto.services.GetDiscussionsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionsRequest}\n */\nproto.services.GetDiscussionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionsRequest;\n  return proto.services.GetDiscussionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionsRequest}\n */\nproto.services.GetDiscussionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionsResponse.displayName = 'proto.services.GetDiscussionsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionsResponse}\n */\nproto.services.GetDiscussionsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionsResponse;\n  return proto.services.GetDiscussionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionsResponse}\n */\nproto.services.GetDiscussionsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.GetDiscussionsResponse.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.GetDiscussionsResponse.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.GetDiscussionsResponse.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionsResponse.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionHistoryByIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionHistoryByIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionHistoryByIDRequest.displayName = 'proto.services.GetDiscussionHistoryByIDRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionHistoryByIDRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionHistoryByIDRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionHistoryByIDRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageOptions: (f = msg.getPageOptions()) && proto.services.KeySetPageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionHistoryByIDRequest}\n */\nproto.services.GetDiscussionHistoryByIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionHistoryByIDRequest;\n  return proto.services.GetDiscussionHistoryByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionHistoryByIDRequest}\n */\nproto.services.GetDiscussionHistoryByIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.services.KeySetPageOptions;\n      reader.readMessage(value,proto.services.KeySetPageOptions.deserializeBinaryFromReader);\n      msg.setPageOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionHistoryByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionHistoryByIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPageOptions();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.services.KeySetPageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional KeySetPageOptions page_options = 2;\n * @return {?proto.services.KeySetPageOptions}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.getPageOptions = function() {\n  return /** @type{?proto.services.KeySetPageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.KeySetPageOptions, 2));\n};\n\n\n/** @param {?proto.services.KeySetPageOptions|undefined} value */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.setPageOptions = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.services.GetDiscussionHistoryByIDRequest.prototype.clearPageOptions = function() {\n  this.setPageOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.hasPageOptions = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionHistoryResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionHistoryResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionHistoryResponse.displayName = 'proto.services.GetDiscussionHistoryResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionHistoryResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionHistoryResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionHistoryResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionHistoryResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      message: (f = msg.getMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionHistoryResponse}\n */\nproto.services.GetDiscussionHistoryResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionHistoryResponse;\n  return proto.services.GetDiscussionHistoryResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionHistoryResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionHistoryResponse}\n */\nproto.services.GetDiscussionHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionHistoryResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionHistoryResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionHistoryResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.getMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.GetDiscussionHistoryResponse.prototype.setMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.GetDiscussionHistoryResponse.prototype.clearMessage = function() {\n  this.setMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionStatisticsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionStatisticsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionStatisticsRequest.displayName = 'proto.services.GetDiscussionStatisticsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionStatisticsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionStatisticsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionStatisticsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionStatisticsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionStatisticsRequest}\n */\nproto.services.GetDiscussionStatisticsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionStatisticsRequest;\n  return proto.services.GetDiscussionStatisticsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionStatisticsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionStatisticsRequest}\n */\nproto.services.GetDiscussionStatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionStatisticsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionStatisticsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionStatisticsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionStatisticsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionStatisticsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionStatisticsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionStatisticsResponse.displayName = 'proto.services.GetDiscussionStatisticsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionStatisticsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionStatisticsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionStatisticsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionStatisticsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      amtMsatSent: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      amtMsatReceived: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      amtMsatFees: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      messagesSent: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      messagesReceived: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionStatisticsResponse}\n */\nproto.services.GetDiscussionStatisticsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionStatisticsResponse;\n  return proto.services.GetDiscussionStatisticsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionStatisticsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionStatisticsResponse}\n */\nproto.services.GetDiscussionStatisticsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatSent(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatReceived(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatFees(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMessagesSent(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMessagesReceived(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionStatisticsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionStatisticsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionStatisticsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmtMsatSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsatReceived();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsatFees();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMessagesSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMessagesReceived();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 amt_msat_sent = 1;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatSent = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat_received = 2;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatReceived = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 amt_msat_fees = 3;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatFees = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 messages_sent = 4;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getMessagesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setMessagesSent = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 messages_received = 5;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getMessagesReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setMessagesReceived = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddDiscussionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddDiscussionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddDiscussionRequest.displayName = 'proto.services.AddDiscussionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddDiscussionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddDiscussionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddDiscussionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddDiscussionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddDiscussionRequest}\n */\nproto.services.AddDiscussionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddDiscussionRequest;\n  return proto.services.AddDiscussionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddDiscussionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddDiscussionRequest}\n */\nproto.services.AddDiscussionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddDiscussionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddDiscussionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddDiscussionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddDiscussionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.AddDiscussionRequest.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.AddDiscussionRequest.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddDiscussionRequest.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddDiscussionRequest.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddDiscussionResponse.displayName = 'proto.services.AddDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddDiscussionResponse}\n */\nproto.services.AddDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddDiscussionResponse;\n  return proto.services.AddDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddDiscussionResponse}\n */\nproto.services.AddDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.AddDiscussionResponse.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.AddDiscussionResponse.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddDiscussionResponse.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddDiscussionResponse.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.UpdateDiscussionLastReadRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.UpdateDiscussionLastReadRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.UpdateDiscussionLastReadRequest.displayName = 'proto.services.UpdateDiscussionLastReadRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.UpdateDiscussionLastReadRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.UpdateDiscussionLastReadRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.UpdateDiscussionLastReadRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.UpdateDiscussionLastReadRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      lastReadMsgId: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.UpdateDiscussionLastReadRequest}\n */\nproto.services.UpdateDiscussionLastReadRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.UpdateDiscussionLastReadRequest;\n  return proto.services.UpdateDiscussionLastReadRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.UpdateDiscussionLastReadRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.UpdateDiscussionLastReadRequest}\n */\nproto.services.UpdateDiscussionLastReadRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastReadMsgId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.UpdateDiscussionLastReadRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.UpdateDiscussionLastReadRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.UpdateDiscussionLastReadRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getLastReadMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.UpdateDiscussionLastReadRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 last_read_msg_id = 2;\n * @return {number}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.getLastReadMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.UpdateDiscussionLastReadRequest.prototype.setLastReadMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.UpdateDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.UpdateDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.UpdateDiscussionResponse.displayName = 'proto.services.UpdateDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.UpdateDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.UpdateDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.UpdateDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.UpdateDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.UpdateDiscussionResponse}\n */\nproto.services.UpdateDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.UpdateDiscussionResponse;\n  return proto.services.UpdateDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.UpdateDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.UpdateDiscussionResponse}\n */\nproto.services.UpdateDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.UpdateDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.UpdateDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.UpdateDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.UpdateDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveDiscussionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveDiscussionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveDiscussionRequest.displayName = 'proto.services.RemoveDiscussionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveDiscussionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveDiscussionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveDiscussionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveDiscussionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveDiscussionRequest}\n */\nproto.services.RemoveDiscussionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveDiscussionRequest;\n  return proto.services.RemoveDiscussionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveDiscussionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveDiscussionRequest}\n */\nproto.services.RemoveDiscussionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveDiscussionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveDiscussionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveDiscussionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveDiscussionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.RemoveDiscussionRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.RemoveDiscussionRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveDiscussionResponse.displayName = 'proto.services.RemoveDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveDiscussionResponse}\n */\nproto.services.RemoveDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveDiscussionResponse;\n  return proto.services.RemoveDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveDiscussionResponse}\n */\nproto.services.RemoveDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.CreateInvoiceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.CreateInvoiceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.CreateInvoiceRequest.displayName = 'proto.services.CreateInvoiceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.CreateInvoiceRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.CreateInvoiceRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.CreateInvoiceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.CreateInvoiceRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      memo: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      expiry: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      pb_private: jspb.Message.getFieldWithDefault(msg, 4, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.CreateInvoiceRequest}\n */\nproto.services.CreateInvoiceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.CreateInvoiceRequest;\n  return proto.services.CreateInvoiceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.CreateInvoiceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.CreateInvoiceRequest}\n */\nproto.services.CreateInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemo(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.CreateInvoiceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.CreateInvoiceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.CreateInvoiceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.CreateInvoiceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMemo();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string memo = 1;\n * @return {string}\n */\nproto.services.CreateInvoiceRequest.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.CreateInvoiceRequest.prototype.setMemo = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 2;\n * @return {number}\n */\nproto.services.CreateInvoiceRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.CreateInvoiceRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 expiry = 3;\n * @return {number}\n */\nproto.services.CreateInvoiceRequest.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.CreateInvoiceRequest.prototype.setExpiry = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bool private = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.CreateInvoiceRequest.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.CreateInvoiceRequest.prototype.setPrivate = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.CreateInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.CreateInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.CreateInvoiceResponse.displayName = 'proto.services.CreateInvoiceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.CreateInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.CreateInvoiceResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.CreateInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.CreateInvoiceResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      invoice: (f = msg.getInvoice()) && proto.services.Invoice.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.CreateInvoiceResponse}\n */\nproto.services.CreateInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.CreateInvoiceResponse;\n  return proto.services.CreateInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.CreateInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.CreateInvoiceResponse}\n */\nproto.services.CreateInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Invoice;\n      reader.readMessage(value,proto.services.Invoice.deserializeBinaryFromReader);\n      msg.setInvoice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.CreateInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.CreateInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.CreateInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.CreateInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInvoice();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Invoice.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Invoice invoice = 1;\n * @return {?proto.services.Invoice}\n */\nproto.services.CreateInvoiceResponse.prototype.getInvoice = function() {\n  return /** @type{?proto.services.Invoice} */ (\n    jspb.Message.getWrapperField(this, proto.services.Invoice, 1));\n};\n\n\n/** @param {?proto.services.Invoice|undefined} value */\nproto.services.CreateInvoiceResponse.prototype.setInvoice = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.CreateInvoiceResponse.prototype.clearInvoice = function() {\n  this.setInvoice(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.CreateInvoiceResponse.prototype.hasInvoice = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.LookupInvoiceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.LookupInvoiceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.LookupInvoiceRequest.displayName = 'proto.services.LookupInvoiceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.LookupInvoiceRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.LookupInvoiceRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.LookupInvoiceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.LookupInvoiceRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      payReq: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.LookupInvoiceRequest}\n */\nproto.services.LookupInvoiceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.LookupInvoiceRequest;\n  return proto.services.LookupInvoiceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.LookupInvoiceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.LookupInvoiceRequest}\n */\nproto.services.LookupInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.LookupInvoiceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.LookupInvoiceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.LookupInvoiceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.LookupInvoiceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pay_req = 1;\n * @return {string}\n */\nproto.services.LookupInvoiceRequest.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.LookupInvoiceRequest.prototype.setPayReq = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.LookupInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.LookupInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.LookupInvoiceResponse.displayName = 'proto.services.LookupInvoiceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.LookupInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.LookupInvoiceResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.LookupInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.LookupInvoiceResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      invoice: (f = msg.getInvoice()) && proto.services.Invoice.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.LookupInvoiceResponse}\n */\nproto.services.LookupInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.LookupInvoiceResponse;\n  return proto.services.LookupInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.LookupInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.LookupInvoiceResponse}\n */\nproto.services.LookupInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Invoice;\n      reader.readMessage(value,proto.services.Invoice.deserializeBinaryFromReader);\n      msg.setInvoice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.LookupInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.LookupInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.LookupInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.LookupInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInvoice();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Invoice.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Invoice invoice = 1;\n * @return {?proto.services.Invoice}\n */\nproto.services.LookupInvoiceResponse.prototype.getInvoice = function() {\n  return /** @type{?proto.services.Invoice} */ (\n    jspb.Message.getWrapperField(this, proto.services.Invoice, 1));\n};\n\n\n/** @param {?proto.services.Invoice|undefined} value */\nproto.services.LookupInvoiceResponse.prototype.setInvoice = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.LookupInvoiceResponse.prototype.clearInvoice = function() {\n  this.setInvoice(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.LookupInvoiceResponse.prototype.hasInvoice = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Invoice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.Invoice.repeatedFields_, null);\n};\ngoog.inherits(proto.services.Invoice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Invoice.displayName = 'proto.services.Invoice';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.Invoice.repeatedFields_ = [11,15];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Invoice.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Invoice.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Invoice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Invoice.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      memo: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      hash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      preimage: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      paymentRequest: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      valueMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      amtPaidMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      createdTimestamp: (f = msg.getCreatedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      settledTimestamp: (f = msg.getSettledTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      expiry: jspb.Message.getFieldWithDefault(msg, 9, 0),\n      pb_private: jspb.Message.getFieldWithDefault(msg, 10, false),\n      routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n        proto.services.RouteHint.toObject, includeInstance),\n      state: jspb.Message.getFieldWithDefault(msg, 12, 0),\n      addIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),\n      settleIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),\n      invoiceHtlcsList: jspb.Message.toObjectList(msg.getInvoiceHtlcsList(),\n        proto.services.InvoiceHTLC.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Invoice}\n */\nproto.services.Invoice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Invoice;\n  return proto.services.Invoice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Invoice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Invoice}\n */\nproto.services.Invoice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemo(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreimage(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setValueMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtPaidMsat(value);\n      break;\n    case 7:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setCreatedTimestamp(value);\n      break;\n    case 8:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setSettledTimestamp(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 11:\n      var value = new proto.services.RouteHint;\n      reader.readMessage(value,proto.services.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 12:\n      var value = /** @type {!proto.services.InvoiceState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSettleIndex(value);\n      break;\n    case 15:\n      var value = new proto.services.InvoiceHTLC;\n      reader.readMessage(value,proto.services.InvoiceHTLC.deserializeBinaryFromReader);\n      msg.addInvoiceHtlcs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Invoice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Invoice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Invoice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Invoice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMemo();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPreimage();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getValueMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getAmtPaidMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getCreatedTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getSettledTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      proto.services.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      12,\n      f\n    );\n  }\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      13,\n      f\n    );\n  }\n  f = message.getSettleIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      14,\n      f\n    );\n  }\n  f = message.getInvoiceHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      15,\n      f,\n      proto.services.InvoiceHTLC.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string memo = 1;\n * @return {string}\n */\nproto.services.Invoice.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Invoice.prototype.setMemo = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string hash = 2;\n * @return {string}\n */\nproto.services.Invoice.prototype.getHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Invoice.prototype.setHash = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string preimage = 3;\n * @return {string}\n */\nproto.services.Invoice.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Invoice.prototype.setPreimage = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string payment_request = 4;\n * @return {string}\n */\nproto.services.Invoice.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Invoice.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional uint64 value_msat = 5;\n * @return {number}\n */\nproto.services.Invoice.prototype.getValueMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Invoice.prototype.setValueMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 amt_paid_msat = 6;\n * @return {number}\n */\nproto.services.Invoice.prototype.getAmtPaidMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Invoice.prototype.setAmtPaidMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp created_timestamp = 7;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Invoice.prototype.getCreatedTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Invoice.prototype.setCreatedTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 7, value);\n};\n\n\nproto.services.Invoice.prototype.clearCreatedTimestamp = function() {\n  this.setCreatedTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Invoice.prototype.hasCreatedTimestamp = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp settled_timestamp = 8;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Invoice.prototype.getSettledTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Invoice.prototype.setSettledTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.services.Invoice.prototype.clearSettledTimestamp = function() {\n  this.setSettledTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Invoice.prototype.hasSettledTimestamp = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional int64 expiry = 9;\n * @return {number}\n */\nproto.services.Invoice.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Invoice.prototype.setExpiry = function(value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional bool private = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.Invoice.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.Invoice.prototype.setPrivate = function(value) {\n  jspb.Message.setProto3BooleanField(this, 10, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 11;\n * @return {!Array<!proto.services.RouteHint>}\n */\nproto.services.Invoice.prototype.getRouteHintsList = function() {\n  return /** @type{!Array<!proto.services.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.RouteHint, 11));\n};\n\n\n/** @param {!Array<!proto.services.RouteHint>} value */\nproto.services.Invoice.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.services.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.RouteHint}\n */\nproto.services.Invoice.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.services.RouteHint, opt_index);\n};\n\n\nproto.services.Invoice.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * optional InvoiceState state = 12;\n * @return {!proto.services.InvoiceState}\n */\nproto.services.Invoice.prototype.getState = function() {\n  return /** @type {!proto.services.InvoiceState} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {!proto.services.InvoiceState} value */\nproto.services.Invoice.prototype.setState = function(value) {\n  jspb.Message.setProto3EnumField(this, 12, value);\n};\n\n\n/**\n * optional uint64 add_index = 13;\n * @return {number}\n */\nproto.services.Invoice.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Invoice.prototype.setAddIndex = function(value) {\n  jspb.Message.setProto3IntField(this, 13, value);\n};\n\n\n/**\n * optional uint64 settle_index = 14;\n * @return {number}\n */\nproto.services.Invoice.prototype.getSettleIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Invoice.prototype.setSettleIndex = function(value) {\n  jspb.Message.setProto3IntField(this, 14, value);\n};\n\n\n/**\n * repeated InvoiceHTLC invoice_htlcs = 15;\n * @return {!Array<!proto.services.InvoiceHTLC>}\n */\nproto.services.Invoice.prototype.getInvoiceHtlcsList = function() {\n  return /** @type{!Array<!proto.services.InvoiceHTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.InvoiceHTLC, 15));\n};\n\n\n/** @param {!Array<!proto.services.InvoiceHTLC>} value */\nproto.services.Invoice.prototype.setInvoiceHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 15, value);\n};\n\n\n/**\n * @param {!proto.services.InvoiceHTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.InvoiceHTLC}\n */\nproto.services.Invoice.prototype.addInvoiceHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.services.InvoiceHTLC, opt_index);\n};\n\n\nproto.services.Invoice.prototype.clearInvoiceHtlcsList = function() {\n  this.setInvoiceHtlcsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RouteHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.RouteHint.repeatedFields_, null);\n};\ngoog.inherits(proto.services.RouteHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RouteHint.displayName = 'proto.services.RouteHint';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.RouteHint.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RouteHint.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RouteHint.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RouteHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RouteHint.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      hopHintsList: jspb.Message.toObjectList(msg.getHopHintsList(),\n        proto.services.HopHint.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RouteHint}\n */\nproto.services.RouteHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RouteHint;\n  return proto.services.RouteHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RouteHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RouteHint}\n */\nproto.services.RouteHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.HopHint;\n      reader.readMessage(value,proto.services.HopHint.deserializeBinaryFromReader);\n      msg.addHopHints(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RouteHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RouteHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RouteHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RouteHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHopHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.HopHint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated HopHint hop_hints = 1;\n * @return {!Array<!proto.services.HopHint>}\n */\nproto.services.RouteHint.prototype.getHopHintsList = function() {\n  return /** @type{!Array<!proto.services.HopHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.HopHint, 1));\n};\n\n\n/** @param {!Array<!proto.services.HopHint>} value */\nproto.services.RouteHint.prototype.setHopHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.HopHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.HopHint}\n */\nproto.services.RouteHint.prototype.addHopHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.HopHint, opt_index);\n};\n\n\nproto.services.RouteHint.prototype.clearHopHintsList = function() {\n  this.setHopHintsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.HopHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.HopHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.HopHint.displayName = 'proto.services.HopHint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.HopHint.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.HopHint.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.HopHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.HopHint.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      chanId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      feeBaseMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      feeRate: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      cltvExpiryDelta: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.HopHint}\n */\nproto.services.HopHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.HopHint;\n  return proto.services.HopHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.HopHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.HopHint}\n */\nproto.services.HopHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeBaseMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeRate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvExpiryDelta(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.HopHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.HopHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.HopHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.HopHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getFeeBaseMsat();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getCltvExpiryDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.services.HopHint.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.HopHint.prototype.setPubkey = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id = 2;\n * @return {number}\n */\nproto.services.HopHint.prototype.getChanId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.HopHint.prototype.setChanId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint32 fee_base_msat = 3;\n * @return {number}\n */\nproto.services.HopHint.prototype.getFeeBaseMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.HopHint.prototype.setFeeBaseMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint32 fee_rate = 4;\n * @return {number}\n */\nproto.services.HopHint.prototype.getFeeRate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.HopHint.prototype.setFeeRate = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint32 cltv_expiry_delta = 5;\n * @return {number}\n */\nproto.services.HopHint.prototype.getCltvExpiryDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.HopHint.prototype.setCltvExpiryDelta = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.InvoiceHTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.InvoiceHTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.InvoiceHTLC.displayName = 'proto.services.InvoiceHTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.InvoiceHTLC.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.InvoiceHTLC.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.InvoiceHTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.InvoiceHTLC.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      chanId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      state: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      acceptTimestamp: (f = msg.getAcceptTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      resolveTimestamp: (f = msg.getResolveTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      expiryHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.InvoiceHTLC}\n */\nproto.services.InvoiceHTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.InvoiceHTLC;\n  return proto.services.InvoiceHTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.InvoiceHTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.InvoiceHTLC}\n */\nproto.services.InvoiceHTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.services.InvoiceHTLCState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 4:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setAcceptTimestamp(value);\n      break;\n    case 5:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setResolveTimestamp(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExpiryHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.InvoiceHTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.InvoiceHTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.InvoiceHTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.InvoiceHTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n  f = message.getAcceptTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getResolveTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getExpiryHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {number}\n */\nproto.services.InvoiceHTLC.prototype.getChanId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.InvoiceHTLC.prototype.setChanId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 2;\n * @return {number}\n */\nproto.services.InvoiceHTLC.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.InvoiceHTLC.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional InvoiceHTLCState state = 3;\n * @return {!proto.services.InvoiceHTLCState}\n */\nproto.services.InvoiceHTLC.prototype.getState = function() {\n  return /** @type {!proto.services.InvoiceHTLCState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {!proto.services.InvoiceHTLCState} value */\nproto.services.InvoiceHTLC.prototype.setState = function(value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp accept_timestamp = 4;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.InvoiceHTLC.prototype.getAcceptTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.InvoiceHTLC.prototype.setAcceptTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.services.InvoiceHTLC.prototype.clearAcceptTimestamp = function() {\n  this.setAcceptTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.InvoiceHTLC.prototype.hasAcceptTimestamp = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp resolve_timestamp = 5;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.InvoiceHTLC.prototype.getResolveTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.InvoiceHTLC.prototype.setResolveTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.services.InvoiceHTLC.prototype.clearResolveTimestamp = function() {\n  this.setResolveTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.InvoiceHTLC.prototype.hasResolveTimestamp = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional int32 expiry_height = 6;\n * @return {number}\n */\nproto.services.InvoiceHTLC.prototype.getExpiryHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.InvoiceHTLC.prototype.setExpiryHeight = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.services.InvoiceState = {\n  INVOICE_OPEN: 0,\n  INVOICE_ACCEPTED: 1,\n  INVOICE_SETTLED: 2,\n  INVOICE_CANCELLED: 3\n};\n\n/**\n * @enum {number}\n */\nproto.services.InvoiceHTLCState = {\n  INVOICE_HTLC_ACCEPTED: 0,\n  INVOICE_HTLC_SETTLED: 1,\n  INVOICE_HTLC_CANCELLED: 2\n};\n\ngoog.object.extend(exports, proto.services);\n","const concatUserNames = (props, users) => {\n  let res = '';\n  users.forEach((elem) => {\n    if (elem !== undefined) {\n      let contactName = findContactName(props, elem);\n      let alias = findAlias(props, elem);\n      if (contactName.length > 0) {\n        res = res.concat(contactName);\n        res = res.concat(',');\n      } else if (alias.length > 0) {\n        res = res.concat(alias);\n        res = res.concat(',');\n      } else {\n        res = res.concat(elem.substring(0, 5));\n        res = res.concat(',');\n      }\n    }\n  });\n  res = res.slice(0, -1);\n  return res;\n};\n\nconst concatUserAddresses = (props, users) => {\n  let res = '';\n  users.forEach((elem) => {\n    if (elem.length > 0) {\n      res = res.concat(elem);\n      res = res.concat(',');\n    } else {\n      res = res.concat('Unknown');\n      res = res.concat(',');\n    }\n  });\n  if (res !== '') {\n    res = res.slice(0, -1);\n  }\n  return res;\n};\n\n/**\n   * This function returns the contact name for a specific address.\n   * @param {string} item The address.\n   */\nconst findContactName = (props, item) => {\n  let lookup;\n  if (props.contacts) {\n    lookup = props.contacts.find((elem) => {\n      return elem.user.address === item;\n    });\n  }\n  if (lookup) {\n    return lookup.displayName;\n  } else {\n    return '';\n  }\n};\n\n/**\n * This function returns the friendly name and alias pair for a given address.\n * @param {string} item The address.\n */\nconst findAlias = (props, item) => {\n  let userLookup;\n  if (props.users) {\n    userLookup = props.users.find((elem) => {\n      return elem.address === item;\n    });\n  }\n  if (userLookup) {\n    return userLookup.alias;\n  } else {\n    return '';\n  }\n};\n\nconst routesToAddresses = (routes) => {\n  let addressArray = [];\n  if (routes !== undefined) {\n    routes.forEach((route) => {\n      let lastHop = route.hopsList[route.hopsList.length - 1];\n      addressArray.push(lastHop.hopAddress);\n    });\n  }\n  return addressArray;\n};\n\nconst populateChatHistoryMetadata = (chatHistory) => {\n  let previousElem = undefined;\n  chatHistory.forEach((elem) => {\n    elem['merge'] = false;\n    if (previousElem !== undefined) {\n      if (previousElem.sender === elem.sender\n        && elem.sentTimestamp.seconds < previousElem.sentTimestamp.seconds + 60) {\n        elem['merge'] = true;\n      }\n    }\n    previousElem = elem;\n  });\n};\n\nconst appendToChatHistory = (props, message) => {\n  props.setChatHistory(\n    (oldHistory) => {\n      let previousElem = oldHistory[oldHistory.length - 1];\n      message['merge'] = false;\n      if (previousElem !== undefined) {\n        if (previousElem.sender === message.sender\n          && message.sentTimestamp.seconds < previousElem.sentTimestamp.seconds + 60) {\n          message['merge'] = true;\n        }\n      }\n      return oldHistory.concat(message);\n    }\n  );\n};\n\nexport {\n  concatUserAddresses,\n  concatUserNames,\n  findContactName,\n  findAlias,\n  routesToAddresses,\n  populateChatHistoryMetadata,\n  appendToChatHistory\n};","import React from \"react\";\nimport { List } from \"antd\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\nimport { concatUserNames } from \"../../utils/discussion-utils\";\nimport \"./message-info.css\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the info window for a chat history message.\n * @param {*} props The global variables.\n * @returns The JSX of the info component.\n */\nconst MessageInfo = (props) => {\n  /**\n   * Prepend self to hops for a given message's hops array.\n   * @param {*} hops The hops array.\n   */\n  const prepareHopsArray = (hops) => {\n    let temp = [...hops];\n    temp.unshift({ hopAddress: props.selfInfo.address, feeMsat: 0 });\n    temp[temp.length - 1][\"isLast\"] = true;\n    return temp;\n  };\n\n  /**\n   * Creates the list containing the route hops for a specific route.\n   * @param {*} route The route to calculate hops for.\n   * @returns The JSX list representing the hops list.\n   */\n  const routeHopsList = (route) => {\n    return (\n      <List\n        className=\"message-info-routeHopsList\"\n        dataSource={\n          props.selectedMessage ? prepareHopsArray(route.hopsList) : []\n        }\n        renderItem={(item) => {\n          return (\n            <List.Item>\n              <CopyOutlined\n                className=\"message-info-routeHopsList-Outilined\"\n                onClick={() => {\n                  let copyText = document.getElementById(\n                    \"hopAddressText\" + item.hopAddress\n                  );\n                  copyText.select();\n                  copyText.setSelectionRange(0, 99999);\n                  document.execCommand(\"copy\");\n                  NotificationManager.info(\"Copied to clipboard\");\n                }}\n              />\n              <input\n                id={\"hopAddressText\" + item.hopAddress}\n                className=\"message-info-routeHopsList-input\"\n                value={item.hopAddress}\n                onChange={() => {}}\n              />\n              <b>{`${item.hopAddress.substring(\n                0,\n                5\n              )}...${item.hopAddress.substring(\n                item.hopAddress.length - 5,\n                item.hopAddress.length\n              )}:  `}</b>\n              {item.hopAddress === props.selfInfo.address ? \"(You)\" : \"\"}\n              {item.isLast\n                ? `(${concatUserNames(props, [item.hopAddress])})`\n                : \"\"}\n              <span className=\"message-info-routeHopsList-span\">\n                {item.hopAddress === props.selfInfo.address ? \"-\" : \"+\"}\n                {`${\n                  item.hopAddress === props.selfInfo.address\n                    ? cryptoUtils.msatToCurrentCryptoUnit(\n                      props,\n                      parseInt(route.routeAmtMsat ? route.routeAmtMsat : 0) +\n                      parseInt(\n                        route.routeFeesMsat ? route.routeFeesMsat : 0\n                      )\n                    )\n                    : item.isLast\n                      ? cryptoUtils.msatToCurrentCryptoUnit(\n                        props,\n                        parseInt(route.routeAmtMsat)\n                      )\n                      : item.feeMsat\n                        ? cryptoUtils.msatToCurrentCryptoUnit(\n                          props,\n                          parseInt(item.feeMsat)\n                        )\n                        : 0\n                }\n                              ${props.selectedCryptoUnit}`}\n              </span>\n            </List.Item>\n          );\n        }}\n      />\n    );\n  };\n\n  return (\n    <div>\n      {props.selectedMessage ? (\n        props.selectedMessage.sender === props.selfInfo.address ? (\n          <div>\n            <b>Transaction Paths</b>\n            <List\n              dataSource={props.selectedMessage.paymentRoutesList}\n              renderItem={(item) => {\n                return <div key={`${Date.now()}${Math.random()}`}>{routeHopsList(item)}</div>;\n              }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default MessageInfo;\n","/**\n * This function returns the currently selected account's URL.\n * @return {string} The URL.\n */\nconst url = () => {\n  return window.localStorage.getItem('url');\n};\n/**\n * This function assembles the backend rpc API URL based on current selected backend location.\n * @returns The string representing the API URL.\n */\nconst apiUrl = () => {\n  return `${url()}/c13n-grpc`;\n};\n\nexport default apiUrl;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  EstimateMessageRequest,\n  EstimateMessageResponse,\n  SendMessageRequest,\n  SendMessageResponse,\n  SubscribeMessageRequest,\n  SubscribeMessageResponse,\n  MessageOptions,\n} = require(\"../rpc/rpc_pb\");\n\nconst { MessageServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new MessageServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.subscribeMessages = (req) => {\n  const request = new SubscribeMessageRequest();\n  return rpcClient.subscribeMessages(request, { ...authCreds() });\n};\n\nclient.estimateMessage = (req, callback) => {\n  const request = new EstimateMessageRequest();\n  const messageOptions = new MessageOptions();\n  messageOptions.setFeeLimitMsat(req?.options?.feeLimitMsat);\n  messageOptions.setAnonymous(req?.options?.anonymous);\n  request.setOptions(messageOptions);\n  request.setDiscussionId(req.discussionId);\n  request.setPayload(req.payload);\n  request.setAmtMsat(req.amtMsat);\n\n  return rpcClient.estimateMessage(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? EstimateMessageResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.sendMessage = async (req, callback) => {\n  const request = new SendMessageRequest();\n  const messageOptions = new MessageOptions();\n  messageOptions.setFeeLimitMsat(req?.options?.feeLimitMsat);\n  messageOptions.setAnonymous(req?.options?.anonymous);\n  request.setOptions(messageOptions);\n  request.setDiscussionId(req.discussionId);\n  request.setPayload(req.payload);\n  request.setAmtMsat(req.amtMsat);\n  if (req.preimage) {\n    request.setPreimage(req.preimage);\n  }\n  if (req.payReq) {\n    request.setPayReq(req.payReq);\n  }\n\n  return rpcClient.sendMessage(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? SendMessageResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst messageClient = () => {\n  return client;\n};\n\nexport default messageClient;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  CreateInvoiceRequest,\n  CreateInvoiceResponse,\n  LookupInvoiceRequest,\n  LookupInvoiceResponse\n} = require(\"../rpc/rpc_pb\");\n\nconst { PaymentServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new PaymentServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.createInvoice = (req, callback) => {\n  const request = new CreateInvoiceRequest();\n  request.setMemo(req.description);\n  request.setAmtMsat(req.amtMsat);\n  request.setExpiry(req.expiry);\n  request.setPrivate(req.private);\n  return rpcClient.createInvoice(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? CreateInvoiceResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.lookupInvoice = (req, callback) => {\n  const request = new LookupInvoiceRequest();\n  request.setPayReq(req.payReq);\n  return rpcClient.lookupInvoice(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? LookupInvoiceResponse.toObject(true, res) : undefined)\n  );\n};\n\nconst paymentClient = () => {\n  return client;\n};\n\nexport default paymentClient;\n","const theme = new Object();\n\ntheme.menuDark = 'rgb(23, 23, 37)';\ntheme.menuDarkLite = 'rgb(36, 36, 46)';\ntheme.menuNormal = 'rgb(45, 45, 65)';\ntheme.menuLight = 'rgb(65, 65, 85)';\n\nexport default theme;","const sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport default sleep;\n","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\nimport \"./c13n-image.css\";\n\n/**\n * This component represents the markdown image rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst C13nImage = React.memo((props) => {\n  const [focus, setFocus] = useState(false);\n  return props.automaticImageLoading ? (\n    <div\n      onClick={() => {\n        setFocus(!focus);\n      }}\n      className=\"c13n-image-click\"\n      style={{\n        width: \"25vw\",\n        transition: props.smoothAnimations ? \"0.5s\" : \"0s\",\n      }}\n    >\n      <img src={props.src} width=\"100%\" />\n      <Modal\n        title=\"\"\n        className=\"c13n-image-modal\"\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        visible={!!focus}\n        width=\"90vw\"\n        bodyStyle={{\n          backgroundImage: `url(\"${props.src}\")`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center\",\n          backgroundSize:\n            screen.height > screen.width ? \"100% auto\" : \"auto 100%\",\n          height: \"75vh\",\n        }}\n      ></Modal>\n    </div>\n  ) : (\n    <div>\n      (Image)\n      <a href={props.src} target=\"_blank\">\n        {props.src}\n      </a>\n    </div>\n  );\n});\n\nexport default C13nImage;\n","import React from \"react\";\n\n/**\n * This component represents the markdown link rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nLink = (props) => {\n  return (\n    <a href={props.href} target=\"_blank\">\n      {props.href}\n    </a>\n  );\n};\n\nexport default c13nLink;\n","import React from \"react\";\n\n/**\n * This component represents the markdown link rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nLinkRef = (props) => {\n  return (\n    <a href={props.href} target=\"_blank\">\n      {props.href}\n    </a>\n  );\n};\n\nexport default c13nLinkRef;\n","import React from \"react\";\nimport \"./c13n-text.css\";\n\n/**\n * This component represents the markdown image rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nText = (props) => {\n  return <span className=\"c13n-text\">{props.value}</span>;\n};\n\nexport default c13nText;\n","import React from \"react\";\nimport \"./c13n-inline-code.css\";\n\n/**\n * This component represents the markdown inline-code rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nInlineCode = (props) => {\n  return <code className=\"chatHistoryMessageCodeSection\">{props.value}</code>;\n};\n\nexport default c13nInlineCode;\n","import paymentClient from \"../../services/paymentServices\";\n\nlet paidPayreqs = {};\nlet myPaidPayreqs = {};\n\nconst registerPaidPayreq = (payreq) => {\n  paidPayreqs[payreq] = true;\n};\n\nconst checkPayreq = (payreq) => {\n  return paidPayreqs[payreq] == true;\n};\n\nconst checkMyPayreq = (payreq) => {\n  if(myPaidPayreqs[payreq] == true) {\n    return true;\n  } else {\n    paymentClient().lookupInvoice(\n      {\n        payReq: payreq\n      },\n      (err, res) => {\n        if(err) {\n          console.log(err);\n        }\n        if(res) {\n          if(res?.invoice?.state == 2) {\n            myPaidPayreqs[payreq] = true;\n          }\n        }\n      }\n    );\n    return false;\n  }\n};\n\nexport {\n  registerPaidPayreq,\n  checkPayreq,\n  checkMyPayreq\n};","import ReactMarkdown from \"react-markdown\";\nimport C13nImage from \"../components/content-pages/markdown/c13n-image\";\nimport c13nLink from \"../components/content-pages/markdown/c13n-link\";\nimport c13nLinkRef from \"../components/content-pages/markdown/c13n-link-ref\";\nimport c13nText from \"../components/content-pages/markdown/c13n-text\";\nimport c13nInlineCode from \"../components/content-pages/markdown/c13n-inline-code\";\n\nimport { checkMyPayreq, checkPayreq, registerPaidPayreq } from \"../utils/payreq/payreq-tracker\";\nimport { appendToChatHistory } from \"../utils/discussion-utils\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport { Button, List, Popconfirm } from \"antd\";\nimport { CheckOutlined, CopyOutlined } from \"@ant-design/icons\";\n\nimport messageClient from \"../services/messageServices\";\n\nimport React from \"react\";\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\nconst lightningPayReq = require('bolt11');\n\n/**\n * The markdown renderers.\n */\nconst renderers = (props) => {\n  return {\n    image: (mdProps) =>\n      <C13nImage\n        src={mdProps.src}\n        automaticImageLoading={props.automaticImageLoading}\n        smoothAnimations={props.smoothAnimations}\n      />\n    ,\n    link: c13nLink,\n    linkReference: c13nLinkRef,\n    text: c13nText,\n    inlineCode: c13nInlineCode,\n  };\n};\n\n/**\n * This function generates the JSX to represent the message inside the chat bubble.\n * @param {} props The global variables.\n * @param {string} payload The message data.\n * @param {boolean} myMessage Flag indicating if message was sent by this wallet.\n * @param {number} amtMsat The msat amount delivered by the message.\n * @returns The JSX representing the message.\n */\nconst payloadToDom = (props, payload, myMessage, amtMsat, discussionId) => {\n  let payloadObj;\n  try {\n    payloadObj = JSON.parse(payload);\n  } catch (err) {\n    payloadObj = payload;\n  }\n  if (payloadObj.n === undefined) {\n    return payload;\n  }\n  if (payloadObj.t === undefined) {\n    return payload;\n  }\n  switch (payloadObj.n) {\n  case \"c13n-mp\":\n    return c13nMpToDom(props, payloadObj, myMessage, amtMsat);\n  case \"c13n-pp\":\n    return c13nPpToDom(props, payloadObj, myMessage, discussionId);\n  default:\n    return payload;\n  }\n};\n\n\nconst c13nMpToDom = (props, payloadObj, myMessage, amtMsat) => {\n  switch (payloadObj.t) {\n  case \"message\":\n    return [\n      (payloadObj.c ?\n        <div>\n          <ReactMarkdown\n            source={payloadObj.c}\n            renderers={renderers(props)}\n            disallowedTypes={[\"paragraph\"]}\n            unwrapDisallowed={!!true}\n          />\n        </div>\n        :\n        <div\n          style={{\n            fontSize: '20px',\n            border: '2px solid gray',\n            borderRadius: '5px',\n            padding: '15px'\n          }}\n        >\n          {\n            `You ${myMessage ? 'sent' : 'received'} `\n          }\n          <span\n            style={{\n              color: myMessage ? 'red' : 'green'\n            }}\n          >\n            {`${cryptoUtils.msatToCurrentCryptoUnit(props, amtMsat)}`}\n          </span>\n          <span>\n            {`${props.selectedCryptoUnit}`}\n          </span>\n        </div>),\n      (<div>\n        <List\n          style={{\n            display: payloadObj.attL ? 'inherit' : 'none'\n          }}\n          dataSource={payloadObj.attL}\n          renderItem={(item) => {\n            switch (item.t) {\n            case 'image':\n              return (\n                <ReactMarkdown\n                  source={`![](${item.u})`}\n                  renderers={renderers(props)}\n                  disallowedTypes={[\"paragraph\"]}\n                  unwrapDisallowed={!!true}\n                  key={`${Date.now()}${Math.random()}`}\n                />\n              );\n            case 'file':\n              return (\n                <a href={item.u}>File</a>\n              );\n            }\n          }}\n        />\n      </div>)];\n  default:\n    break;\n  }\n};\n\n\nconst c13nPpToDom = (props, payloadObj, myMessage) => {\n  switch (payloadObj.t) {\n  case \"payreq\":\n    let invoiceObj = {};\n    if (payloadObj.c) {\n      try{\n        invoiceObj = lightningPayReq.decode(payloadObj?.c);\n      } catch (e) {}\n    }\n    let invoiceTimeLeft = (invoiceObj?.timeExpireDate - Math.round(Date.now() / 1000));\n    let invoicePaid = myMessage ? checkMyPayreq(payloadObj.c) : checkPayreq(payloadObj.c);\n    return (\n      <div\n        style={{\n          border: '1px solid gray',\n          borderRadius: '5px',\n          padding: '10px'\n        }}\n      >\n        <h3> Request to\n          {\n            myMessage ? ' receive' : ' pay'\n          } <b>{cryptoUtils.msatToCurrentCryptoUnit(props, invoiceObj?.millisatoshis)} {props.selectedCryptoUnit}</b></h3>\n        {\n          myMessage ? checkMyPayreq(payloadObj.c)\n            ?\n            <h2 style={{ color: 'green' }}><b>Paid <CheckOutlined /></b></h2>\n            :\n            <h2><b>Pending</b></h2>\n            : checkPayreq(payloadObj.c) ?\n              <div>\n                <h2 style={{ color: 'green' }}><b>Paid <CheckOutlined /></b></h2>\n              </div>\n              :\n              <div>\n                <Popconfirm\n                  placement=\"topLeft\"\n                  title={\"Send payment?\"}\n                  onConfirm={() => {\n                    messageClient().sendMessage(\n                      {\n                        payload: createC13nPpMessage(\n                          \"payreq_pay\",\n                          payloadObj.c\n                        ),\n                        payReq: payloadObj.c\n                      },\n                      (err, res) => {\n                        if(err) {\n                          console.log(err);\n                        }\n                        if(res) {\n                          console.log(res);\n                          props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n                          props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n                          props.updateCurrentFunds();\n                          props.setLastFundChange(\n                            `-${Number(\n                              res.sentMessage.amtMsat / 1000 +\n                                res.sentMessage.totalFeesMsat / 1000\n                            )}`\n                          );\n                          appendToChatHistory(props, res.sentMessage);\n                        }\n                      }\n                    );\n                  }}\n                  style={{\n                    fontSize: \"15px\",\n                    border: \"5px solid red\"\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                    }}\n                    style={{\n                      margin: \"15px\",\n                      fontSize: '20px',\n                      width: '90%',\n                      height: '75%'\n                    }}\n                  >\n                    Pay\n                  </Button>\n                </Popconfirm>\n                <br />\n              </div>\n        }\n        <span\n          style={{\n            display: payloadObj.description ? \"inherit\" : \"none\"\n          }}\n        >\n          <b>Description</b>\n          <br />\n          <span>{payloadObj.description}</span>\n          <br />\n          <br />\n        </span>\n        <span\n          style={{\n            fontSize: '10px'\n          }}\n        >\n          <b>Payreq: </b>\n          <b>\n            {`${payloadObj?.c?.substring(\n              0,\n              5\n            )}...${payloadObj?.c?.substring(\n              payloadObj?.c?.length - 5,\n              payloadObj?.c?.length\n            )}:  `}\n          </b>\n          <CopyOutlined\n            className=\"message-info-routeHopsList-Outilined\"\n            onClick={() => {\n              let copyText = document.getElementById(\n                \"payreq\" + payloadObj.c\n              );\n              copyText.select();\n              copyText.setSelectionRange(0, 99999);\n              document.execCommand(\"copy\");\n              NotificationManager.info(\"Copied to clipboard\");\n            }}\n          />\n          <input\n            id={\"payreq\" + payloadObj.c}\n            className=\"message-info-routeHopsList-input\"\n            value={payloadObj.c}\n            onChange={() => {}}\n          />\n        </span>\n        <br />\n        <span\n          style={{\n            fontSize: '10px',\n            display: invoicePaid ? 'none' : 'inherit'\n          }}\n        >\n          <b>Expiry in: </b>\n          {invoiceTimeLeft > 0 ? secondsToDhms(invoiceTimeLeft) : (<b style={{fontSize: \"12px\", color: \"red\"}}>EXPIRED</b>)}\n        </span>\n      </div>\n    );\n  case \"payreq_pay\":\n    registerPaidPayreq(payloadObj.c);\n    return(\n      <div\n        style={{\n          fontSize: '16px',\n          border: '2px solid gray',\n          borderRadius: '5px',\n          padding: '15px'\n        }}\n      >\n        Paid\n        <b\n          style={{\n            paddingLeft: \"5px\",\n            fontSize: \"14px\"\n          }}\n        >\n          {`${payloadObj?.c?.substring(\n            0,\n            5\n          )}...${payloadObj?.c?.substring(\n            payloadObj?.c?.length - 5,\n            payloadObj?.c?.length\n          )}`}\n        </b>\n      </div>\n    );\n  }\n};\n\n/**\n * Parses the entered message string to an object with respect to the payload protocol.\n * @param {*} message The entered message string.\n * @returns The message object.\n */\nconst createC13nMpMessage = (message, attachmentList) => {\n  let messageObj = {\n    n: \"c13n-mp\",\n    v: \"0.0.1c\",\n    t: \"message\",\n    c: message,\n    attL: attachmentList\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return message;\n  }\n};\n\nconst secondsToDhms = (seconds) => {\n  seconds = Number(seconds);\n  var d = Math.floor(seconds / (3600*24));\n  var h = Math.floor(seconds % (3600*24) / 3600);\n  var m = Math.floor(seconds % 3600 / 60);\n  var s = Math.floor(seconds % 60);\n  var dDisplay = d > 0 ?  d + \"d \" : \"\";\n  var hDisplay = h > 0 ? h + \"h \" : \"\";\n  var mDisplay = m > 0 ? m + \"m \" : \"\";\n  return dDisplay + hDisplay + mDisplay;\n};\n\nconst createC13nPpMessage = (type, payreq, description) => {\n  let messageObj = {\n    n: \"c13n-pp\",\n    v: \"0.0.1a\",\n    t: type,\n    c: payreq,\n    description: description\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return '';\n  }\n};\n\nexport {\n  payloadToDom,\n  createC13nMpMessage,\n  createC13nPpMessage\n};\n","export default __webpack_public_path__ + \"static/media/arrow-right.e10cfb42.svg\";","const createAttachment = (type, uri, tags, show) => {\n  return {\n    t: type,\n    u: uri,\n    tags: tags ? tags : '',\n    show: show ? show : false\n  };\n};\n\nconst exportTextMessage = (payload) => {\n  let payloadObj = {};\n  try{\n    payloadObj = JSON.parse(payload);\n  }catch{\n    return undefined;\n  }\n  if(payloadObj.n == \"c13n-mp\"){\n    return payloadObj.c;\n  }\n  if(payloadObj.n == \"c13n-pp\"){\n    if(payloadObj.t == \"payreq\"){\n      return \"New payment request\";\n    }\n    if(payloadObj.t == \"payreq_pay\"){\n      return \"Paid payment request\";\n    }\n  }\n  return undefined;\n};\n\nexport {\n  createAttachment,\n  exportTextMessage\n};","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Button,\n  Tooltip,\n  Switch,\n  Input,\n  Dropdown,\n  Menu,\n  Divider,\n  Select\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EyeOutlined,\n  EyeInvisibleOutlined,\n  FileImageOutlined,\n  SmileOutlined,\n  FormOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport Picker from \"emoji-picker-react\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport messageClient from \"../../services/messageServices\";\nimport paymentClient from \"../../services/paymentServices\";\nimport { appendToChatHistory } from \"../../utils/discussion-utils\";\nimport theme from \"../../style/theme\";\nimport sleep from \"../../utils/system\";\n\nimport {\n  createC13nMpMessage,\n  createC13nPpMessage\n} from \"../../payload-protocol/parsers\";\nimport \"./chat-history-input.css\";\nimport ChatButton from \"../../media/arrow-right.svg\";\nimport { createAttachment } from \"../../payload-protocol/utils\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\nconst ChatHistoryInput = (props) => {\n  const [selectedInput, setSelectedInput] = useState(\"text\");\n  const [currentFee, setCurrentFee] = useState(-1);\n  const [messageToSend, setMessageToSend] = useState(\"\");\n  const [emojiPickerActive, setEmojiPickerActive] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [fileDialogActive, setFileDialogActive] = useState(false);\n  const [imageURL, setImageURL] = useState(\"\");\n  const [uploadLoading, setUploadLoading] = useState(false);\n  const [payreqModalActive, setPayreqModalActive] = useState(false);\n  const [payreqAmount, setPayreqAmount] = useState(1);\n  const [payreqDescription, setPayreqDescription] = useState(\"\");\n  const [payreqExpiry, setPayreqExpiry] = useState(0);\n  const [payreqPrivate, setPayreqPrivate] = useState(false);\n\n  /**\n   * This function sends a payload and the currently entered payload to the current discussion.\n   * @param {string} text The payload to send.\n   */\n  const sendMessage = async (text, attachmentList) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const msg = {\n      discussionId: props.selectedDiscussion.id,\n      amtMsat:\n        amtMsat === \"\"\n          ? 1000\n          : parseInt(amtMsat) > 1000\n            ? parseInt(amtMsat)\n            : 1000,\n      payload: createC13nMpMessage(text, attachmentList),\n      options: {\n        anonymous: props.anonymousActive,\n      },\n    };\n    setMessageToSend(\"\");\n    setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n    messageClient().sendMessage(msg, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.warning(err.message);\n      }\n      if (res) {\n        console.log(res.sentMessage);\n        props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n        props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n        appendToChatHistory(props, res.sentMessage);\n        props.updateCurrentFunds();\n        props.setLastFundChange(\n          `-${Number(\n            res.sentMessage.amtMsat / 1000 +\n              res.sentMessage.totalFeesMsat / 1000\n          )}`\n        );\n      }\n    });\n  };\n\n  /**\n   * Calculates the fee for a specific discussion and currently entered msat amount.\n   * @param {*} discussion The discussion.\n   */\n  const calculateFee = (discussion) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const msg = {\n      discussionId: discussion.id,\n      amtMsat:\n        amtMsat === \"\"\n          ? 1000\n          : parseInt(amtMsat) > 1000\n            ? parseInt(amtMsat)\n            : 1000,\n      payload: \"fee_calculation\",\n    };\n    messageClient().estimateMessage(msg, (err, res) => {\n      if (err) {\n        NotificationManager.warning(err.message);\n      }\n      if (res) {\n        setCurrentFee(\n          cryptoUtils.msatToCurrentCryptoUnit(props, res.message.totalFeesMsat)\n        );\n      }\n    });\n  };\n\n  /**\n   * the fucntion selects all the text in the amount input and highlight it in order to change on focus.\n   */\n\n  const selectAmountInputText = () => {\n    const input = document.getElementById(\"cryptoAmountInput\");\n    input.focus();\n    input.select();\n  };\n\n  const selectPayreqAmountInputText = () => {\n    const input = document.getElementById(\"payreqAmountInput\");\n    input.focus();\n    input.select();\n  };\n\n  /**\n   * Hook to perform discussion related actions when the selected discussion changes.\n   */\n  useEffect(() => {\n    calculateFee(props.selectedDiscussion);\n    setCurrentFee();\n\n    setMessageToSend(\"\");\n    setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n    document.getElementById(\"messageInputArea\").focus();\n  }, [props.selectedDiscussion]);\n\n  return (\n    <div\n      onBlur={() => {\n        setSelectedInput(\"text\");\n      }}\n      className=\"chat-history-footer-container\"\n    >\n      <Dropdown\n        trigger=\"click\"\n        overlay={\n          <Menu className=\"chat-history-input-dropdown\">\n            <Menu.Item\n              onClick={() => {\n                setFileDialogActive(true);\n              }}\n            >\n              <FileImageOutlined\n                className=\"chat-history-input-fileImageOutlined\"\n                style={{ fontSize: \"25px\" }}\n              />\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                setPayreqModalActive(true);\n              }}\n            >\n              <FormOutlined style={{ fontSize: \"25px\" }} />\n            </Menu.Item>\n            <Menu.Item onClick={() => {}}>\n              <Tooltip title=\"Anonymous Mode\" placement=\"top\">\n                <Switch\n                  onChange={(value) => {\n                    props.setAnonymousActive(value);\n                  }}\n                  checkedChildren={<EyeInvisibleOutlined />}\n                  unCheckedChildren={<EyeOutlined />}\n                  disabled={\n                    props.selectedDiscussion.participantsList.length > 1\n                  }\n                />\n              </Tooltip>\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <PlusOutlined className=\"chat-history-footer-addMedia\" />\n      </Dropdown>\n      <div className=\"chat-history-footer-messageMoney\">\n        <Input.TextArea\n          id=\"messageInputArea\"\n          value={messageToSend}\n          onFocus={(e) => {\n            if (props.chatHistory.length !== 0) {\n              props.updateLastMessageSeen(props.chatHistory);\n              props.updateChatScroll();\n              setSelectedInput(\"text\");\n            }\n          }}\n          onChange={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n            } else {\n              setMessageToSend(e.target.value);\n            }\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              sendMessage(e.target.value);\n            }\n          }}\n          placeholder={`Enter ${\n            props.anonymousActive ? \"anonymous \" : \"\"\n          }message`}\n          style={{\n            display: \"inline-block\",\n            width:\n              selectedInput === \"text\"\n                ? \"calc(100% - 100px)\"\n                : \"calc(100% - 150px)\",\n            resize: \"none\",\n            height:\n              document.getElementById(\"messageInputArea\")?.scrollHeight > 45\n                ? messageToSend.length === 0\n                  ? \"35px\"\n                  : document.getElementById(\"messageInputArea\")?.scrollHeight\n                : \"35px\",\n            maxHeight: \"100px\",\n            borderRadius: \"15px\",\n            border: \"2px solid gray\",\n            borderColor: selectedInput === \"text\" ? \"white\" : \"gray\",\n          }}\n        />\n        <div className=\"chat-history-footer-emoticons\">\n          <div className=\"chat-history-footer-emoticonsSmile\">\n            <SmileOutlined\n              onClick={() => {\n                setEmojiPickerActive(!emojiPickerActive);\n              }}\n              onBlur={() => {\n                setEmojiPickerActive(false);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"chat-history-footer-input-addAmount\">\n          <div\n            className=\"chat-history-footer-input-currency\"\n            style={{\n              width: selectedInput === \"crypto\" ? \"130px\" : \"80px\",\n              marginLeft: selectedInput === \"crypto\" ? \"20px\" : \"\",\n            }}\n          >\n            {cryptoUtils.selectedCryptoToVerbose(props.selectedCryptoUnit)}\n          </div>\n          <Tooltip\n            title={`${cryptoUtils.currentCryptoAmtToFiat(props, amount)} ${\n              props.selectedFiatUnit\n            }`}\n            placement=\"top\"\n            visible={selectedInput === \"crypto\"}\n          >\n            <Input\n              id=\"cryptoAmountInput\"\n              type=\"number\"\n              value={amount}\n              onBlur={() => {\n                if (\n                  amount <\n                  parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n                ) {\n                  setAmount(\n                    parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n                  );\n                }\n                if (amount > 1000000) {\n                  setAmount(1000000);\n                }\n              }}\n              min={1}\n              max={1000000}\n              onFocus={() => {\n                setSelectedInput(\"crypto\");\n                selectAmountInputText();\n              }}\n              className=\"chat-history-footer-input-addAmount-amount\"\n              style={{\n                width: selectedInput === \"crypto\" ? \"130px\" : \"80px\",\n                borderColor: selectedInput === \"crypto\" ? \"white\" : \"gray\",\n                color: amount === \"1\" ? \"gray\" : \"white\",\n              }}\n              onChange={(e) => {\n                const numCast = parseFloat(e.target.value);\n                if (isNaN(numCast)) {\n                  setAmount(amount);\n                } else {\n                  setAmount(e.target.value);\n                }\n                if (e.target.value === \"\") {\n                  setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n                }\n              }}\n              placeholder={cryptoUtils.retrieveDefaultCryptoAmount(props)}\n            />\n          </Tooltip>\n        </div>\n      </div>\n\n      <div\n        className=\"chat-history-footer-emojiPicker\"\n        style={{\n          display: emojiPickerActive ? \"inherit\" : \"none\",\n        }}\n      >\n        <Picker\n          onEmojiClick={(e, emoji) => {\n            e.preventDefault();\n            setMessageToSend(messageToSend.concat(emoji.emoji));\n          }}\n          pickerStyle={{\n            backgroundColor: \"#656585\",\n            width: \"250px\",\n          }}\n          disableSearchBar\n          disableAutoFocus\n          disableSkinTonePicker\n        />\n      </div>\n      <div\n        className=\"chat-history-footer-sendButtonContainer\"\n        style={{\n          backgroundColor: theme.menuLight,\n        }}\n      >\n        <div className=\"chat-history-footer-feeContainer\">\n          <span className=\"chat-history-footer-feeText\">\n            {`Fee ${currentFee || 0} ${props.selectedCryptoUnit}`}\n          </span>\n        </div>\n\n        <Button\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n          onClick={() => {\n            sendMessage(messageToSend);\n          }}\n          className=\"chat-history-footer-sendButton\"\n        >\n          <img src={ChatButton} className=\"chat-history-footer-sendButtonSvg\" />\n        </Button>\n      </div>\n      <Modal\n        visible={!!fileDialogActive}\n        onOk={async () => {\n          setUploadLoading(true);\n          switch (imageURL.length) {\n          default:\n            sendMessage(\"\", [createAttachment(\"image\", imageURL)]);\n          }\n          await sleep(1500);\n          setImageURL(\"\");\n          setFileDialogActive(false);\n          setUploadLoading(false);\n        }}\n        onCancel={() => {\n          setFileDialogActive(false);\n        }}\n        okButtonProps={{ type: \"default\", disabled: !!uploadLoading }}\n        okText={uploadLoading ? <LoadingOutlined spin /> : \"Send\"}\n      >\n        <Divider orientation=\"left\">Choose image file</Divider>\n        <input\n          disabled\n          id=\"fileInput\"\n          type=\"file\"\n          accept=\"image/png, image/jpeg\"\n        />\n        <Divider>OR</Divider>\n        <Divider orientation=\"left\">Paste image link:</Divider>\n        <Input\n          value={imageURL}\n          onChange={(e) => {\n            setImageURL(e.target.value);\n          }}\n        />\n      </Modal>\n      <Modal\n        visible={!!payreqModalActive}\n        title=\"Request Payment\"\n        onOk={() => {\n          console.log(\n            \"Requesting: \",\n            cryptoUtils.currentCryptoAmtToMsat(props, payreqAmount),\n            \"msat\"\n          );\n          paymentClient().createInvoice(\n            {\n              amtMsat: cryptoUtils.currentCryptoAmtToMsat(props, payreqAmount),\n              description: payreqDescription,\n              expiry: payreqExpiry,\n              private: payreqPrivate\n            },\n            (err, ress) => {\n              if(err) {\n                NotificationManager.error(\"Could not create invoice\");\n              }\n              if(ress) {\n                messageClient().sendMessage(\n                  {\n                    discussionId: props.selectedDiscussion.id,\n                    payload: createC13nPpMessage(\n                      \"payreq\",\n                      ress.invoice.paymentRequest,\n                      ress.invoice.memo\n                    ),\n                    amtMsat: 1000,\n                  },\n                  (err, res) => {\n                    if (err) {\n                      NotificationManager.error(\"Could not send message\");\n                      console.log(err);\n                    }\n                    if (res) {\n                      setPayreqAmount(0);\n                      setPayreqDescription(\"\");\n                      setPayreqExpiry(-1);\n                      setPayreqPrivate(false);\n                      setPayreqModalActive(false);\n                      props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n                      props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n                      appendToChatHistory(props, res.sentMessage);\n                      props.updateChatScroll();\n                      props.updateCurrentFunds();\n                      props.setLastFundChange(\n                        `-${Number(\n                          res.sentMessage.amtMsat / 1000 +\n                            res.sentMessage.totalFeesMsat / 1000\n                        )}`\n                      );\n                    }\n                  }\n                );\n              }\n            }\n          );\n          console.log(\"Calling sendMessage\");\n        }}\n        onCancel={() => {\n          setPayreqModalActive(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n        okText={\"Request\"}\n      >\n        Description:\n        <Input\n          value={payreqDescription}\n          onChange={(e) => {\n            setPayreqDescription(e.target.value);\n          }}\n        />\n        <br />\n        Amount ({props.selectedCryptoUnit}):\n        <Input\n          id=\"payreqAmountInput\"\n          type=\"number\"\n          value={payreqAmount}\n          onBlur={() => {\n            if (\n              amount <\n              parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n            ) {\n              setPayreqAmount(\n                parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n              );\n            }\n            if (amount > 10000000) {\n              setPayreqAmount(10000000);\n            }\n          }}\n          onFocus={() => {\n            selectPayreqAmountInputText();\n          }}\n          onChange={(e) => {\n            const numCast = parseFloat(e.target.value);\n            if (isNaN(numCast)) {\n              setPayreqAmount(amount);\n            } else {\n              setPayreqAmount(e.target.value);\n            }\n            if (e.target.value === \"\") {\n              setPayreqAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n            }\n          }}\n        />\n        <br />\n        Expiry:\n        <br />\n        <Select\n          defaultValue={3600*24}\n          onChange={(value) => {\n            setPayreqExpiry(value);\n          }}\n        >\n          <Select.Option value={3600}>1 hour</Select.Option>\n          <Select.Option value={3600*24}>24 hours</Select.Option>\n          <Select.Option value={3600*24*7}>7 days</Select.Option>\n          <Select.Option value={3600*24*30}>30 days</Select.Option>\n        </Select>\n        <br />\n        Private:\n        <br />\n        <Switch\n          defaultChecked={false}\n          onChange={(value) => {\n            setPayreqPrivate(value);\n          }}\n        />\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default ChatHistoryInput;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  GetDiscussionsRequest,\n  GetDiscussionsResponse,\n  GetDiscussionHistoryByIDRequest,\n  GetDiscussionHistoryResponse,\n  GetDiscussionStatisticsRequest,\n  GetDiscussionStatisticsResponse,\n  AddDiscussionRequest,\n  AddDiscussionResponse,\n  UpdateDiscussionLastReadRequest,\n  UpdateDiscussionResponse,\n  RemoveDiscussionRequest,\n  RemoveDiscussionResponse,\n  KeySetPageOptions,\n  DiscussionInfo,\n  DiscussionOptions,\n} = require(\"../rpc/rpc_pb\");\nconst { DiscussionServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new DiscussionServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getDiscussions = (req) => {\n  const request = new GetDiscussionsRequest();\n  return rpcClient.getDiscussions(request, { ...authCreds() });\n};\n\nclient.getDiscussionHistoryById = (req) => {\n  const request = new GetDiscussionHistoryByIDRequest();\n  const keySetPageOptions = new KeySetPageOptions();\n  keySetPageOptions.setLastId(req.pageOptions.lastId);\n  keySetPageOptions.setPageSize(req.pageOptions.pageSize);\n  keySetPageOptions.setReverse(req.pageOptions.reverse);\n  request.setPageOptions(keySetPageOptions);\n  request.setId(req.id);\n  return rpcClient.getDiscussionHistoryByID(request, { ...authCreds() });\n};\n\nclient.getDiscussionStatistics = (req, callback) => {\n  const request = new GetDiscussionStatisticsRequest();\n  request.setId(req.id);\n  return rpcClient.getDiscussionStatistics(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(\n        err,\n        res ? GetDiscussionStatisticsResponse.toObject(res, res) : undefined\n      )\n  );\n};\n\nclient.addDiscussion = (req, callback) => {\n  const request = new AddDiscussionRequest();\n  const discussionInfo = new DiscussionInfo();\n  const discussionOptions = new DiscussionOptions();\n\n  discussionOptions.setFeeLimitMsat(req.discussion?.options?.feeLimitMsat);\n  discussionOptions.setAnonymous(req.discussion?.options?.anonymous);\n  discussionInfo.setOptions(discussionOptions);\n  discussionInfo.setId(req.discussion.id);\n  discussionInfo.setParticipantsList(req.discussion.participants);\n  discussionInfo.setLastReadMsgId(req.discussion.lastReadMsgId);\n  discussionInfo.setLastMsgId(req.discussion.lastMsgId);\n  request.setDiscussion(discussionInfo);\n  return rpcClient.addDiscussion(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? AddDiscussionResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.updateDiscussionLastRead = (req, callback) => {\n  const request = new UpdateDiscussionLastReadRequest();\n  request.setDiscussionId(req.discussionId);\n  request.setLastReadMsgId(req.lastReadMsgId);\n  return rpcClient.updateDiscussionLastRead(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(\n        err,\n        res ? UpdateDiscussionResponse.toObject(res, res) : undefined\n      )\n  );\n};\n\nclient.removeDiscussion = (req, callback) => {\n  const request = new RemoveDiscussionRequest();\n  request.setId(req.id);\n  return rpcClient.removeDiscussion(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? RemoveDiscussionResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst discussionClient = () => {\n  return client;\n};\n\nexport default discussionClient;\n","import React, { useEffect, useState } from \"react\";\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\n\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./chat-history-statistics.css\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the chat history statistics window.\n * @param {*} props The global variables.\n */\nconst ChatHistoryStatistics = (props) => {\n  const [loaded, setLoaded] = useState(false);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalOutcome, setTotalOutcome] = useState(0);\n  const [totalFees, setTotalFees] = useState(0);\n  const [totalSent, setTotalSent] = useState(0);\n  const [totalReceived, setTotalReceived] = useState(0);\n\n  /**\n   * This process is called once on component loading.\n   * It fetches the statistics from the correct endpoint.\n   */\n  useEffect(() => {\n    setTotalIncome(0);\n    setTotalFees(0);\n    setTotalOutcome(0);\n    setTotalReceived(0);\n    setTotalSent(0);\n    setLoaded(false);\n    discussionClient().getDiscussionStatistics(\n      {\n        id: props.selectedDiscussion.id,\n      },\n      (err, res) => {\n        if (err) {\n          NotificationManager.error(\"Failed to fetch statistics\");\n          console.log(err);\n        }\n        if (res) {\n          if (res.amtMsatReceived) {\n            setTotalIncome(res.amtMsatReceived);\n          }\n          if (res.amtMsatSent) {\n            setTotalOutcome(res.amtMsatSent);\n          }\n          if (res.amtMsatFees) {\n            setTotalFees(res.amtMsatFees);\n          }\n          if (res.messagesSent) {\n            setTotalSent(res.messagesSent);\n          }\n          if (res.messagesReceived) {\n            setTotalReceived(res.messagesReceived);\n          }\n          setLoaded(true);\n        }\n      }\n    );\n  }, [props.selectedDiscussion.id]);\n\n  /**\n   * The chat history statistics JSX\n   */\n  return (\n    <div className=\"chatHistoryStatistics\">\n      {loaded ? (\n        <div>\n          <span\n            style={{\n              display: props.selectedDiscussion ? \"inline-block\" : \"none\",\n            }}\n          >\n            <span className=\"contentHeaderTotalAmount\">\n              <ArrowDownOutlined />\n              {`${\n                cryptoUtils.msatToCurrentCryptoUnit(props, totalIncome) || 0\n              }`}\n              <span className=\"chat-history-statistics-ArrowDownOutlined\">\n                {`${props.selectedCryptoUnit} `}\n                received\n              </span>\n            </span>\n            <br />\n            <span className=\"chat-history-statistics-contentHeaderTotalAmount\">\n              <ArrowUpOutlined />\n              {`${\n                cryptoUtils.msatToCurrentCryptoUnit(props, totalOutcome) || 0\n              }`}\n              <span className=\"chat-history-statistics-ArrowUpOutlined\">\n                {`${props.selectedCryptoUnit} `}\n                sent\n              </span>\n            </span>\n          </span>\n          <br />\n          <br />\n          Messages Sent: <b>{`${totalSent || 0}`}</b>\n          <br />\n          <br />\n          Messages Received: <b>{`${totalReceived || 0}`}</b>\n          <br />\n          <br />\n          Total Fees Paid:{\" \"}\n          <b>{`${cryptoUtils.msatToCurrentCryptoUnit(props, totalFees) || 0}${\n            props.selectedCryptoUnit\n          }`}</b>\n        </div>\n      ) : (\n        <div>Loading</div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatHistoryStatistics;\n","import Parser from 'html-react-parser';\n\nconst jdenticon = require(\"jdenticon\");\n\nlet iconCache = {};\n\nconst generateIdenticon = (text, size) => {\n  if(text in iconCache && iconCache[text] !== undefined) {\n    if(size in iconCache[text] && iconCache[text][size] !== undefined) {\n      return Parser(iconCache[text][size]);\n    }\n  }\n  const icon = jdenticon.toSvg(text, size);\n  iconCache[text] = {};\n  iconCache[text][size] = icon;\n  return Parser(icon);\n};\n\nexport default generateIdenticon;","import React from \"react\";\n\nimport { Modal } from \"antd\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport { findAlias, findContactName } from \"../../utils/discussion-utils\";\nimport generateIdenticon from \"../../utils/identicon.js\";\n\nimport \"./user-preview.css\";\n\n/**\n * This component represents the modal for previewing a user.\n * @param {*} props The global variables.\n * @returns The JSX of the component.\n */\nconst UserPreview = (props) => {\n  return (\n    <div>\n      <Modal\n        visible={props.visible}\n        title={\n          <div>\n            <span className=\"user-preview-modal\">\n              {generateIdenticon(props.user?.address, 45)}\n            </span>\n            {`${findContactName(props, props.user?.address)} (${findAlias(\n              props,\n              props.user?.address\n            )})`}\n          </div>\n        }\n        onOk={() => {\n          props.setVisible(false);\n        }}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n      >\n        <input\n          id={\"userPreviewAddress\"}\n          value={props.user?.address}\n          onChange={() => {}}\n        />\n        Address:\n        <br />\n        <span\n          className=\"user-preview-address\"\n          onClick={() => {\n            let copyText = document.getElementById(\"userPreviewAddress\");\n            copyText.select();\n            copyText.setSelectionRange(0, 99999);\n            document.execCommand(\"copy\");\n            NotificationManager.info(\"Copied to clipboard\");\n          }}\n        >\n          {props.user?.address}\n        </span>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserPreview;\n","const findUserByAddress = (props, addr) => {\n  let userLookup = props.users.find(\n    (elem) => {\n      return elem.address === addr;\n    }\n  );\n  return userLookup;\n};\n\nconst splitURI = (URI) => {\n  const res = URI.split('@');\n  if (res.length===2) {\n    return {\n      address: res[0],\n      hostport: res[1],\n      error: ''\n    };\n  } else {\n    return {\n      error: 'invalid format'\n    };\n  }\n};\n\nexport {\n  findUserByAddress,\n  splitURI\n};","import React, { useState, useEffect } from \"react\";\nimport {\n  List,\n  Divider,\n  Modal,\n  Layout,\n  Button,\n  Tooltip,\n  Dropdown,\n  Menu,\n} from \"antd\";\nimport {\n  LoadingOutlined,\n  ExclamationCircleOutlined,\n  DownCircleOutlined,\n  SafetyOutlined,\n  CloseCircleOutlined,\n  CheckOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\nimport JSONPretty from 'react-json-pretty';\nimport 'react-json-pretty/themes/monikai.css';\n\nimport MessageInfo from \"./message-info\";\nimport ChatHistoryInput from \"./chat-history-input\";\nimport ChatHistoryStatistics from \"./chat-history-statistics\";\nimport UserPreview from \"./user-preview\";\nimport generateIdenticon from \"../../utils/identicon.js\";\nimport { findUserByAddress } from \"../../utils/users-utils.js\";\nimport { payloadToDom } from \"../../payload-protocol/parsers\";\n\nimport discussionClient from \"../../services/discussionServices\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\nimport {\n  concatUserNames,\n  concatUserAddresses,\n  routesToAddresses,\n  populateChatHistoryMetadata,\n} from \"../../utils/discussion-utils\";\nimport theme from \"../../style/theme\";\nimport \"./chat-history.css\";\n\nconst { GetDiscussionHistoryResponse } = require(\"../../rpc/rpc_pb\");\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the chat history page.\n * This page contains all functionalities responsible for chatting.\n * @param {*} props The global variables.\n */\nconst ChatHistory = (props) => {\n  const messagesPerBlock = 15;\n  const [oldListHeight, setOldListHeight] = useState(0);\n  const [lastMessageSeen, setLastMessageSeen] = useState(0);\n  const [noMoreHistory, setNoMoreHistory] = useState(false);\n\n  const [anonymousActive, setAnonymousActive] = useState(false);\n\n  const [feeModalVisible, setFeeModalVisible] = useState(false);\n  const [statisticsModalVisible, setStatisticsModalVisible] = useState(false);\n  const [messageInfoModalVisible, setMessageInfoModalVisible] = useState(false);\n  const [rawMessageInfoModalVisible, setRawMessageInfoModalVisible] = useState(false);\n  const [userPreviewVisible, setUserPreviewVisible] = useState(false);\n  const [userPreviewUser, setUserPreviewUser] = useState();\n\n  const [selectedMessage, setSelectedMessage] = useState();\n\n  const [pageLoaded, setPageLoaded] = useState(false);\n\n  const [anonymousBucket, setAnonymousBucket] = useState(false);\n\n  const chatHistoryHeaderProps = {\n    anonymousBucket,\n    setAnonymousBucket,\n  };\n\n  const chatHistoryIcon = (\n    <>\n      {props.selectedDiscussion.participantsList.length > 1\n        ? generateIdenticon(\n          concatUserAddresses(props, [\n            props.selfInfo.address,\n            ...props.selectedDiscussion.participantsList,\n          ]),\n          50\n        )\n        : generateIdenticon(\n          concatUserAddresses(props, [\n            props.selectedDiscussion.participantsList,\n          ]),\n          50\n        )}\n    </>\n  );\n\n  const chatHistoryUsrName = (\n    <>\n      {anonymousBucket\n        ? \"Anonymous Messages\"\n        : concatUserNames(props, props.selectedDiscussion.participantsList)}\n    </>\n  );\n\n  /**\n   * Updates the last seen message of the currently selected discussion to the last message of the current chat history.\n   * @param {*} history The current chat history. Used to retrieve the last message's id.\n   */\n  const updateLastMessageSeen = (history) => {\n    discussionClient().updateDiscussionLastRead(\n      {\n        discussionId: props.selectedDiscussion.id,\n        lastReadMsgId: history[history.length - 1].id,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n        }\n        if (res) {\n          if (!document.hidden) {\n            setLastMessageSeen(history[history.length - 1].id);\n            props.selectedDiscussion.lastReadMsgId =\n              history[history.length - 1].id;\n          } else {\n          }\n        }\n      }\n    );\n  };\n\n  /**\n   * Calculates alignment for message text based on the current loaded chatLayout setting.\n   * @param {*} item The chat history message object.\n   * @returns The align direction.\n   */\n  const calculateTextAlign = (item) => {\n    switch (props.chatLayout) {\n    case \"normal\":\n      return findSenderName(item) === props.selfInfo.alias ? \"right\" : \"left\";\n    case \"left\":\n      return \"left\";\n    case \"right\":\n      return \"right\";\n    }\n  };\n\n  /**\n   * Calculates the chat bubble direction based on the current loaded chatLayout setting.\n   * @param {*} item The chat history message object.\n   * @returns The flex-row direction.\n   */\n  const calculateFlexRowDirection = (item) => {\n    switch (props.chatLayout) {\n    case \"normal\":\n      return findSenderName(item) === props.selfInfo.alias\n        ? \"row-reverse\"\n        : \"row\";\n    case \"left\":\n      return \"row\";\n    case \"right\":\n      return \"row-reverse\";\n    }\n    return findSenderName(item) === props.selfInfo.alias\n      ? \"row-reverse\"\n      : \"row\";\n  };\n\n  /**\n   * Calculates the message header's color to indicate unread status.\n   * @param {*} item The chat history message object.\n   * @returns The color of the header.\n   */\n  const calculateChatHistoryMessageColor = (item) => {\n    if (pageLoaded === false) {\n      return item.id > props.selectedDiscussion.lastReadMsgId &&\n        item.sender !== props.selfInfo.address\n        ? \"cyan\"\n        : \"inherit\";\n    } else {\n      return item.id > lastMessageSeen && item.sender !== props.selfInfo.address\n        ? \"cyan\"\n        : \"inherit\";\n    }\n  };\n\n  /**\n   * Calculates the display status for the message failure indicator.\n   * @param {*} item The chat history message object.\n   * @returns The display status of the indicator.\n   */\n  const calculatePartialFailureIndicatorDisplay = (item) => {\n    return item.sender === props.selfInfo.address\n      ? routesToAddresses(item.paymentRoutesList).length ===\n        props.selectedDiscussion.participantsList.length\n        ? \"none\"\n        : \"inline\"\n      : \"none\";\n  };\n\n  const atBottom = () => {\n    let elem = document.getElementById(\"chatHistoryListId\");\n    if (elem?.scrollHeight - elem?.scrollTop > elem?.clientHeight + 120) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * This function is called anytime the selected discussion changes.\n   */\n  useEffect(async () => {\n    if (props.selectedDiscussion) {\n      props.setChatHistory([]);\n      loadHistory(true, props.selectedDiscussion.id);\n      let elem = document.getElementById(\"chatHistoryListId\");\n      setAnonymousActive(false);\n      setPageLoaded(false);\n      setNoMoreHistory(false);\n      if (props.selectedDiscussion.participantsList[0] === \"\") {\n        props.setAnonymousBucket(true);\n      } else {\n        props.setAnonymousBucket(false);\n      }\n    }\n  }, [props.selectedDiscussion]);\n\n  /**\n   * This function is called anytime the current chat history changes.\n   */\n  useEffect(() => {\n    if (props.chatHistory.length !== 0) {\n      if (pageLoaded) {\n        if (atBottom()) {\n          updateChatScroll();\n          updateLastMessageSeen(props.chatHistory);\n        }\n      } else {\n        setPageLoaded(true);\n        updateLastMessageSeen(props.chatHistory);\n        setChatScroll();\n        setTimeout(function () {\n          setChatScroll();\n        }, 750);\n      }\n    }\n  }, [props.chatHistory]);\n\n  /**\n   * This function fetches the history of the currently selected discussion.\n   * It stores the response in the chatHistory variable.\n   */\n  async function loadHistory(fresh, discussionId) {\n    let reverse = true;\n    /**\n     * If lastId == 0 then discussion is either empty, or contains only\n     * one message with id == 0. In case the discussion has only one\n     * message with id == 0, we need to declare reverse = true in order\n     * for backend to normally return the response\n     */\n    if (props.selectedDiscussion.lastMsgId == 0) {\n      reverse = false;\n    }\n    let async_selectedDiscusion;\n    await props.setSelectedDiscussion((oldValue) => {\n      async_selectedDiscusion = oldValue;\n      return oldValue;\n    });\n    let chatHistory = [];\n    let previousId = !fresh ? props.chatHistory[0].id - 1 : 0;\n    if (previousId < 0) {\n      previousId = 0;\n    }\n    return await discussionClient()\n      .getDiscussionHistoryById({\n        id: props.selectedDiscussion.id,\n        pageOptions: {\n          reverse: reverse,\n          lastId: fresh ? props.selectedDiscussion.lastMsgId : previousId,\n          pageSize: fresh ? 50 : messagesPerBlock,\n        },\n      })\n      .on(\"data\", (res) => {\n        chatHistory.push(\n          GetDiscussionHistoryResponse.toObject(true, res).message\n        );\n      })\n      .on(\"end\", () => {\n        if (async_selectedDiscusion.id === discussionId) {\n          if (chatHistory.length === 0) {\n            setNoMoreHistory(true);\n          }\n          props.setChatHistory((oldHistory) => {\n            let res = [...oldHistory];\n            res.unshift(...chatHistory);\n            populateChatHistoryMetadata(res);\n            return res;\n          });\n        }\n      })\n      .on(\"error\", (e) => {\n        if (e.code == 13) {\n          setNoMoreHistory(true);\n        }\n        console.log(\"err\", e);\n      })\n      .on(\"status\", () => {});\n  }\n\n  /**\n   * This function scrolls to the bottom of the chat history with respect to animations.\n   */\n  const updateChatScroll = () => {\n    let element = document.getElementById(\"chatHistoryListId\");\n    if (element && !document.hidden) {\n      element.scroll({\n        top: element.scrollHeight,\n        behavior: props.smoothAnimations ? \"smooth\" : \"auto\",\n      });\n    }\n  };\n\n  /**\n   * This function scrolls to the bottom of the chat history without animations.\n   */\n  const setChatScroll = () => {\n    let element = document.getElementById(\"chatHistoryListId\");\n    if (element) {\n      element.scroll({\n        top: element.scrollHeight,\n        behavior: \"auto\",\n      });\n    }\n  };\n\n  /**\n   * This function returns a message object's sender's name.\n   * @param {*} item The message object.\n   */\n  const findSenderName = (item) => {\n    let lookup;\n    if (props.contacts) {\n      lookup = props.contacts.find((elem) => {\n        return elem.user.address === item.sender;\n      });\n    }\n    if (lookup) {\n      return lookup.displayName;\n    } else if (item.sender === props.selfInfo.address) {\n      return props.selfInfo.alias;\n    } else {\n      let userLookup = findUserByAddress(props, item.sender);\n      return userLookup ? userLookup.alias : \"Unknown\";\n    }\n  };\n\n  /**\n   * The JSX element for the payment info modal footer.\n   * @returns The JSX of the footer.\n   */\n  const totalFeesFooter = () => {\n    return (\n      <div>\n        {selectedMessage?.sender == props.selfInfo.address\n          ? \"Total Fees Paid:\"\n          : \"\"}\n        <b>\n          {`${cryptoUtils.msatToCurrentCryptoUnit(\n            props,\n            selectedMessage ? selectedMessage.totalFeesMsat : 0\n          )}`}\n        </b>\n        {`${props.selectedCryptoUnit}`}\n        <b>\n          {`  /  ${cryptoUtils.msatAmtToFiat(\n            props,\n            selectedMessage ? selectedMessage.totalFeesMsat : 0\n          )}`}\n        </b>\n        {` ${props.selectedFiatUnit}`}\n      </div>\n    );\n  };\n\n  /**\n   * Month index to month string.\n   */\n  const monthToStr = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  /**\n   * Returns a string representing a unix timestamp date representation\n   * @param {*} unix The unix timestamp\n   * @return {string} The date string\n   */\n  const unixToDate = (unix) => {\n    const date = new Date(unix * 1000);\n    const now = new Date();\n    let format;\n    const hours = date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    if (\n      now.getMonth() === date.getMonth() &&\n      now.getDate() === date.getDate()\n    ) {\n      format = hours + \":\" + minutes.substr(-2);\n    } else {\n      format = monthToStr[date.getMonth()] + \"-\" + date.getDate();\n      if (now.getUTCFullYear() !== date.getUTCFullYear()) {\n        format += \"-\" + date.getFullYear();\n      }\n      format += \" \" + hours + \":\" + minutes.substr(-2);\n    }\n\n    return format;\n  };\n\n  /**\n   * The chat history JSX\n   */\n  return (\n    <>\n      <div className=\"chat-history\">\n        <div\n          className=\"chat-hIstory-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryArrow\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"chat-history-header-UserIcon\">{chatHistoryIcon}</div>\n          <div className=\"chat-history-header-UserName\">\n            {\" \"}\n            {chatHistoryUsrName}\n          </div>\n          <Dropdown\n            className=\"chat-history-dropdοwn\"\n            trigger=\"click\"\n            overlay={\n              <Menu>\n                <Menu.Item\n                  onClick={() => {\n                    setStatisticsModalVisible(true);\n                  }}\n                >\n                  Discussion Statistics\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <Button className=\"chat-history-btn\">\n              <EllipsisOutlined />\n            </Button>\n          </Dropdown>\n        </div>\n        <div className=\"chat-history-content\">\n          <Layout className=\"chat-history-layout\">\n            <Layout.Content\n              className=\"contentBody\"\n              onMouseDown={(e) => {\n                if (window.innerWidth > window.innerHeight) {\n                  e.preventDefault();\n                  document.getElementById(\"messageInputArea\")?.focus();\n                }\n              }}\n            >\n              <div\n                className=\"chatHistoryList\"\n                id=\"chatHistoryListId\"\n                style={{\n                  backgroundColor:\n                    anonymousActive || props.anonymousBucket\n                      ? \"rgb(35, 35, 35)\"\n                      : \"rgb(45, 45, 65)\",\n                }}\n              >\n                <div\n                  className=\"chat-history-arrowMore\"\n                  style={{\n                    left: props.sideSquashed ? \"calc(50%)\" : \"calc(50% + 50px)\",\n                    bottom: atBottom() ? \"-1000px\" : \"50px\",\n                    opacity: atBottom() ? \"0\" : \"100\",\n                  }}\n                >\n                  <DownCircleOutlined\n                    style={{\n                      color: props.chatHistory.length\n                        ? props.chatHistory[props.chatHistory.length - 1].id ===\n                          lastMessageSeen\n                          ? \"white\"\n                          : \"cyan\"\n                        : \"white\",\n                    }}\n                    onClick={() => {\n                      updateChatScroll();\n                      if (props.chatHistory.length !== 0) {\n                        updateLastMessageSeen(props.chatHistory);\n                      }\n                    }}\n                  />\n                </div>\n                <div>\n                  <Button\n                    className=\"chat-history-DownCircleOutlined-button\"\n                    style={{\n                      display:\n                        props.chatHistory.length >= 10 && !noMoreHistory\n                          ? \"inherit\"\n                          : \"none\",\n                    }}\n                    onClick={() => {\n                      let elem = document.getElementById(\"chatHistoryListId\");\n                      setOldListHeight(elem.scrollHeight);\n                      loadHistory(false, props.selectedDiscussion.id);\n                    }}\n                  >\n                    Load More Messages\n                  </Button>\n                  <List\n                    dataSource={props.chatHistory}\n                    locale={{\n                      emptyText: (\n                        <div>\n                          <LoadingOutlined\n                            className=\"chat-history-loadingOutlined\"\n                            style={{\n                              display: pageLoaded ? \"none\" : \"inherit\",\n                            }}\n                            spin\n                          />\n                          <h2\n                            style={{\n                              display: pageLoaded ? \"inherit\" : \"none\",\n                            }}\n                          >\n                            {props.anonymousBucket\n                              ? \"No anonymous messages received\"\n                              : \"Send your first message!\"}\n                          </h2>\n                        </div>\n                      ),\n                    }}\n                    renderItem={(item) => {\n                      return (\n                        <List.Item\n                          className=\"chat-history-listItem\"\n                        >\n                          <div\n                            className=\"chatHistoryFlexWrapper\"\n                            style={{\n                              flexDirection: calculateFlexRowDirection(item),\n                              textAlign: calculateTextAlign(item),\n                            }}\n                          >\n                            <div\n                              className=\"chatHistoryFlexWrapperAfter\"\n                              style={{\n                                display: props.chatIdenticons\n                                  ? \"inherit\"\n                                  : \"none\",\n                                opacity: item[\"merge\"] ? \"0\" : \"1\",\n                              }}\n                              onClick={() => {\n                                setUserPreviewUser(\n                                  findUserByAddress(props, item.sender)\n                                );\n                                setUserPreviewVisible(true);\n                              }}\n                            >\n                              {generateIdenticon(item.sender, 25)}\n                            </div>\n                            <div\n                              className=\"chatHistoryMessageWrapper\"\n                              style={{\n                                marginTop: item[\"merge\"] ? \"0px\" : \"5px\",\n                              }}\n                            >\n                              <div\n                                style={{\n                                  display:\n                                    item[\"merge\"] === true &&\n                                    item.payload &&\n                                    item.amtMsat < 15000\n                                      ? \"none\"\n                                      : \"flex\",\n                                  flexDirection:\n                                    calculateFlexRowDirection(item),\n                                  fontSize: \"13px\",\n                                }}\n                              >\n                                <div className=\"chatHistoryMessageWrapperDiv\">\n                                  <b\n                                    className=\"chat-history-interlocutorsName\"\n                                    style={{\n                                      color:\n                                        calculateChatHistoryMessageColor(item),\n                                    }}\n                                    onClick={() => {\n                                      setUserPreviewUser(\n                                        findUserByAddress(props, item.sender)\n                                      );\n                                      setUserPreviewVisible(true);\n                                    }}\n                                  >\n                                    {findSenderName(item) !==\n                                    props.selfInfo.alias\n                                      ? findSenderName(item)\n                                      : \"You\"}\n                                  </b>\n                                </div>\n                                <Divider type=\"vertical\" />\n                                <div className=\"chatHistoryMessageWrapperDivider\">\n                                  {unixToDate(item.sentTimestamp.seconds)}\n                                </div>\n                                <Divider type=\"vertical\" />\n                                <span className=\"chatHistoryCost\">\n                                  <span\n                                    className=\"chat-history-spanAfterDivider\"\n                                    style={{\n                                      color:\n                                        findSenderName(item) !==\n                                        props.selfInfo.alias\n                                          ? \"green\"\n                                          : \"red\",\n                                      paddingLeft: item.payload ? \"0px\" : \"5px\",\n                                    }}\n                                    onClick={() => {\n                                      setSelectedMessage(item);\n                                      setFeeModalVisible(true);\n                                    }}\n                                  >\n                                    {`${cryptoUtils.msatToCurrentCryptoUnit(\n                                      props,\n                                      parseInt(item.amtMsat) +\n                                        parseInt(item.totalFeesMsat)\n                                    )}`}\n                                  </span>\n                                  <span>{props.selectedCryptoUnit}</span>\n                                  <span\n                                    className=\"chat-history-padding\"\n                                    style={{\n                                      display: item.payload\n                                        ? \"none\"\n                                        : \"inherit\",\n                                    }}\n                                  >\n                                    {findSenderName(item) !==\n                                    props.selfInfo.alias\n                                      ? \"from\"\n                                      : \"to\"}\n                                    <span className=\"chat-history-padding\">\n                                      {props.selectedDiscussion.participantsList\n                                        .length > 1\n                                        ? findSenderName(item) !==\n                                          props.selfInfo.alias\n                                          ? findSenderName(item)\n                                          : \"everyone\"\n                                        : concatUserNames(props, [\n                                          props.selectedDiscussion\n                                            .participantsList[0],\n                                        ])}\n                                    </span>\n                                  </span>\n                                </span>\n                                <Divider type=\"vertical\" />\n                                <span\n                                  style={{\n                                    color: item.senderVerified\n                                      ? \"green\"\n                                      : \"red\",\n                                  }}\n                                >\n                                  <Tooltip\n                                    title={\n                                      item.senderVerified\n                                        ? \"Verified Message\"\n                                        : \"Unverified Message\"\n                                    }\n                                  >\n                                    {item.senderVerified ? (\n                                      item.sender === props.selfInfo.address ? (\n                                        <CheckOutlined />\n                                      ) : (\n                                        <SafetyOutlined />\n                                      )\n                                    ) : (\n                                      <CloseCircleOutlined />\n                                    )}\n                                  </Tooltip>\n                                </span>\n                                <span\n                                  className=\"chat-history-setSelectedMessage\"\n                                  style={{\n                                    display:\n                                      calculatePartialFailureIndicatorDisplay(\n                                        item\n                                      ),\n                                  }}\n                                  onClick={() => {\n                                    setSelectedMessage(item);\n                                    setFeeModalVisible(true);\n                                  }}\n                                >\n                                  <Tooltip title=\"Some users did not receive the message / payment\">\n                                    <ExclamationCircleOutlined />\n                                  </Tooltip>\n                                </span>\n                              </div>\n                              <div\n                                className=\"chatHistoryMessage\"\n                                style={{\n                                  backgroundColor:\n                                    findSenderName(item) ===\n                                    props.selfInfo.alias\n                                      ? props.myMessageColor\n                                      : props.otherMessageColor,\n                                  display: item.payload\n                                    ? \"inline-block\"\n                                    : \"none\",\n                                  maxWidth:\n                                    props.chatLayout === \"normal\"\n                                      ? \"60%\"\n                                      : \"80%\",\n                                }}\n                              >\n                                {payloadToDom(\n                                  props,\n                                  item.payload,\n                                  item.sender === props.selfInfo.address,\n                                  item.amtMsat,\n                                  item.discussionId\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </List.Item>\n                      );\n                    }}\n                  />\n                </div>\n              </div>\n            </Layout.Content>\n            <footer\n              className=\"chat-history-footer\"\n              style={{\n                backgroundColor: theme.menuDarkLite,\n                display:\n                  props.selectedPage === \"chatHistory\" && !props.anonymousBucket\n                    ? \"block\"\n                    : \"none\",\n              }}\n            >\n              <ChatHistoryInput\n                {...props}\n                updateLastMessageSeen={updateLastMessageSeen}\n                updateChatScroll={updateChatScroll}\n                anonymousActive={anonymousActive}\n                setAnonymousActive={setAnonymousActive}\n              />\n            </footer>\n          </Layout>\n\n          <Modal\n            visible={!!feeModalVisible}\n            title={\n              selectedMessage?.sender == props.selfInfo.address ? (\n                <div className=\"chat-history-feeModal\">\n                  <p className=\"chat-history-feeModal-text\">\n                    Received by{\" \"}\n                    {concatUserNames(\n                      props,\n                      routesToAddresses(selectedMessage?.paymentRoutesList)\n                    )}\n                  </p>\n                  <Button\n                    className=\"chat-history-feeModal-button\"\n                    type=\"default\"\n                    onClick={() => {\n                      setRawMessageInfoModalVisible(true);\n                    }}\n                  >\n                    Raw Message\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"chat-history-feeModal\">\n                  <p className=\"chat-history-feeModal-text\">Received by you</p>\n                  <Button\n                    className=\"chat-history-feeModal-button\"\n                    type=\"secondary\"\n                    onClick={() => {\n                      setRawMessageInfoModalVisible(true);\n                    }}\n                  >\n                    Raw Message\n                  </Button>\n                </div>\n              )\n            }\n            footer={[\n              <span key=\"\" className=\"chat-history-footer-span\">\n                {`Total Amount ${\n                  selectedMessage\n                    ? selectedMessage.sender === props.selfInfo.address\n                      ? \"Sent: \"\n                      : \"Received: \"\n                    : \"\"\n                }`}\n                <b>\n                  {`${cryptoUtils.msatToCurrentCryptoUnit(\n                    props,\n                    selectedMessage ? selectedMessage.amtMsat : 0\n                  )}`}\n                </b>\n                {`${props.selectedCryptoUnit}`}\n                <b>\n                  {`  /  ${cryptoUtils.msatAmtToFiat(\n                    props,\n                    selectedMessage ? selectedMessage.amtMsat : 0\n                  )}`}\n                </b>\n                {` ${props.selectedFiatUnit}`}\n                <br />\n                {selectedMessage?.sender === props.selfInfo.address\n                  ? totalFeesFooter()\n                  : \"\"}\n              </span>,\n              <Button\n                key=\"ok\"\n                onClick={() => {\n                  setFeeModalVisible(false);\n                }}\n              >\n                OK\n              </Button>,\n            ]}\n            onOk={() => {\n              setFeeModalVisible(false);\n            }}\n            onCancel={() => {\n              setFeeModalVisible(false);\n            }}\n            cancelButtonProps={{ style: { display: \"none\" } }}\n          >\n            {selectedMessage?.sender === props.selfInfo.address ? (\n              <MessageInfo {...props} selectedMessage={selectedMessage} />\n            ) : (\n              \"You can not retrieve payment information for received messages\"\n            )}\n          </Modal>\n          <Modal\n            title={\"Message information\"}\n            visible={rawMessageInfoModalVisible}\n            onOk={() => {\n              setRawMessageInfoModalVisible(false);\n            }}\n            onCancel={() => {\n              setRawMessageInfoModalVisible(false);\n            }}\n          >\n            Raw data of the arc message\n            <JSONPretty id=\"json-pretty\" data={selectedMessage ? JSON.parse(selectedMessage.payload) : {}}></JSONPretty>\n          </Modal>\n          <UserPreview\n            {...props}\n            visible={userPreviewVisible}\n            setVisible={setUserPreviewVisible}\n            user={userPreviewUser}\n          />\n          <Modal\n            title={\"Discussion Statistics\"}\n            visible={statisticsModalVisible}\n            onOk={() => {\n              setStatisticsModalVisible(false);\n            }}\n            onCancel={() => {\n              setStatisticsModalVisible(false);\n            }}\n            cancelButtonProps={{ style: { display: \"none\" } }}\n          >\n            <ChatHistoryStatistics {...props} />\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatHistory;\n","const loadAutomaticImageLoadingSetting = (setAutomaticImageLoading) => {\n  let res = window.localStorage.getItem('automaticImageLoadingSetting');\n  setAutomaticImageLoading(res !== 'false');\n};\n\nconst saveAutomaticImageLoadingSetting = (setAutomaticImageLoading, value) => {\n  window.localStorage.setItem('automaticImageLoadingSetting', value);\n  setAutomaticImageLoading(value);\n};\n\nconst loadSmoothAnimationsSetting = (setSmoothAnimations) => {\n  let res = window.localStorage.getItem('smoothAnimationsSetting');\n  setSmoothAnimations(res !== 'false');\n};\n\nconst saveSmoothAnimationsSetting = (setSmoothAnimations, value) => {\n  window.localStorage.setItem('smoothAnimationsSetting', value);\n  setSmoothAnimations(value);\n};\n\nconst loadSelectedCryptoUnit = (setSelectedCryptoUnit) => {\n  let res = window.localStorage.getItem('selectedCryptoUnitSetting');\n  if (res === 'sat' || res === 'msat' || res === 'mBTC') {\n    setSelectedCryptoUnit(res);\n  } else {\n    setSelectedCryptoUnit('sat');\n  }\n};\n\nconst saveSelectedCryptoUnit = (setSelectedCryptoUnit, value) => {\n  window.localStorage.setItem('selectedCryptoUnitSetting', value);\n  setSelectedCryptoUnit(value);\n};\n\nconst loadSelectedFiatUnit = (setSelectedFiatUnit) => {\n  let res = window.localStorage.getItem('selectedFiatUnitSetting');\n  if (res === 'EUR' || res === 'USD') {\n    setSelectedFiatUnit(res);\n  } else {\n    setSelectedFiatUnit('EUR');\n  }\n};\n\nconst saveSelectedFiatUnit = (setSelectedFiatUnit, value) => {\n  window.localStorage.setItem('selectedFiatUnitSetting', value);\n  setSelectedFiatUnit(value);\n};\n\nconst loadChatIdenticonsSetting = (setChatIdenticons) => {\n  let res = window.localStorage.getItem('chatIdenticonsSetting');\n  setChatIdenticons(res !== 'false');\n};\n\nconst saveChatIdenticonsSetting = (setChatIdenticons, value) => {\n  window.localStorage.setItem('chatIdenticonsSetting', value);\n  setChatIdenticons(value);\n};\n\nconst loadChatLayoutSetting = (setChatLayout) => {\n  let res = window.localStorage.getItem('chatLayoutSetting');\n  if (res === 'normal' || res === 'left' || res === 'right') {\n    setChatLayout(res);\n  } else {\n    setChatLayout('normal');\n  }\n};\n\nconst saveChatLayoutSetting = (setChatLayout, value) => {\n  window.localStorage.setItem('chatLayoutSetting', value);\n  setChatLayout(value);\n};\n\nconst loadMyMessageColor = (setMyMessageColor) => {\n  let res = window.localStorage.getItem('myMessageColorSetting');\n  if(res !== 'undefined' && res !== undefined && res !== null) {\n    setMyMessageColor(res);\n  } else {\n    setMyMessageColor('darkslategrey');\n  }\n};\n\nconst saveMyMessageColor = (setMyMessageColor, value) => {\n  window.localStorage.setItem('myMessageColorSetting', value);\n  setMyMessageColor(value);\n};\n\nconst loadOtherMessageColor = (setOtherMessageColor) => {\n  let res = window.localStorage.getItem('otherMessageColorSetting');\n  if(res !== 'undefined' && res !== undefined && res !== null) {\n    setOtherMessageColor(res);\n  } else {\n    setOtherMessageColor('sienna');\n  }\n};\n\nconst saveOtherMessageColor = (setOtherMessageColor, value) => {\n  window.localStorage.setItem('otherMessageColorSetting', value);\n  setOtherMessageColor(value);\n};\n\nconst loadDeveloperLogsSetting = (setDeveloperLogs) => {\n  let res = window.localStorage.getItem('developerLogsSetting');\n  setDeveloperLogs(res === 'true');\n  if(res !== 'true') {\n    console.log('Production mode');\n    console.log = function() {};\n  }\n};\n\nconst saveDeveloperLogsSetting = (setDeveloperLogs, value) => {\n  window.localStorage.setItem('developerLogsSetting', value);\n  setDeveloperLogs(value);\n};\n\n\nexport {\n  loadAutomaticImageLoadingSetting,\n  loadSmoothAnimationsSetting,\n  loadSelectedCryptoUnit,\n  loadSelectedFiatUnit,\n  loadChatIdenticonsSetting,\n  loadChatLayoutSetting,\n  loadMyMessageColor,\n  loadOtherMessageColor,\n  loadDeveloperLogsSetting,\n  saveAutomaticImageLoadingSetting,\n  saveSmoothAnimationsSetting,\n  saveSelectedCryptoUnit,\n  saveSelectedFiatUnit,\n  saveChatIdenticonsSetting,\n  saveChatLayoutSetting,\n  saveMyMessageColor,\n  saveOtherMessageColor,\n  saveDeveloperLogsSetting\n};","import React, { useState } from \"react\";\nimport { Button, Form, Divider, Switch, Select, Collapse } from \"antd\";\nimport { GithubPicker } from \"react-color\";\nimport \"./user-settings.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\nimport {\n  saveAutomaticImageLoadingSetting,\n  saveSmoothAnimationsSetting,\n  saveSelectedCryptoUnit,\n  saveSelectedFiatUnit,\n  saveChatIdenticonsSetting,\n  saveChatLayoutSetting,\n  saveMyMessageColor,\n  saveOtherMessageColor,\n  saveDeveloperLogsSetting,\n} from \"../../utils/settings\";\n\nconst messageColorsArray = [\n  \"black\",\n  \"darkslategray\",\n  \"brown\",\n  \"darkblue\",\n  \"darkgreen\",\n  \"darkslateblue\",\n  \"darkslategrey\",\n  \"indigo\",\n  \"olivedrab\",\n  \"sienna\",\n  \"saddlebrown\",\n  \"teal\",\n  \"steelblue\",\n  \"seagreen\",\n  \"#232425\",\n  \"#245559\",\n  \"#552424\"\n];\n\n/**\n * This component represents the user settings page, containing user and connection information.\n * @param {*} props The global variables.\n */\nconst UserSettings = (props) => {\n  // Current account related variables\n  const [url] = useState(window.localStorage.getItem(\"url\"));\n  /**\n   * The user settings page JSX.\n   */\n  return (\n    <>\n      <div className=\"user-settings\">\n        <div\n          className=\"user-settings-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"user-settings-header-text\">Settings</div>\n        </div>\n        <div className=\"user-settings-main\">\n          <Form className=\"user-settings-form\">\n            <Collapse>\n              <Collapse.Panel header=\"View Settings\">\n                <Form.Item>\n                  <Switch\n                    checked={!!props.automaticImageLoading}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveAutomaticImageLoadingSetting(props.setAutomaticImageLoading, value);\n                    }}\n                  />\n                  Allow automatic loading of externally linked images\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.smoothAnimations}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveSmoothAnimationsSetting(props.setSmoothAnimations, value);\n                    }}\n                  />\n                  Enable smooth animations and transitions\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.chatIdenticons}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveChatIdenticonsSetting(props.setChatIdenticons, value);\n                    }}\n                  />\n                  Show user icons in chat messages\n                </Form.Item>\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.chatLayout}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      saveChatLayoutSetting(props.setChatLayout, e);\n                    }}\n                  >\n                    <Select.Option value=\"normal\">Normal</Select.Option>\n                    <Select.Option value=\"left\">Left Side</Select.Option>\n                    <Select.Option value=\"right\">Right Side</Select.Option>\n                  </Select>\n                  Messages Layout\n                </Form.Item>\n\n                My Messages Color:\n                <Form.Item>\n                  <GithubPicker\n                    triangle=\"hide\"\n                    colors={messageColorsArray}\n                    color={props.myMessageColor}\n                    onChangeComplete={(color) => {\n                      saveMyMessageColor(props.setMyMessageColor, color.hex);\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      saveMyMessageColor(props.setMyMessageColor, \"rgba(0, 0, 0, 0.0)\");\n                    }}\n                  >\n                    Transparent\n                  </Button>\n                </Form.Item>\n                Other Messages Color:\n                <Form.Item>\n                  <GithubPicker\n                    className=\"user-settings-github\"\n                    triangle=\"hide\"\n                    colors={messageColorsArray}\n                    color={props.myMessageColor}\n                    onChangeComplete={(color) => {\n                      saveOtherMessageColor(props.setOtherMessageColor, color.hex);\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      saveOtherMessageColor(props.setOtherMessageColor, \"rgba(0, 0, 0, 0.0)\");\n                    }}\n                  >\n                    Transparent\n                  </Button>\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.developerLogs}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveDeveloperLogsSetting(props.setDeveloperLogs, value);\n                    }}\n                  />\n                  Developer Logs (Page refresh required)\n                </Form.Item>\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Crypto Settings\">\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.selectedCryptoUnit}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      saveSelectedCryptoUnit(props.setSelectedCryptoUnit, e);\n                    }}\n                  >\n                    <Select.Option value=\"mBTC\">mBTC</Select.Option>\n                    <Select.Option value=\"sat\">sat</Select.Option>\n                    <Select.Option value=\"msat\">msat</Select.Option>\n                  </Select>\n                  Select crypto unit to display\n                </Form.Item>\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.selectedFiatUnit}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      setSelectedFiatUnit(props.setSelectedFiatUnit, e);\n                    }}\n                  >\n                    <Select.Option value=\"EUR\">EUR</Select.Option>\n                    <Select.Option value=\"USD\">USD</Select.Option>\n                  </Select>\n                  Select fiat unit to display\n                </Form.Item>\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Account Info\">\n                <b>\n                  <Divider orientation=\"left\">\n                    <h2>Self Info</h2>\n                  </Divider>\n                </b>\n                <Form.Item label=\"Your Alias is:\">\n                  {props.selfInfo ? props.selfInfo.alias : \"Not Found\"}\n                </Form.Item>\n                <Form.Item label=\"Your Address is:\">\n                  {props.selfInfo ? props.selfInfo.address : \"Not Found\"}\n                </Form.Item>\n                <b>\n                  <Divider orientation=\"left\">\n                    <h2>Backend Info</h2>\n                  </Divider>\n                </b>\n                <Form.Item label=\"Address:\">{url}</Form.Item>\n                <Form.Item label=\"Version:\">{props.backendVersion}</Form.Item>\n              </Collapse.Panel>\n            </Collapse>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserSettings;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst { OpenChannelRequest, OpenChannelResponse } = require(\"../rpc/rpc_pb\");\nconst { ChannelServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new ChannelServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.openChannel = (req, callback) => {\n  const request = new OpenChannelRequest();\n  request.setAddress(req.address ? req.address : \"\");\n  request.setAmtMsat(req.amtMsat ? req.amtMsat : \"\");\n  request.setPushAmtMsat(req.pushAmtMsat ? req.pushAmtMsat : \"\");\n  request.setMinInputConfs(req.minInputConfs ? req.minInputConfs : \"\");\n  request.setTargetConfirmationBlock(\n    req.targetConfirmationBlock ? req.targetConfirmationBlock : \"\"\n  );\n  return rpcClient.openChannel(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? OpenChannelResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst channelClient = () => {\n  return client;\n};\n\nexport default channelClient;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  VersionRequest,\n  Version,\n  SelfInfoRequest,\n  SelfInfoResponse,\n  SelfBalanceRequest,\n  SelfBalanceResponse,\n  GetNodesRequest,\n  NodeInfoResponse,\n  SearchNodeByAddressRequest,\n  SearchNodeByAliasRequest,\n  ConnectNodeRequest,\n  ConnectNodeResponse,\n} = require(\"../rpc/rpc_pb\");\nconst { NodeInfoServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new NodeInfoServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getVersion = (req, meta, callback) => {\n  const request = new VersionRequest();\n  return rpcClient.getVersion(\n    request,\n    { ...authCreds(), ...meta },\n    (err, res) => callback(err, res ? Version.toObject(true, res) : undefined)\n  );\n};\n\nclient.getSelfInfo = (req, meta, callback) => {\n  const request = new SelfInfoRequest();\n  return rpcClient.getSelfInfo(\n    request,\n    { ...authCreds(), ...meta },\n    (err, res) =>\n      callback(err, res ? SelfInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.getSelfBalance = (req, callback) => {\n  const request = new SelfBalanceRequest();\n  return rpcClient.getSelfBalance(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? SelfBalanceResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.getNodes = (req, callback) => {\n  const request = new GetNodesRequest();\n  return rpcClient.getNodes(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.searchNodeByAddress = (req, callback) => {\n  const request = new SearchNodeByAddressRequest();\n  request.setAddress(req.address);\n  return rpcClient.searchNodeByAddress(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.searchNodeByAlias = (req, callback) => {\n  const request = new SearchNodeByAliasRequest();\n  request.setAlias(req.alias);\n  return rpcClient.searchNodeByAlias(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.connectNode = (req, callback) => {\n  const request = new ConnectNodeRequest();\n  request.setAddress(req.address);\n  request.setHostport(req.hostport);\n  return rpcClient.connectNode(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? ConnectNodeResponse.toObject(true, res) : undefined)\n  );\n};\n\nconst nodeInfoClient = () => {\n  return client;\n};\n\nexport default nodeInfoClient;\n","import React, { useState } from \"react\";\n\nimport { Form, Divider, Modal, Input, Tabs } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\n\nimport channelClient from \"../../services/channelServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./open-channel.css\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the modal for openning channels.\n * @param {*} props The global variables.\n * @returns The JSX of the modal.\n */\nconst OpenChannel = (props) => {\n  // Modal related variables\n  const [mode, setMode] = useState(\"basic\");\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [pushAmount, setPushAmount] = useState(0);\n  const [minimumInputConfirmations, setMinimumInputConfirmations] = useState(1);\n  const [targetConfirmationBlocks, setTargetConfirmationBlocks] = useState(3);\n\n  /**\n   * Opens a channel to the specific address with current selected options.\n   * @param {*} address\n   */\n  const openChannel = (address) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const pushAmtMsat = cryptoUtils.currentCryptoAmtToMsat(props, pushAmount);\n    channelClient().openChannel(\n      {\n        address: address,\n        amtMsat: amtMsat,\n        pushAmtMsat: pushAmtMsat,\n        minInputConfs: minimumInputConfirmations,\n        targetConfirmationBlocks: targetConfirmationBlocks,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.error(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setLightningAddress(\"\");\n          setAmount(0);\n          setPushAmount(0);\n          setMinimumInputConfirmations(1);\n          setTargetConfirmationBlocks(3);\n          props.setVisible(false);\n          NotificationManager.success(\"Channel pending to open\");\n        }\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Modal\n        title=\"Open Channel\"\n        visible={props.visible}\n        okText=\"Open\"\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        onOk={async () => {\n          const split = splitURI(lightningAddress);\n          const address = split.address;\n          const hostport = split.hostport;\n          await nodeInfoClient().connectNode(\n            {\n              address: address,\n              hostport: hostport,\n            },\n            (err, res) => {\n              if (err) {\n                console.log(err);\n                NotificationManager.error(err.message);\n              }\n              if (res) {\n                console.log(res);\n                NotificationManager.success(\"Connected to Peer\");\n                openChannel(address);\n              }\n            }\n          );\n        }}\n      >\n        <Tabs\n          defaultActiveKey=\"1\"\n          onChange={(e) => {\n            switch (e) {\n            case \"1\":\n              setMode(\"basic\");\n              break;\n            case \"2\":\n              setMode(\"advanced\");\n              break;\n            }\n          }}\n        >\n          <Tabs.TabPane key=\"1\" tab=\"Basic\">\n            <Form layout=\"vertical\">\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Amount ({props.selectedCryptoUnit})\n                  </Divider>\n                  <Input\n                    value={amount.toString()}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n          <Tabs.TabPane key=\"2\" tab=\"Advanced\">\n            <Form layout=\"vertical\">\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Amount ({props.selectedCryptoUnit})\n                  </Divider>\n                  <Input\n                    value={amount.toString()}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Push Amount\n                  </Divider>\n                  <Input\n                    value={pushAmount.toString()}\n                    onChange={(e) => {\n                      setPushAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Minimum Input Confirmations\n                  </Divider>\n                  <Input\n                    value={minimumInputConfirmations.toString()}\n                    onChange={(e) => {\n                      setMinimumInputConfirmations(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Target Confirmation Blocks\n                  </Divider>\n                  <Input\n                    value={targetConfirmationBlocks.toString()}\n                    onChange={(e) => {\n                      setTargetConfirmationBlocks(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n        </Tabs>\n      </Modal>\n    </div>\n  );\n};\n\nexport default OpenChannel;\n","import React, { useState } from \"react\";\n\nimport { Form, Divider, Modal, Input } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./chat-history.css\";\nimport \"./open-channel.css\";\n\n/**\n * This component represents the modal responsible for connecting to other peers on the network.\n * @param {*} props The global variables\n * @returns\n */\nconst ConnectPeer = (props) => {\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  return (\n    <div>\n      <Modal\n        title=\"Connect to Peer\"\n        visible={props.visible}\n        okText=\"Connect\"\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        onOk={() => {\n          console.log(lightningAddress);\n          const params = splitURI(lightningAddress);\n          if (params.error === \"\") {\n            nodeInfoClient().connectNode(\n              {\n                address: params[\"address\"],\n                hostport: params[\"hostport\"],\n              },\n              (err, res) => {\n                if (err) {\n                  console.log(err);\n                  NotificationManager.error(\"Failed to connect to peer\");\n                }\n                if (res) {\n                  console.log(res);\n                  NotificationManager.success(\"Connected to peer\");\n                  props.setVisible(false);\n                  setLightningAddress(\"\");\n                }\n              }\n            );\n          } else {\n            NotificationManager.error(\"Invalid URI format\");\n          }\n        }}\n      >\n        <Form layout=\"vertical\">\n          <Form.Item>\n            <div className=\"open-channel-item\">\n              <Divider orientation=\"left\" className=\"open-channel-item-text\">\n                Node URI\n              </Divider>\n              <Input\n                value={lightningAddress}\n                onChange={(e) => {\n                  setLightningAddress(e.target.value);\n                }}\n                className=\"open-channel-item-input\"\n              />\n            </div>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ConnectPeer;\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Divider, Collapse, Button } from \"antd\";\n\nimport OpenChannel from \"./open-channel\";\nimport ConnectPeer from \"./connect-peer\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport \"./user-funds.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the user funds page. It contains information about on-chain and off-chain balances.\n */\nconst UserFunds = (props) => {\n  // Wallet related variables\n  const [walletConfirmedBalance, setWalletConfirmedBalance] = useState(0);\n  const [walletUnconfirmedBalance, setWalletUnconfirmedBalance] = useState(0);\n  const [channelTotalBalance, setChannelTotalBalance] = useState(0);\n  const [pendingChannelBalance, setPendingChannelBalance] = useState(0);\n  const [channelRemoteBalance, setChannelRemoteBalance] = useState(0);\n\n  const [connectPeerModalVisible, setConnectPeerModalVisible] = useState(false);\n  const [openChannelModalVisible, setOpenChannelModalVisible] = useState(false);\n\n  /**\n   * This function is called once when the component loads.\n   * It fetches the self balance information from the corresponding endpoint.\n   */\n  useEffect(() => {\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(err.message);\n      }\n      if (res) {\n        if (res.walletConfirmedSat) {\n          setWalletConfirmedBalance(Number(`${res.walletConfirmedSat}`));\n        }\n        if (res.walletUnconfirmedSat) {\n          setWalletUnconfirmedBalance(Number(`${res.walletUnconfirmedSat}`));\n        }\n        if (res.channelLocalMsat) {\n          setChannelTotalBalance(\n            Number(`${Math.floor(res.channelLocalMsat / 1000)}`)\n          );\n        }\n        if (res.pendingOpenLocalMsat) {\n          setPendingChannelBalance(\n            Number(`${Math.floor(res.pendingOpenLocalMsat / 1000)}`)\n          );\n        }\n        if (res.channelRemoteMsat) {\n          setChannelRemoteBalance(\n            Number(`${Math.floor(res.channelRemoteMsat / 1000)}`)\n          );\n        }\n      }\n    });\n  }, []);\n\n  /**\n   * The user funds page JSX.\n   */\n  return (\n    <div className=\"user-funds\">\n      <div\n        className=\"user-funds-header\"\n        style={{\n          backgroundColor: theme.menuDarkLite,\n        }}\n      >\n        <DoubleRightOutlined\n          className=\"chatHistoryExpandForMobile\"\n          style={{\n            display: props.sideSquashed\n              ? props.sideActivated\n                ? \"none\"\n                : \"inherit\"\n              : \"none\",\n          }}\n          onClick={() => {\n            props.setSideActivated(true);\n          }}\n        />\n        <div className=\"user-funds-header-text\">Funds</div>\n      </div>\n      <div className=\"users-funds-main\">\n        <Collapse>\n          <Collapse.Panel header=\"Channels\">\n            <Button\n              onClick={() => {\n                setOpenChannelModalVisible(true);\n              }}\n            >\n              Open Channel\n            </Button>\n          </Collapse.Panel>\n          <Collapse.Panel header=\"Peers\">\n            <Button\n              onClick={() => {\n                setConnectPeerModalVisible(true);\n              }}\n            >\n              Connect to Peer\n            </Button>\n          </Collapse.Panel>\n        </Collapse>\n        <Form className=\"user-funds-form\" layout=\"vertical\">\n          <b>\n            <Divider orientation=\"left\">\n              <h2>On-chain Funds</h2>\n            </Divider>\n          </b>\n          <Form.Item label=\"Wallet Confirmed Balance\">\n            <b>{walletConfirmedBalance} sat</b>\n          </Form.Item>\n          <Form.Item label=\"Wallet Unconfirmed Balance\">\n            <b>{walletUnconfirmedBalance} sat</b>\n          </Form.Item>\n          <b>\n            <Divider orientation=\"left\">\n              <h2>Off-chain Funds</h2>\n            </Divider>\n          </b>\n          <Form.Item label=\"Total Channel balance\">\n            <b>{channelTotalBalance} sat</b>\n          </Form.Item>\n          <Form.Item label=\"Pending Channel Balance\">\n            <b>{pendingChannelBalance} sat</b>\n          </Form.Item>\n        </Form>\n        <OpenChannel\n          {...props}\n          visible={openChannelModalVisible}\n          setVisible={setOpenChannelModalVisible}\n        />\n        <ConnectPeer\n          {...props}\n          visible={connectPeerModalVisible}\n          setVisible={setConnectPeerModalVisible}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UserFunds;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  GetContactsRequest,\n  GetContactsResponse,\n  AddContactRequest,\n  AddContactResponse,\n  RemoveContactByIDRequest,\n  RemoveContactResponse,\n  RemoveContactByAddressRequest,\n  ContactInfo,\n  NodeInfo,\n} = require(\"../rpc/rpc_pb\");\nconst { ContactServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new ContactServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getContacts = (req, callback) => {\n  const request = new GetContactsRequest();\n  return rpcClient.getContacts(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? GetContactsResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.addContact = (req, callback) => {\n  const request = new AddContactRequest();\n  const contact = new ContactInfo();\n  const node = new NodeInfo();\n  node.setAlias(req.contact.node.alias);\n  node.setAddress(req.contact.node.address);\n  contact.setNode(node);\n  contact.setId(req.contact.id);\n  contact.setDisplayName(req.contact.displayName);\n  request.setContact(contact);\n  return rpcClient.addContact(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? AddContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.removeContactByID = (req, callback) => {\n  const request = new RemoveContactByIDRequest();\n  request.setId(req.id);\n  return rpcClient.removeContactByID(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? RemoveContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.removeContactByAddress = (req, callback) => {\n  const request = new RemoveContactByAddressRequest();\n  request.setAddress(req.address);\n  return rpcClient.removeContactByAddress(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(err, res ? RemoveContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst contactClient = () => {\n  return client;\n};\n\nexport default contactClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, List, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  UserAddOutlined,\n  UserDeleteOutlined,\n  MessageOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport contactClient from \"../../services/contactServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\nimport discussionClient from \"../../services/discussionServices\";\n\nimport \"./search-users.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the user searching page.\n * @param {*} props The global variables.\n */\nconst SearchUsers = (props) => {\n  // User searching related variables\n  const [aliasToSearch, setaliasToSearch] = useState(\"\");\n  const [addressToSearch, setAddressToSearch] = useState(\"\");\n  const [searchedAlias, setSearchedAlias] = useState();\n  const [searchedAddress, setSearchedAddress] = useState();\n  const [userSelected, setUserSelected] = useState();\n  const [friendlyName, setFriendlyName] = useState(\"\");\n  const [contactAddModalActive, setContactAddModalActive] = useState(false);\n  const [contactRemoveModalActive, setContactRemoveModalActive] =\n    useState(false);\n  const [searchAliasLoading, setSearchAliasLoading] = useState(false);\n  const [searchAliasEmptyText, setSearchAliasEmptyText] = useState('Search Users by Alias');\n  const [searchAddressLoading, setSearchAddressLoading] = useState(false);\n  const [searchAddressEmptyText, setSearchAddressEmptyText] = useState('Search Users by Alias');\n\n  const [enteredAlias, setEnteredAlias] = useState(\"\");\n  const [searchAliasTouched, setSearchAliasTouched] = useState(false);\n  const [aliasFormValid, setAliasFormValid] = useState(false);\n\n  const [enteredAddress, setEnteredAddress] = useState(\"\");\n  const [searchAddressTouched, setSearchAddressTouched] = useState(false);\n  const [addressFormValid, setAddressFormValid] = useState(false);\n\n\n  const enteredAliasIsValid = () => {\n    return enteredAlias.length >= 3;\n  };\n  const aliasInputIsInvalid = () => {\n    return !enteredAliasIsValid() && searchAliasTouched;\n  };\n\n  const enteredAddressIsValid = () => {\n    return enteredAddress.length >= 4;\n  };\n  const addressInputIsInvalid = () => {\n    return !enteredAddressIsValid() && searchAddressTouched;\n  };\n\n  useEffect(() => {\n    if (enteredAliasIsValid() && aliasFormValid == false) {\n      setAliasFormValid(true);\n    } else if (!enteredAliasIsValid() && aliasFormValid == true) {\n      setAliasFormValid(false);\n    }\n  }, [enteredAlias]);\n\n  useEffect(() => {\n    if (enteredAddressIsValid() && addressFormValid == false) {\n      setAddressFormValid(true);\n    } else if (!enteredAddressIsValid() && addressFormValid == true) {\n      setAddressFormValid(false);\n    }\n  }, [enteredAddress]);\n  /**\n   * Creates a new contact based on selected user and (optional) entered friendly name.\n   */\n  const createContact = () => {\n    let req = {\n      contact: {\n        node: {\n          alias: userSelected ? userSelected.alias : \"unknown\",\n          address: userSelected ? userSelected.address : \"unknown\",\n        },\n        id: 20,\n        displayName: friendlyName !== undefined ? friendlyName : \"\",\n      },\n    };\n    const parsedContact = {\n      user: req.contact.node,\n      id: req.contact.id,\n      displayName: req.contact.displayName,\n    };\n    contactClient().addContact(req, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.warning(\"Failed to add contact\");\n      }\n      if (res) {\n        console.log(res);\n        if (props.contacts) {\n          props.setContacts(props.contacts.concat([parsedContact]));\n        } else {\n          props.setContacts([parsedContact]);\n        }\n        NotificationManager.info(\"Contact Added\");\n      }\n      let disc = props.discussions.find((elem) => {\n        return elem.participantsList[0] === userSelected.address;\n      });\n      if (disc === undefined) {\n        console.log(\"Not in discussion, creating...\");\n        discussionClient().addDiscussion(\n          {\n            discussion: {\n              participants: [userSelected.address],\n            },\n          },\n          (err, res) => {\n            if (err) {\n              console.log(err);\n            }\n            if (res) {\n              console.log(res);\n              props.setDiscussions((oldDiscussions) => {\n                return oldDiscussions.concat(res.discussion);\n              });\n            }\n          }\n        );\n      }\n      setContactAddModalActive(false);\n    });\n  };\n\n  /**\n   * Deletes the selected contact.\n   */\n  const deleteContact = () => {\n    contactClient().removeContactByAddress(\n      {\n        address: userSelected.address,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(\"Failed to remove contact\");\n        }\n        if (res) {\n          NotificationManager.success(\"Removed contact\");\n        }\n      }\n    );\n    props.setContacts(\n      props.contacts.filter((item) => {\n        return item.user.address !== userSelected.address;\n      })\n    );\n    setContactRemoveModalActive(false);\n  };\n\n  /**\n   * Searches users based on entered alias.\n   */\n  const searchUsersByAlias = () => {\n    setSearchAliasLoading(true);\n    setSearchAliasEmptyText('Loading');\n    nodeInfoClient().searchNodeByAlias(\n      {\n        alias: aliasToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          setSearchedAlias(res.nodesList);\n        }\n        setSearchAliasEmptyText('No results');\n        setSearchAliasLoading(false);\n      }\n    );\n  };\n\n  /**\n   * Searches users based on entered addresses.\n   */\n  const searchUsersByAddress = () => {\n    setSearchAddressLoading(true);\n    setSearchAddressEmptyText('Loading');\n    nodeInfoClient().searchNodeByAddress(\n      {\n        address: addressToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setSearchedAddress(res.nodesList);\n        }\n        setSearchAddressEmptyText('No results');\n        setSearchAddressLoading(false);\n      }\n    );\n  };\n\n  /**\n   * Validating if the user entered more than 4 characters and touched the inputs\n   */\n\n  const aliasInputChangeHandler = (event) => {\n    setEnteredAlias(event.target.value);\n    setaliasToSearch(event.target.value);\n  };\n\n  const aliasInputBlurHandler = (event) => {\n    setSearchAliasTouched(true);\n  };\n\n  const aliasFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchAliasTouched(true);\n\n    if (enteredAlias.length < 3) {\n      return;\n    }\n\n    setSearchAliasTouched(false);\n  };\n\n  const addressInputChangeHandler = (event) => {\n    setEnteredAddress(event.target.value);\n    setAddressToSearch(event.target.value);\n  };\n\n  const addressInputBlurHandler = (event) => {\n    setSearchAddressTouched(true);\n  };\n\n  const addressFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchAddressTouched(true);\n\n    setSearchAddressTouched(false);\n  };\n\n  /**\n   * The search users page JSX.\n   */\n  return (\n    <>\n      <div className=\"search-users\">\n        <div\n          className=\"search-users-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <div className=\"chatHistoryExpandForMobile\">\n            <DoubleRightOutlined\n              style={{\n                display: props.sideSquashed\n                  ? props.sideActivated\n                    ? \"none\"\n                    : \"inherit\"\n                  : \"none\",\n              }}\n              onClick={() => {\n                props.setSideActivated(true);\n              }}\n            />\n          </div>\n          <div className=\"search-users-header-text\">\n            Search Users on the Network\n          </div>\n        </div>\n        <div className=\"search-users-contents\">\n          <h3>Search Users {`(${props.users?.length} found)`}</h3>\n          <form onSubmit={aliasFormSubmissionHandler}>\n            <div className=\"search-wrapper\">\n              <div className=\"users-search\">\n                <Input\n                  title=\"Search by alias\"\n                  className=\"search-users-input\"\n                  placeholder=\"Enter Alias\"\n                  onChange={aliasInputChangeHandler}\n                  onBlur={aliasInputBlurHandler}\n                  value={enteredAlias}\n                  onKeyDown={\n                    aliasFormValid ? (\n                      (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAlias()\n                          : undefined;\n                      }\n                    ) : () => (\n                      <p className=\"error-validation\">Minimum 3 characters</p>\n                    )\n                  }\n                />\n                <Button\n                  className=\"search-users-button\"\n                  disabled={!aliasFormValid}\n                  onClick={() => {\n                    searchUsersByAlias();\n                  }}\n                >\n                  {searchAliasLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {aliasInputIsInvalid() && (\n                <p className=\"error-validation\">Minimum 3 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: searchAliasEmptyText,\n                }}\n                className=\"search-users-description\"\n                placeholder=\"\"\n                dataSource={searchedAlias || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"search-users-container\">\n                      <div className=\"search-users-containerDv\">\n                        {item.alias}\n                      </div>\n                      Address:\n                      <div className=\"search-users-containerAddress\">\n                        {` ${item.address}`}\n                      </div>\n                      <br />\n                      <div className=\"search-users-container-icons\">\n                        <Button\n                          onClick={() => {\n                            if (inDiscussion) {\n                              console.log(\"already in discussion\");\n                              props.setSelectedDiscussion(inDiscussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            } else {\n                              console.log(\"creating discussion:\", item.address);\n                              discussionClient().addDiscussion(\n                                {\n                                  discussion: {\n                                    participants: [item.address],\n                                    options: {\n                                      anonymous: false,\n                                    },\n                                  },\n                                },\n                                (err, res) => {\n                                  if (err) {\n                                    console.log(err);\n                                    NotificationManager.warning(\n                                      \"Failed to add discussion\"\n                                    );\n                                  }\n                                  if (res) {\n                                    console.log(res);\n                                    props.setDiscussions((oldDiscussions) => {\n                                      return oldDiscussions.concat(\n                                        res.discussion\n                                      );\n                                    });\n                                    props.setSelectedDiscussion(res.discussion);\n                                    props.setSelectedPage(\"chatHistory\");\n                                  }\n                                }\n                              );\n                            }\n                          }}\n                        >\n                          <MessageOutlined />\n                        </Button>\n                        <Button\n                          className=\"search-users-button\"\n                          onClick={() => {\n                            setUserSelected(item);\n                            if (inContacts) {\n                              setContactRemoveModalActive(true);\n                            } else {\n                              setContactAddModalActive(true);\n                            }\n                          }}\n                        >\n                          {inContacts ? (\n                            <UserDeleteOutlined className=\"search-users-userDeleteOutlined\" />\n                          ) : (\n                            <UserAddOutlined className=\"search-users-userAddOutlined\" />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </form>\n          <form onSubmit={addressFormSubmissionHandler}>\n            <div className=\"search-wrapper\">\n              <div className=\"users-search\">\n                <Input\n                  placeholder=\"Enter Address\"\n                  title=\"Search by address\"\n                  onChange={addressInputChangeHandler}\n                  onBlur={addressInputBlurHandler}\n                  onKeyDown={\n                    addressFormValid ? (\n                      (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAddress()\n                          : undefined;\n                      }\n                    ) : () => (\n                      <p className=\"error-validation\">Minimum 4 characters</p>\n                    )\n                  }\n                  className=\"search-users-input\"\n                />\n                <Button\n                  className=\"search-users-button\"\n                  onClick={() => {\n                    searchUsersByAddress();\n                  }}\n                  disabled={!addressFormValid}\n                >\n                  {searchAddressLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {addressInputIsInvalid() && (\n                <p className=\"error-validation\">Minimum 4 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: searchAddressEmptyText,\n                }}\n                className=\"search-users-description\"\n                placeholder=\"\"\n                dataSource={searchedAddress || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"search-users-containerDv\">\n                        {item.alias}\n                      </div>\n                      Address:\n                      <div className=\"search-users-Address\">{` ${item.address}`}</div>\n                      <br />\n                      <div className=\"search-users-button\">\n                        <Button\n                          onClick={() => {\n                            if (inDiscussion) {\n                              console.log(\"already in discussion\");\n                              props.setSelectedDiscussion(inDiscussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            } else {\n                              console.log(\"creating discussion:\", item.address);\n                              discussionClient().addDiscussion(\n                                {\n                                  discussion: {\n                                    participants: [item.address],\n                                    options: {\n                                      anonymous: false,\n                                    },\n                                  },\n                                },\n                                (err, res) => {\n                                  if (err) {\n                                    console.log(err);\n                                    NotificationManager.warning(\n                                      \"Failed to add discussion\"\n                                    );\n                                  }\n                                  if (res) {\n                                    console.log(res);\n                                    props.setDiscussions((oldDiscussions) => {\n                                      return oldDiscussions.concat(\n                                        res.discussion\n                                      );\n                                    });\n                                    props.setSelectedDiscussion(res.discussion);\n                                    props.setSelectedPage(\"chatHistory\");\n                                  }\n                                }\n                              );\n                            }\n                          }}\n                        >\n                          <MessageOutlined />\n                        </Button>\n                        <Button\n                          className=\"search-users-button\"\n                          onClick={() => {\n                            setUserSelected(item);\n                            if (inContacts) {\n                              setContactRemoveModalActive(true);\n                            } else {\n                              setContactAddModalActive(true);\n                            }\n                          }}\n                        >\n                          {inContacts ? (\n                            <UserDeleteOutlined className=\"search-users-userDeleteOutlined\" />\n                          ) : (\n                            <UserAddOutlined className=\"search-users-userAddOutlined\" />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n              <Modal\n                visible={!!contactAddModalActive}\n                title=\"Enter Friendly name\"\n                onOk={() => {\n                  createContact();\n                }}\n                onCancel={() => {\n                  setContactAddModalActive(false);\n                }}\n                okButtonProps={{ type: \"default\" }}\n              >\n                You are adding\n                {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n                to contacts.\n                <Input\n                  className=\"search-users-inputModal\"\n                  onChange={(e) => {\n                    setFriendlyName(e.target.value);\n                  }}\n                  placeholder=\"Friendly Name\"\n                />\n              </Modal>\n              <Modal\n                visible={!!contactRemoveModalActive}\n                title=\"Deleting Contact\"\n                onOk={() => {\n                  deleteContact();\n                }}\n                onCancel={() => {\n                  setContactRemoveModalActive(false);\n                }}\n                okButtonProps={{ type: \"default\" }}\n              >\n                You are removing\n                {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n                from contacts.\n              </Modal>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchUsers;\n","import React, { useState } from \"react\";\nimport { Button, List, Modal } from \"antd\";\nimport { UserDeleteOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport contactClient from \"../../services/contactServices\";\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./contacts.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the contacts page.\n * This page manages the user's contacts.\n * @param {*} props The global variables.\n */\nconst Contacts = (props) => {\n  const [contactRemoveModalActive, setContactRemoveModalActive] =\n    useState(false);\n  const [userSelected, setUserSelected] = useState();\n\n  /**\n   * Deletes the currently selected user (userSelected) from contacts.\n   */\n  const deleteContact = () => {\n    contactClient().removeContactByAddress(\n      {\n        address: userSelected.address,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(\"Failed to remove contact\");\n        }\n        if (res) {\n          NotificationManager.success(\"Removed contact\");\n        }\n      }\n    );\n    props.setContacts(\n      props.contacts.filter((item) => {\n        return item.user.address !== userSelected.address;\n      })\n    );\n    setContactRemoveModalActive(false);\n  };\n\n  /**\n   * The contacts page JSX.\n   */\n  return (\n    <>\n      <div className=\"contacts\">\n        <div\n          className=\"contacts-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n          onClick={() => {\n            if (props.sideActivated === true) {\n              props.setSideActivated(false);\n            }\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"contacts-header-text\">Contacts</div>\n        </div>\n        <div\n          className=\"contacts-body\"\n          onClick={() => {\n            props.setSideActivated(false);\n          }}\n        >\n          <List\n            locale={{\n              emptyText: \"No Contacts\",\n            }}\n            className=\"contacts-list\"\n            placeholder=\"\"\n            dataSource={props.contacts || undefined}\n            itemLayout=\"horizontal\"\n            renderItem={(item) => {\n              let inDiscussion =\n                props.discussions.length !== 0\n                  ? props.discussions.find((elem) => {\n                    return (\n                      elem.participantsList.includes(item.user.address) &&\n                        elem.participantsList.length === 1\n                    );\n                  })\n                  : false;\n              return (\n                <List.Item className=\"userSearchContainer\">\n                  <div className=\"userSearchContainerAfter\">\n                    {`${item.displayName ? item.displayName : \"\"} (${\n                      item.user.alias\n                    })`}\n                  </div>\n                  Address:\n                  <div className=\"userSearchContainerAddress\">\n                    {` ${item.user.address}`}\n                  </div>\n                  <br />\n                  <Button\n                    className=\"userSearchContainerButton\"\n                    onClick={() => {\n                      setUserSelected(item.user);\n                      setContactRemoveModalActive(true);\n                    }}\n                  >\n                    {<UserDeleteOutlined className=\"userDeleteOutlined\" />}\n                  </Button>\n                  <Button\n                    className=\"userDeleteOutlinedButton\"\n                    onClick={() => {\n                      if (inDiscussion) {\n                        console.log(\"already in discussion\");\n                        props.setSelectedDiscussion(inDiscussion);\n                        props.setSelectedPage(\"chatHistory\");\n                      } else {\n                        console.log(\"creating discussion:\", item.user.address);\n                        discussionClient().addDiscussion(\n                          {\n                            discussion: {\n                              participants: [item.user.address],\n                              options: {\n                                anonymous: false,\n                              },\n                            },\n                          },\n                          (err, res) => {\n                            if (err) {\n                              console.log(err);\n                              NotificationManager.warning(\n                                \"Failed to add discussion\"\n                              );\n                            }\n                            if (res) {\n                              console.log(res);\n                              props.setDiscussions((oldDiscussions) => {\n                                return oldDiscussions.concat(res.discussion);\n                              });\n                              props.setSelectedDiscussion(res.discussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            }\n                          }\n                        );\n                      }\n                    }}\n                  >\n                    <MessageOutlined />\n                  </Button>\n                </List.Item>\n              );\n            }}\n          />\n          <Modal\n            visible={!!contactRemoveModalActive}\n            title=\"Deleting Contact\"\n            onOk={() => {\n              deleteContact();\n            }}\n            onCancel={() => {\n              setContactRemoveModalActive(false);\n            }}\n            okButtonProps={{ type: \"default\" }}\n          >\n            You are removing\n            {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n            from contacts.\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n","export default __webpack_public_path__ + \"static/media/arc-logo.b26a22a5.png\";","export default __webpack_public_path__ + \"static/media/programize_logo.8a1b915d.png\";","import React from \"react\";\n\nimport arcLogo from \"../../media/arc-logo.png\";\nimport programizeLogo from \"../../media/programize_logo.png\";\nimport \"./logo.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the static arc logo page.\n * It is the default page when application starts up, or the default page in case of erroneous page selection.\n */\nconst Logo = (props) => {\n  return (\n    <>\n      <div className=\"welcomePage\">\n        <div\n          className=\"welcomePage-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"welcomePage-header-text\">\n            Messages and payments combined!\n          </div>\n        </div>\n        <div className=\"welcomePage-logo\">\n          <img src={arcLogo} className=\"interactiveLogoC13n\" />\n          <img src={programizeLogo} className=\"interactiveLogoProgramize\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Logo;\n","import nodeInfoClient from \"../services/nodeInfoServices\";\n/**\n * The FE application version.\n */\nconst version = \"0.0.2\";\n\n/**\n * Acquires the returned backend version.\n * @param {*} setBackendVersion The setter of the state variable representing the version (used to acquire the value asynchronously).\n */\nconst getBackendVersion = (setBackendVersion) => {\n  nodeInfoClient.getVersion({}, (err, res) => {\n    if (err) {\n      return setBackendVersion(\"invalid\");\n    }\n    if (res) {\n      if (res.version) {\n        return setBackendVersion(res.version);\n      } else {\n        return setBackendVersion(\"invalid\");\n      }\n    }\n  });\n};\n\nexport { version, getBackendVersion };\n","/**\n   * This function adds an account to the local storage.\n   * @param {*} account Object containing account information\n   */\nconst addToAccounts = (props, account) => {\n  let res = props.accounts.filter((elem) => {\n    return elem.url !== account.url;\n  });\n  props.setAccounts((oldAccounts) => {\n    res.push(account);\n    saveAccounts(res);\n    return res;\n  });\n};\n\n/**\n   * This function removes an account from the local storage.\n   * @param {*} account Object containing account information\n   */\nconst removeFromAccounts = (props, account) => {\n  let res = props.accounts.filter((elem) => {\n    return elem.url !== account.url;\n  });\n  props.setAccounts(res);\n  saveAccounts(res);\n};\n\n/**\n   * This function loads the accounts saves in local storage.\n   */\nconst loadAccounts = (props) => {\n  let res = window.localStorage.getItem('accounts');\n  if (res) {\n    props.setAccounts(JSON.parse(res));\n  }\n};\n\n/**\n   * This function saves the accounts array in local storage.\n   * @param {*} accountsArray The accounts array.\n   */\nconst saveAccounts = (accountsArray) => {\n  console.log(\"Savving to accounts\", accountsArray);\n  window.localStorage.setItem('accounts', JSON.stringify(accountsArray));\n};\n\nexport {\n  addToAccounts,\n  removeFromAccounts,\n  loadAccounts,\n  saveAccounts\n};","import { List, Modal, Button, Form, Input } from \"antd\";\nimport { DeleteOutlined, LoginOutlined } from \"@ant-design/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport nodeInfoClient from \"../services/nodeInfoServices\";\nimport { version } from \"../config/version\";\n\nimport { addToAccounts, removeFromAccounts } from \"../utils/accounts-utils\";\n\nimport sleep from \"../utils/system\";\n\nimport \"./accounts.css\";\nimport arcLogo from \"../media/arc-logo.png\";\nimport generateIdenticon from \"../utils/identicon\";\n\nconst { Version } = require(\"../rpc/rpc_pb.js\");\n\n/**\n * This component represents the account selection screen.\n * @param {*} props The global variables.\n */\nconst Accounts = (props) => {\n  // Modal related variables\n  const [addAccountModalVisible, setAddAccountModalVisible] = useState(false);\n  const [deleteAccountModalVisible, setDeleteAccountModalVisible] =\n    useState(false);\n  const [credentialsModalVisible, setCredentialsModalVisible] = useState(false);\n  const [usernameToUse, setUsernameToUse] = useState(\"\");\n  const [passwordToUse, setPasswordToUse] = useState(\"\");\n  const [urlToAdd, setUrlToAdd] = useState(\"\");\n  const [selectedAccount, setSelectedAccount] = useState();\n\n  /**\n   * This function is called once when the component loads.\n   * It checks for previously selected account in order to connect automatically on the same account.\n   */\n  useEffect(() => {\n    if (props.loadAccount === 0) {\n      let url = window.localStorage.getItem(\"url\");\n      if (url !== \"\" && url !== \"undefined\" && url !== null) {\n        console.log(\"Selected:\", url);\n        props.setSelectedPage(\"connectionScreen\");\n        let deadline = new Date();\n        deadline.setSeconds(deadline.getSeconds() + 1);\n        nodeInfoClient().getVersion(\n          {},\n          { deadline: deadline.getTime() },\n          (err, res) => {\n            if (err) {\n              console.log(err);\n              if (Date.now() < deadline) {\n                NotificationManager.error(\n                  \"Could not reach c13n backend\"\n                );\n              } else {\n                NotificationManager.error(err.message);\n              }\n              window.localStorage.setItem(\"url\", \"\");\n              window.localStorage.setItem(\"httpUsername\", \"\");\n              window.localStorage.setItem(\"httpPassword\", \"\");\n              props.setSelectedPage(\"accounts\");\n            }\n            if (res) {\n              if (res.version) {\n                props.setSelectedPage(\"logo\");\n                props.setBackendVersion(res.version);\n                console.log(res);\n                let backendMajor = res.version.split(\".\")[0];\n                let guiMajor = version.split(\".\")[0];\n                if (backendMajor !== guiMajor) {\n                  props.setSelectedPage(\"versionError\");\n                } else {\n                  props.setLoadAccount(1);\n                }\n              } else {\n                console.log(res);\n                NotificationManager.error(\"Unknown backend error!\");\n                window.localStorage.setItem(\"url\", \"\");\n                window.localStorage.setItem(\"httpUsername\", \"\");\n                window.localStorage.setItem(\"httpPassword\", \"\");\n                props.setSelectedPage(\"accounts\");\n              }\n            }\n          }\n        );\n      }\n    }\n  }, []);\n\n  /**\n   * Performs a login with current credentials.\n   */\n  const credentialsModalLogin = (account) => {\n    if (usernameToUse && passwordToUse) {\n      console.log(\"Logging:\", account);\n      window.localStorage.setItem(\"httpUsername\", usernameToUse);\n      window.localStorage.setItem(\"httpPassword\", passwordToUse);\n      window.localStorage.setItem(\"url\", account.url);\n      setTimeout(\n        () => {\n          window.location.reload(true);\n        },\n        500);\n      setCredentialsModalVisible(false);\n    }\n  };\n\n  const addAccountHandler = () => {\n    if ((urlToAdd !== \"\") && (!!usernameToUse)) {\n      addToAccounts(props, { url: urlToAdd, username: usernameToUse, address: \"\", lastActive: 0 });\n      setSelectedAccount({ url: urlToAdd, address: \"\", lastActive: 0 });\n      setUrlToAdd(\"\");\n      setAddAccountModalVisible(false);\n      credentialsModalLogin({\n        url: urlToAdd,\n        address: \"\",\n        lastActive: 0,\n      });\n    }\n  };\n\n  /**\n   * The accounts page JSX.\n   */\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-page-logo-container\">\n        <img src={arcLogo} className=\"login-page-logo\" />\n      </div>\n      <h3 className=\"login-page-select\">Select a c13n Node</h3>\n      <List\n        className=\"login-page-accountsList\"\n        locale={{\n          emptyText: \"No Accounts\",\n        }}\n        dataSource={props.accounts.sort(function (a, b) {\n          return b.lastActive - a.lastActive;\n        })}\n        renderItem={(item) => {\n          return (\n            <List.Item className=\"accountsListItem\">\n              <Form className=\"accountsForm\">\n                <Form.Item\n                  className=\"accountsFormItem\"\n                  onClick={() => {\n                    if (item.url !== \"\") {\n                      setSelectedAccount(item);\n                      setUsernameToUse(item.username);\n                      setCredentialsModalVisible(true);\n                      setTimeout(\n                        () => {\n                          document.getElementById(\"credentialsPasswordInput\").focus();\n                        },\n                        500\n                      );\n                    }\n                  }}\n                >\n                  {generateIdenticon(item.address, 30)}\n                  {item.url !== \"\" ? (\n                    item.url\n                  ) : (\n                    <span className=\"accountsFormItemError\">\n                      No URL provided\n                    </span>\n                  )}\n                </Form.Item>\n              </Form>\n              <div className=\"accountsButtons\">\n                <Button\n                  className=\"accountsButton\"\n                  onClick={() => {\n                    setSelectedAccount(item);\n                    setDeleteAccountModalVisible(true);\n                  }}\n                >\n                  <DeleteOutlined />\n                </Button>\n              </div>\n            </List.Item>\n          );\n        }}\n      />\n      <Button\n        className=\"login-page-addButton\"\n        onClick={() => {\n          setAddAccountModalVisible(true);\n          setUsernameToUse(\"\");\n          setTimeout(\n            () => {\n              document.getElementById(\"addAccountNodeInput\").focus();\n            },\n            500\n          );\n        }}\n      >\n        <div className=\"login-page-addButton-Text\">+ Add New Node</div>\n      </Button>\n      <Modal\n        visible={!!addAccountModalVisible}\n        onOk={addAccountHandler}\n        onCancel={() => {\n          setAddAccountModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        <div className=\"login-page-modal-logo-container\">\n          <img src={arcLogo} className=\"login-page-modal-logo\" />\n        </div>\n        <Input\n          id=\"addAccountNodeInput\"\n          placeholder=\"Node Address\"\n          value={urlToAdd}\n          className=\"accountsInput\"\n          onChange={(e) => {\n            setUrlToAdd(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Username\"\n          className=\"accountsInputCred\"\n          value={usernameToUse}\n          onChange={(e) => {\n            setUsernameToUse(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Password\"\n          className=\"accountsInputCred\"\n          type=\"password\"\n          value={passwordToUse}\n          onChange={(e) => {\n            setPasswordToUse(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            return e.key === \"Enter\"\n              ? e.shiftKey\n                ? undefined\n                : addAccountHandler()\n              : undefined;\n          }}\n        />\n      </Modal>\n      <Modal\n        visible={!!deleteAccountModalVisible}\n        onOk={() => {\n          removeFromAccounts(props, selectedAccount);\n          setDeleteAccountModalVisible(false);\n        }}\n        onCancel={() => {\n          setDeleteAccountModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        Delete Account?\n      </Modal>\n      <Modal\n        visible={!!credentialsModalVisible}\n        onOk={() => {\n          credentialsModalLogin(selectedAccount);\n        }}\n        onCancel={() => {\n          setCredentialsModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n      >\n        <div className=\"login-page-modal-logo-container\">\n          <img src={arcLogo} className=\"login-page-modal-logo\" />\n        </div>\n        <Input\n          placeholder=\"Username\"\n          className=\"accountsInputCred\"\n          value={usernameToUse}\n          onChange={(e) => {\n            setUsernameToUse(e.target.value);\n          }}\n        />\n        <Input\n          id=\"credentialsPasswordInput\"\n          placeholder=\"Password\"\n          className=\"accountsInputCred\"\n          type=\"password\"\n          value={passwordToUse}\n          onChange={(e) => {\n            setPasswordToUse(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            return e.key === \"Enter\"\n              ? e.shiftKey\n                ? undefined\n                : credentialsModalLogin(selectedAccount)\n              : undefined;\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Accounts;\n","import React from \"react\";\n\nimport { Button, Form } from \"antd\";\n\nimport { version } from \"../../config/version\";\n\nimport \"./version-error.css\";\n\nconst formLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 10 },\n};\n/**\n * This component represents the error screen for incompatible BE/FE version.\n * @param {} props The global variables.\n * @returns The JSX of the error screen.\n */\nconst VersionScreen = (props) => {\n  return (\n    <div className=\"version-error-versionScreen\">\n      <h3>Incompatible Backend version</h3>\n      <Form {...formLayout}>\n        <Form.Item label=\"Backend Version\">{props.backendVersion}</Form.Item>\n        <Form.Item label=\"GUI Version\">{version}</Form.Item>\n      </Form>\n      <Button\n        onClick={() => {\n          window.localStorage.setItem(\"url\", \"\");\n          window.location.reload(true);\n        }}\n        className=\"version-error-button\"\n      >\n        Choose another C13N backend\n      </Button>\n    </div>\n  );\n};\n\nexport default VersionScreen;\n","import React from \"react\";\n\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport \"./connection-screen.css\";\n\n/**\n * This component represents the connection screen.\n * @returns The connection screen JSX.\n */\nconst ConnectionScreen = () => {\n  return (\n    <div className=\"connection-screen-dv\">\n      <h2>Connecting</h2>\n      <LoadingOutlined spin />\n    </div>\n  );\n};\n\nexport default ConnectionScreen;\n","import React, { useState } from \"react\";\nimport { Button, Input, List, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n  MinusOutlined,\n  CheckOutlined,\n} from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./group-chat.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the contacts page.\n * This page manages the user's contacts.\n * @param {*} props The global variables.\n */\nconst GroupChat = (props) => {\n  const [aliasToSearch, setAliasToSearch] = useState(\"\");\n  const [searchedAlias, setSearchedAlias] = useState();\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  const [searchGroupTouched, setSearchGroupTouched] = useState(false);\n\n  const enteredGroupIsValid = aliasToSearch.length >= 3;\n  const groupInputIsInvalid = !enteredGroupIsValid && searchGroupTouched;\n\n  const [groupModalVisible, setGroupModalVisible] = useState(false);\n\n  /**\n   * Check if given user belongs in the participant list.\n   * @param {*} user The user object.\n   * @returns Found status.\n   */\n  const isInParticipants = (user) => {\n    let res = props.selectedParticipants.find((elem) => {\n      if (elem.address == user.address) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return res;\n  };\n\n  /**\n   * Creates the formed group discussion.\n   */\n  const createGroupDiscussion = () => {\n    if (props.selectedParticipants.length > 1) {\n      let addr_list = [];\n      props.selectedParticipants.forEach((elem) => {\n        addr_list.push(elem.address);\n      });\n      console.log(addr_list);\n      discussionClient().addDiscussion(\n        {\n          discussion: {\n            participants: addr_list,\n            options: {\n              anonymous: false,\n            },\n          },\n        },\n        (err, res) => {\n          if (err) {\n            console.log(err);\n            NotificationManager.warning(\"Failed to add discussion\");\n          }\n          if (res) {\n            console.log(res);\n            NotificationManager.success(\"Created group discussion\");\n            props.setDiscussions((oldDiscussions) => {\n              return oldDiscussions.concat(res.discussion);\n            });\n            props.setSelectedDiscussion(res.discussion);\n            props.setSelectedPage(\"chatHistory\");\n          }\n        }\n      );\n      props.setSelectedParticipants([]);\n    } else {\n      NotificationManager.error(\"Not enough participants\");\n    }\n  };\n\n  /**\n   * Searches users based on entered alias.\n   */\n  const searchUsersByAlias = () => {\n    setSearchLoading(true);\n    nodeInfoClient().searchNodeByAlias(\n      {\n        alias: aliasToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          setSearchedAlias(res.nodesList);\n        }\n        setSearchLoading(false);\n      }\n    );\n  };\n\n  const groupBlurHandler = (event) => {\n    setSearchGroupTouched(true);\n  };\n\n  let groupFormIsValid = false;\n\n  if (enteredGroupIsValid) {\n    groupFormIsValid = true;\n  }\n\n  const groupFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchGroupTouched(true);\n\n    if (aliasToSearch.length < 3) {\n      return;\n    }\n\n    setAliasToSearch(\"\");\n    setSearchGroupTouched(false);\n  };\n\n  /**\n   * The group chat page JSX.\n   */\n  return (\n    <>\n      <div className=\"group-chat\">\n        <div\n          className=\"group-chat-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"group-chat-header-text\">\n            Search Users on the Network\n          </div>\n        </div>\n        <div className=\"group-chat-main\">\n          <Button\n            onClick={() => {\n              setGroupModalVisible(true);\n            }}\n          >\n            Preview Group\n          </Button>\n          <br />\n          <form onSubmit={groupFormSubmissionHandler}>\n            <div className=\"group-chat-searchAlias-wrapper\">\n              <div className=\"group-chat-search\">\n                <Input\n                  title=\"Search by alias\"\n                  placeholder=\"Enter Alias\"\n                  onBlur={groupBlurHandler}\n                  value={aliasToSearch}\n                  onChange={(e) => {\n                    setAliasToSearch(e.target.value);\n                  }}\n                  onKeyDown={\n                    groupFormIsValid\n                      ? (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAlias()\n                          : undefined;\n                      }\n                      : () => (\n                        <p className=\"error-validation\">\n                            Minimum 3 characters\n                        </p>\n                      )\n                  }\n                  className=\"group-chat-input\"\n                />\n                <Button\n                  disabled={!groupFormIsValid}\n                  className=\"group-search-button\"\n                  onClick={() => {\n                    searchUsersByAlias();\n                  }}\n                >\n                  {searchLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {groupInputIsInvalid && (\n                <p className=\"error-validation\">Minimum 3 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: \"Search Users by Alias\",\n                }}\n                className=\"usersList\"\n                placeholder=\"\"\n                dataSource={searchedAlias || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"userSearchContainerDv\">{item.alias}</div>\n                      Address:\n                      <div className=\"group-chat-address\">{` ${item.address}`}</div>\n                      <br />\n                      <div className=\"group-chat-addressDv\">\n                        <Button\n                          onClick={(e) => {\n                            props.setSelectedParticipants((oldParticipants) => {\n                              let filtered = oldParticipants.filter((elem) => {\n                                if (item.address === elem.address) {\n                                  return 0;\n                                } else {\n                                  return 1;\n                                }\n                              });\n                              filtered.push(item);\n                              return filtered;\n                            });\n                          }}\n                        >\n                          {isInParticipants(item) ? (\n                            <CheckOutlined />\n                          ) : (\n                            <PlusOutlined />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </form>\n          <Modal\n            visible={!!groupModalVisible}\n            okText=\"Create\"\n            onOk={() => {\n              createGroupDiscussion();\n              setGroupModalVisible(false);\n            }}\n            onCancel={() => {\n              setGroupModalVisible(false);\n            }}\n          >\n            <div>\n              <List\n                locale={{\n                  emptyText: \"No Participants Added\",\n                }}\n                className=\"usersList\"\n                placeholder=\"\"\n                dataSource={props.selectedParticipants || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"group-chat-containerDv\">{item.alias}</div>\n                      Address:\n                      <div className=\"group-chat-containerDv-address\">\n                        {` ${item.address}`}\n                      </div>\n                      <Button\n                        onClick={() => {\n                          props.setSelectedParticipants((oldParticipants) => {\n                            let filtered = oldParticipants.filter((elem) => {\n                              if (item.address === elem.address) {\n                                return 0;\n                              } else {\n                                return 1;\n                              }\n                            });\n                            return filtered;\n                          });\n                        }}\n                      >\n                        <MinusOutlined />\n                      </Button>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GroupChat;\n","import React, { useState } from \"react\";\n\nimport ChatHistory from \"./content-pages/chat-history\";\nimport UserSettings from \"./content-pages/user-settings\";\nimport UserFunds from \"./content-pages/user-funds\";\nimport SearchUsers from \"./content-pages/search-users\";\nimport Contacts from \"./content-pages/contacts\";\nimport Logo from \"./content-pages/logo\";\nimport Accounts from \"./accounts\";\nimport VersionScreen from \"./content-pages/version-error\";\nimport ConnectionScreen from \"./content-pages/connection-screen\";\nimport GroupChat from \"./content-pages/group-chat\";\n\nimport \"./contents.css\";\n/**\n * This component represents the main area of the application.\n * It returns the corresponding page based on props.selectedPage.\n *\n * @param {*} props The global variables.\n */\nconst Contents = (props) => {\n  // Variable to indicate if current discussion is the anonymous received messages discussion\n  const [\n    anonymousBucket,\n    setAnonymousBucket\n  ] = useState(false);\n\n  const contentsProps = {\n    anonymousBucket,\n    setAnonymousBucket,\n  };\n\n  /**\n   * This function returns the corresponding page for the currently selected page.\n   * The returned page is loaded in the body of this component.\n   */\n  const getContentPage = () => {\n    let page;\n    switch (props.selectedPage) {\n    case \"chatHistory\":\n      page = <ChatHistory {...props} {...contentsProps} />;\n      break;\n    case \"userSettings\":\n      page = <UserSettings {...props} />;\n      break;\n    case \"searchUsers\":\n      page = <SearchUsers {...props} />;\n      break;\n    case \"contacts\":\n      page = <Contacts {...props} />;\n      break;\n    case \"logo\":\n      page = <Logo {...props} />;\n      break;\n    case \"accounts\":\n      page = <Accounts {...props} />;\n      break;\n    case \"userFunds\":\n      page = <UserFunds {...props} />;\n      break;\n    case \"versionError\":\n      page = <VersionScreen {...props} />;\n      break;\n    case \"connectionScreen\":\n      page = <ConnectionScreen />;\n      break;\n    case \"groupChat\":\n      page = <GroupChat {...props} />;\n    }\n    return page;\n  };\n\n  /**\n   * The contents page JSX.\n   */\n  return (\n    <div\n      className=\"content-body\"\n      onClick={() => {\n        if (props.sideActivated === true) {\n          props.setSideActivated(false);\n        }\n      }}\n    >\n      {getContentPage()}\n    </div>\n  );\n};\n\nexport default Contents;\n","export default __webpack_public_path__ + \"static/media/arc-logo-short.95d27a0b.png\";","import React, { useState } from \"react\";\nimport { List, Button, Input, Radio, Menu, Dropdown, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\n\nimport discussionClient from \"../services/discussionServices\";\n\nimport { version } from \"../config/version\";\nimport generateIdenticon from \"../utils/identicon.js\";\nimport { findUserByAddress } from \"../utils/users-utils.js\";\nimport arcLogo from \"../media/arc-logo-short.png\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport theme from \"../style/theme\";\n\nimport {\n  concatUserAddresses,\n  concatUserNames,\n} from \"../utils/discussion-utils\";\n\nimport \"./side.css\";\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * This component represents the left side panel of the application.\n * It contains the user's info and options on the top left area, as\n * well as the discussions panel.\n * @param {*} props The global variables.\n */\nconst Side = (props) => {\n  // Discussion Filtering Variables\n  const [stringToSearch, SetStringToSearch] = useState(\"\");\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"Name\");\n  const [selectedSideDiscussion, setSelectedSideDiscussion] = useState();\n\n  const [deleteDiscussionModalActive, setDeleteDiscussionModalActive] =\n    useState(false);\n\n  /**\n   * Calculates if there exist unread messages in a given discussion.\n   * @param {*} item The discussion object.\n   * @returns The unread status.\n   */\n  const calculateUnreadStatus = (item) => {\n    return item.lastReadMsgId !== item.lastMsgId;\n  };\n\n  /**\n   * Calculates the number of discussions that contain unread messages in order to update the tab title.\n   */\n  const titleNotificationChecker = () => {\n    if (props.discussions) {\n      let messageCounter = 0;\n      const res = props.discussions.forEach((disc) => {\n        if (disc.lastMsgId !== disc.lastReadMsgId) {\n          messageCounter++;\n        }\n      });\n      if (messageCounter == 0) {\n        document.title = \"arc\";\n      } else {\n        document.title = `*(${messageCounter}) arc`;\n      }\n    }\n  };\n\n  /**\n   * Calculates the discussions that pass the currently selected filter options.\n   * @returns The discussions array.\n   */\n  const discussionsToShow = () => {\n    titleNotificationChecker();\n    if (props.discussions) {\n      const res = props.discussions\n        .filter((item) => {\n          let name = concatUserNames(props, item.participantsList);\n          let address = concatUserAddresses(props, item.participantsList);\n          if (selectedSearchOption === \"Name\") {\n            return name.toLowerCase().includes(stringToSearch.toLowerCase());\n          }\n          if (selectedSearchOption === \"Address\") {\n            return address.toLowerCase().includes(stringToSearch.toLowerCase());\n          }\n        })\n        .sort((a, b) => {\n          return a.lastMsgId > b.lastMsgId ? -1 : 1;\n        });\n      return res;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * The side panel JSX.\n   */\n  return (\n    <div\n      className={`sidePanel ${\n        props.sideSquashed\n          ? props.sideActivated\n            ? \"sidePanel-mobile\"\n            : \"\"\n          : \"\"\n      } `}\n    >\n      <Dropdown\n        trigger=\"hover\"\n        overlay={\n          <Menu>\n            <Menu.Item\n              onClick={() => {\n                props.setSelectedDiscussion();\n                props.setSelectedPage(\"userSettings\");\n                props.setSideActivated(false);\n              }}\n            >\n              Settings\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.updateCurrentFunds();\n                props.setSelectedDiscussion();\n                props.setSelectedPage(\"userFunds\");\n                props.setSideActivated(false);\n              }}\n            >\n              Funds\n            </Menu.Item>\n            <Menu.Item\n              className=\"fullscreen\"\n              onClick={() => {\n                document.body.requestFullscreen();\n              }}\n            >\n              Go Fullscreen\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.setFundsInitVisible(true);\n                props.setFundsInitDisabled(false);\n              }}\n            >\n              Show Welcome Dialog\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.setLoadAccount(0);\n                window.localStorage.removeItem(\"url\");\n                window.localStorage.removeItem(\"httpUsername\");\n                window.localStorage.removeItem(\"httpPassword\", \"\");\n                window.location.reload(true);\n              }}\n            >\n              Disconnect\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <div\n          className=\"side-user-info\"\n          style={{\n            color: props.backendStatus ? \"white\" : \"gray\",\n          }}\n        >\n          <div className=\"side-user-info-icon\">\n            {props.backendStatus && props.selfInfo.address ? (\n              generateIdenticon(props.selfInfo.address, 60)\n            ) : (\n              <LoadingOutlined spin />\n            )}\n          </div>\n          <span className=\"side-user-info-name\">\n            <span\n              className=\"side-user-info-name-text\"\n              style={{\n                color: props.msgStreamActive ? \"inherit\" : \"gray\",\n              }}\n            >\n              {props.selfInfo ? props.selfInfo.alias : \"You\"}\n            </span>\n            <span className=\"side-user-info-name-navigationDots\">...</span>\n          </span>\n          <div id=\"currentFundsWrapper\" className=\"currentFundsWrapper\">\n            <span id=\"currentFundsWrapperChange\">\n              {cryptoUtils.parseLastFundChange(props)}\n            </span>\n            <span className=\"currentFundsWrapperChangeLogo\">\n              {props.selectedCryptoUnit && props.lastFundChange !== 0\n                ? props.selectedCryptoUnit\n                : \"\"}\n            </span>\n            <div className=\"currentFundsWrapperSatoshis\">\n              {` ${cryptoUtils.parseCurrentFunds(props)}`}\n            </div>\n            <span className=\"currentFundsWrapperSatoshisLogo\">\n              {props.selectedCryptoUnit ? props.selectedCryptoUnit : \"\"}\n            </span>\n            <div className=\"currentFundsWrapperEuro\">\n              {cryptoUtils.parseCurrentFiatAmount(props)}\n            </div>\n            <span className=\"currentFundsWrapperEuroLogo\">\n              {props.selectedFiatUnit}\n            </span>\n          </div>\n        </div>\n      </Dropdown>\n      <div className=\"side-buttons-wrapper\">\n        <Button\n          className=\"side-button-homePage\"\n          onClick={() => {\n            props.changePage(\"contacts\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-homePage-c13nLogo-wrapper\">\n            <img src={arcLogo} className=\"side-button-homePage-c13nLogo\" />\n          </div>\n\n          <div className=\"side-button-homePage-text\">Home</div>\n        </Button>\n        <Button\n          className=\"side-button-searchUsers\"\n          onClick={() => {\n            props.changePage(\"searchUsers\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-searchUsers-searchLogo-wrapper\">\n            {\" \"}\n            <SearchOutlined className=\"side-button-searchUsers-searchLogo\" />\n          </div>\n\n          <div className=\"side-button-searchUsers-text\">Search</div>\n        </Button>\n        <Button\n          className=\"side-button-groupChat\"\n          onClick={() => {\n            props.changePage(\"groupChat\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-groupChat-groupsearchlogo-wrapper\">\n            <PlusOutlined className=\"side-button-groupChat-groupsearchlogo\" />\n          </div>\n          <div className=\"side-button-groupChat-text\">Group Discussion</div>\n        </Button>\n      </div>\n      <div\n        className=\"side-contacts-wrapper\"\n        style={{\n          backgroundColor: theme.menuDark,\n        }}\n      >\n        <List\n          className=\"discussionsList\"\n          style={{\n            scrollbarColor: `${theme.menuNormal} ${theme.menuDark}`,\n            // maxHeight: 'min(50vh, 750px)',\n          }}\n          locale={{\n            emptyText: \"No Discussions\",\n          }}\n          dataSource={discussionsToShow()}\n          itemLayout=\"horizontal\"\n          renderItem={(item) => {\n            const userLookup = findUserByAddress(\n              props,\n              item.participantsList[0]\n            );\n            return (\n              <List.Item\n                className=\"userContainer\"\n                style={{\n                  backgroundColor:\n                    props.selectedDiscussion === item ? theme.menuNormal : \"\",\n                }}\n              >\n                <div\n                  className=\"SideListItem\"\n                  onClick={() => {\n                    props.changePage(\"chatHistory\", \"hide\");\n                    props.setSelectedDiscussion(item);\n                  }}\n                >\n                  {item.participantsList.length > 1\n                    ? generateIdenticon(\n                      concatUserAddresses(props, [\n                        props.selfInfo.address,\n                        ...item.participantsList,\n                      ]),\n                      30\n                    )\n                    : generateIdenticon(\n                      concatUserAddresses(props, [item.participantsList]),\n                      30\n                    )}\n                </div>\n                <div\n                  className=\"sideContactUserWrapper\"\n                  onClick={() => {\n                    props.changePage(\"chatHistory\", \"hide\");\n                    props.setSelectedDiscussion(item);\n                  }}\n                >\n                  <b\n                    className=\"sideContactUserWrapperB\"\n                    style={{\n                      color: calculateUnreadStatus(item) ? \"cyan\" : \"inherit\",\n                    }}\n                  >\n                    {concatUserNames(props, item.participantsList).length > 0\n                      ? concatUserNames(props, item.participantsList)\n                      : \"Anonymous\"}\n                  </b>\n                  <br />\n                  <div className=\"sideContactUserWrapperDiv\">\n                    {item.participantsList.length == 1\n                      ? userLookup\n                        ? `${userLookup.address.substring(\n                          0,\n                          5\n                        )}...${userLookup.address.substring(61, 66)}`\n                        : \"\"\n                      : \"Group Discussion\"}\n                  </div>\n                </div>\n\n                <Dropdown\n                  trigger=\"click\"\n                  overlay={\n                    <Menu>\n                      <Menu.Item disabled>Rename</Menu.Item>\n                      <Menu.Item\n                        onClick={() => {\n                          setDeleteDiscussionModalActive(true);\n                        }}\n                      >\n                        Delete\n                      </Menu.Item>\n                    </Menu>\n                  }\n                >\n                  <div\n                    className=\"sideDropdown\"\n                    onClick={() => {\n                      setSelectedSideDiscussion(item);\n                    }}\n                  >\n                    <div>...</div>\n                  </div>\n                </Dropdown>\n              </List.Item>\n            );\n          }}\n        />\n        <div className=\"side-filter\">\n          <Input\n            placeholder=\"Filter...\"\n            className=\"side-input-filter\"\n            onChange={(e) => {\n              SetStringToSearch(e.target.value);\n            }}\n          />\n          <Radio.Group\n            onChange={(e) => {\n              setSelectedSearchOption(e.target.value);\n            }}\n            value={selectedSearchOption}\n            optionType=\"button\"\n            size=\"small\"\n          >\n            <Radio.Button value=\"Name\" className=\"side-input-filter\">\n              Name\n            </Radio.Button>\n            <Radio.Button value=\"Address\" className=\"side-input-filter\">\n              Address\n            </Radio.Button>\n          </Radio.Group>\n        </div>\n        <div className=\"side-input-version\">\n          {`Version ${version} | ${props.chainInfo?.chain} ${props.chainInfo?.network}`}\n        </div>\n      </div>\n      <Modal\n        visible={!!deleteDiscussionModalActive}\n        onOk={() => {\n          discussionClient().removeDiscussion(\n            {\n              id: selectedSideDiscussion.id,\n            },\n            (err, res) => {\n              if (err) {\n                NotificationManager.error(\"Failed to delete discussion\");\n                console.log(err);\n              }\n              if (res) {\n                NotificationManager.success(\"Deleted discussion\");\n                props.setSelectedPage(\"logo\");\n                props.setDiscussions((oldDiscussions) => {\n                  let res = oldDiscussions.filter((elem) => {\n                    return elem.id !== selectedSideDiscussion.id;\n                  });\n                  return res;\n                });\n              }\n            }\n          );\n          setDeleteDiscussionModalActive(false);\n        }}\n        onCancel={() => {\n          setDeleteDiscussionModalActive(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        <h3>Delete discussion?</h3>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Side;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Button, Modal, Tabs, Slider, Input, Form, Divider, Select } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\n\nimport channelClient from \"../../services/channelServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\nimport \"./funds-initialization.css\";\n\n/**\n * This component represents the modal responsible for showing the dialog to help you bootstrap your wallet and lightning channels.\n * @param {*} props The global variables.\n * @returns The Modal JSX.\n */\nconst FundsInitialization = (props) => {\n\n  const mainnetNodes = [\n    {\n      value: \"WalletOfSatoshi.com\",\n      address: \"035e4ff418fc8b5554c5d9eea66396c227bd429a3251c8cbc711002ba215bfc226\",\n      uri: \"035e4ff418fc8b5554c5d9eea66396c227bd429a3251c8cbc711002ba215bfc226@170.75.163.209:9735\"\n    },\n    {\n      value: \"ACINQ\",\n      address: \"03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f\",\n      uri: \"03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f@3.33.236.230:9735\"\n    },\n    {\n      value: \"LNBIG.com\",\n      address: \"034ea80f8b148c750463546bd999bf7321a0e6dfc60aaf84bd0400a2e8d376c0d5\",\n      uri: \"034ea80f8b148c750463546bd999bf7321a0e6dfc60aaf84bd0400a2e8d376c0d5@46.229.165.151:9735\"\n    },\n    {\n      value: \"CoinGate\",\n      address: \"0242a4ae0c5bef18048fbecf995094b74bfb0f7391418d71ed394784373f41e4f3\",\n      uri: \"0242a4ae0c5bef18048fbecf995094b74bfb0f7391418d71ed394784373f41e4f3@3.124.63.44:9735\"\n    },\n    {\n      value: \"Boltz\",\n      address: \"026165850492521f4ac8abd9bd8088123446d126f648ca35e60f88177dc149ceb2\",\n      uri: \"026165850492521f4ac8abd9bd8088123446d126f648ca35e60f88177dc149ceb2@104.196.200.39:9735\"\n    }\n  ];\n\n  const testnetNodes = [\n    {\n      value: \"aranguren.org\",\n      address: \"038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9\",\n      uri: \"038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9@203.132.94.196:9735\"\n    },\n    {\n      value: \"Coingate\",\n      address: \"0277622bf4c497475960bf91bd3c673a4cb4e9b589cebfde9700c197b3989cc1b8\",\n      uri: \"0277622bf4c497475960bf91bd3c673a4cb4e9b589cebfde9700c197b3989cc1b8@35.158.243.90:9735\"\n    }\n  ];\n\n  const defaultAmount = 50000;\n  const defaultPushAmount = Math.floor(50000 * 0.03);\n  const minChannelAmount = 20000;\n\n  const [key, setKey] = useState(\"1\");\n  const [loading, setLoading] = useState(false);\n\n  const [mode, setMode] = useState(\"auto\");\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  const [amount, setAmount] = useState(defaultAmount);\n  const [pushAmount, setPushAmount] = useState(defaultPushAmount);\n  const [minimumInputConfirmations, setMinimumInputConfirmations] = useState(1);\n  const [targetConfirmationBlocks, setTargetConfirmationBlocks] = useState(3);\n\n  /**\n   * Dynamically updates the push amount depending on current selected channel amount.\n   */\n  useEffect(() => {\n    setPushAmount(Math.floor(amount * 0.03));\n  }, [amount]);\n\n  /**\n   * Returns the address for channel openning depending on user selected options on the modal.\n   * @returns The string representing the address.\n   */\n  const getAddress = () => {\n    switch (mode) {\n    case \"auto\":\n      return props.chainInfo?.network === \"testnet\" ? lightningAddress : lightningAddress;\n    case \"basic\":\n      return lightningAddress;\n    case \"advanced\":\n      return lightningAddress;\n    }\n  };\n\n  /**\n   * Opens a channel with selected address and options.\n   * @param {*} address The address to open a channel with.\n   */\n  const openChannel = (address) => {\n    console.log(\"Openning channel to\", address, \", with selected amount \", amount);\n    const amtMsat = amount * 1000;\n    const pushAmtMsat = pushAmount * 1000;\n    channelClient().openChannel(\n      {\n        address: address,\n        amtMsat: amtMsat,\n        pushAmtMsat: pushAmtMsat,\n        minInputConfs: minimumInputConfirmations,\n        targetConfirmationBlocks: targetConfirmationBlocks,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          setLoading(false);\n          NotificationManager.error(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setLightningAddress(\"\");\n          setAmount(defaultAmount);\n          setPushAmount(defaultPushAmount);\n          setMinimumInputConfirmations(1);\n          setTargetConfirmationBlocks(3);\n          props.setVisible(false);\n          setLoading(false);\n          NotificationManager.success(\"Channel pending to open\");\n        }\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Modal\n        title=\"Welcome to arc\"\n        visible={props.visible}\n        okText={key === \"1\" ? \"Next\" : \"Open Channel\"}\n        cancelText={\"Don't show again\"}\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        cancelButtonProps={{\n          onClick: () => {\n            props.setDisabled(true);\n            props.setVisible(false);\n          },\n        }}\n        okButtonProps={{\n          disabled: loading,\n        }}\n        onOk={() => {\n          if (key === \"1\") {\n            setKey(\"2\");\n          } else {\n            setLoading(true);\n            const addr = getAddress();\n            const split = splitURI(addr);\n            const address = split.address;\n            const hostport = split.hostport;\n            console.log(\"Connecting to peer \", address, \":\", hostport);\n            nodeInfoClient().connectNode(\n              {\n                address: address,\n                hostport: hostport,\n              },\n              (err, res) => {\n                if (err) {\n                  console.log(err);\n                  NotificationManager.error(err.message);\n                  setLoading(false);\n                }\n                if (res) {\n                  console.log(res);\n                  NotificationManager.success(\"Connected to peer\");\n                  openChannel(address);\n                }\n              }\n            );\n          }\n        }}\n      >\n        <Tabs\n          key={key}\n          defaultActiveKey={key}\n          onChange={(e) => {\n            setKey(e);\n          }}\n        >\n          <Tabs.TabPane tab=\"Buy Bitcoin\" key=\"1\">\n            Before anything else, you must add some bitcoin to your wallet.\n            <br />\n            <br />\n            <b>Step 1: Generate a receiving address</b>\n            <br />\n            Login to your{\" \"} wallet, go to the <b>On-chain</b> section and generate a wallet address.\n            <br />\n            <br />\n            <b>Step 2: Get some bitcoin.</b>\n            <br />\n            You can use the generated address to receive money from the bitcoin network.\n            If you want to buy bitcoin, use your address in one of the following services.\n            <br />\n            {props.chainInfo?.network === \"mainnet\" ? (\n              <span>\n                <a href=\"https://buy.moonpay.com\" target=\"_blank\">\n                  MoonPay\n                </a>\n                <br />\n                <a href=\"https://www.kraken.com\" target=\"_blank\">\n                  Kraken\n                </a>\n              </span>\n            ) : (\n              <span>\n                <a href=\"https://testnet-faucet.mempool.co/\" target=\"_blank\">\n                  Mempool Faucet\n                </a>\n                <br />\n                <a href=\"https://bitcoinfaucet.uo1.net/\" target=\"_blank\">\n                  Uo1 Faucet\n                </a>\n              </span>\n            )}\n            <br />\n            <br />\n            You will see the funds almost immediately but you will be able to\n            use them after 10-30 minutes.\n          </Tabs.TabPane>\n\n          <Tabs.TabPane tab=\"Open Channel\" key=\"2\">\n            To enable instant messages and low-fee transactions you need to use\n            some of your funds to open a <b>Lightning Payment Channel</b>.\n            <br />\n            <br />\n            It is implemented using multi-signature Bitcoin\n            transactions that share control over the commited bitcoin between\n            you and that node. This relationship offers everyone security and\n            privacy for both messages and payments.\n            <br />\n            <br />\n            The funds dedicated to a channel still belong to you and you are\n            able to spend them instantly and with very low fees.\n            <br />\n            <br />\n            <Button\n              type=\"secondary\"\n              className=\"funds-initialization-btn\"\n              style={{\n                borderBottom:\n                  mode === \"auto\" ? \"1px solid white\" : \"1px solid gray\",\n                fontWeight: mode === \"auto\" ? \"bold\" : \"normal\",\n              }}\n              onClick={() => {\n                setMode(\"auto\");\n              }}\n            >\n              Connect to famous node\n            </Button>\n            <Button\n              type=\"secondary\"\n              className=\"funds-initialization-btn\"\n              style={{\n                borderBottom:\n                  mode !== \"auto\" ? \"1px solid white\" : \"1px solid gray\",\n                fontWeight: mode !== \"auto\" ? \"bold\" : \"normal\",\n              }}\n              onClick={() => {\n                setMode(\"basic\");\n              }}\n            >\n              Connect manually\n            </Button>\n            <Tabs\n              style={{\n                display:\n                  key === \"2\" ? (mode !== \"auto\" ? \"inherit\" : \"none\") : \"none\",\n              }}\n              defaultActiveKey=\"1\"\n              onChange={(e) => {\n                switch (e) {\n                case \"1\":\n                  setMode(\"basic\");\n                  break;\n                case \"2\":\n                  setMode(\"advanced\");\n                  break;\n                }\n              }}\n            >\n              <Tabs.TabPane key=\"1\" tab=\"Basic\" />\n              <Tabs.TabPane key=\"2\" tab=\"Advanced\" />\n            </Tabs>\n            <Form\n              style={{\n                display: key === \"2\" ? \"inherit\" : \"none\",\n              }}\n              layout=\"vertical\"\n            >\n              <Form.Item\n                style={{\n                  display: mode !== \"auto\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    className=\"funds-initialization-info-input\"\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: (mode == \"auto\") ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Node\n                  </Divider>\n                  <Select\n                    options={props.chainInfo?.network === \"testnet\" ? testnetNodes : mainnetNodes }\n                    onChange={(value) => {\n                      let node;\n                      switch(props.chainInfo?.network){\n                      case \"testnet\":\n                        node = testnetNodes.find((e) => e.value == value);\n                        setLightningAddress(node.uri);\n                        break;\n                      case \"mainnet\":\n                        node = mainnetNodes.find((e) => e.value == value);\n                        setLightningAddress(node.uri);\n                        break;\n                      }\n                    }}\n                  />\n                </div>\n              </Form.Item>\n\n              <Form.Item>\n                <div className=\"funds-initialization-amount\">\n                  <Divider\n                    className=\"funds-initialization-amount-divider\"\n                    orientation=\"left\"\n                  >\n                    Amount (sat)\n                  </Divider>\n                  <span\n                    style={{\n                      display: props.balance?.walletConfirmedSat\n                        ? props.balance?.walletConfirmedSat < minChannelAmount\n                          ? \"inherit\"\n                          : \"none\"\n                        : \"none\",\n                      color: \"red\",\n                      fontSize: \"13px\"\n                    }}\n                  >\n                    Not enough funds, minimum required 20000sat, you have {props.balance?.walletConfirmedSat}sat on-chain\n                  </span>\n                  <Slider\n                    className=\"funds-initialization-amount-slider\"\n                    min={minChannelAmount}\n                    max={props.balance?.walletConfirmedSat}\n                    defaultValue={defaultAmount}\n                    onChange={(e) => {\n                      setAmount(e);\n                    }}\n                  />\n                  <Input\n                    value={amount}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-amount-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Push Amount (sat)\n                  </Divider>\n                  <Input\n                    value={pushAmount.toString()}\n                    onChange={(e) => {\n                      setPushAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Minimum Input Confirmations\n                  </Divider>\n                  <Input\n                    value={minimumInputConfirmations.toString()}\n                    onChange={(e) => {\n                      setMinimumInputConfirmations(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Target Confirmation Blocks\n                  </Divider>\n                  <Input\n                    value={targetConfirmationBlocks.toString()}\n                    onChange={(e) => {\n                      setTargetConfirmationBlocks(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n        </Tabs>\n        <span\n          className=\"funds-initialization-suggested\"\n          style={{\n            display: mode === \"advanced\" ? \"inline\" : \"none\",\n          }}\n        >\n          (suggested)\n        </span>\n      </Modal>\n    </div>\n  );\n};\n\nexport default FundsInitialization;\n","const https = require('https');\n\nconst getExchangeRates = (setExchangeRates) => {\n  let data = '';\n  https.get('https://api.coinbase.com/v2/exchange-rates?currency=BTC', (resp) => {\n    resp.on('data', (chunk) => {\n      data += chunk;\n    });\n    resp.on('end', () => {\n      let res = JSON.parse(data);\n      setExchangeRates(res.data.rates);\n    });\n  }).on('error', (err) => {\n    console.error(err);\n  });\n};\n\nexport default getExchangeRates;\n","export default __webpack_public_path__ + \"static/media/notification.1187a1b6.mp3\";","import React, { useState, useEffect } from \"react\";\nimport {\n  NotificationManager,\n  NotificationContainer,\n} from \"react-notifications\";\nimport WindowSizeListener from \"react-window-size-listener\";\n\nimport Contents from \"./contents\";\nimport Side from \"./side\";\nimport FundsInitialization from \"./content-pages/funds-initialization\";\n\nimport contactClient from \"../services/contactServices\";\nimport discussionClient from \"../services/discussionServices\";\nimport nodeInfoClient from \"../services/nodeInfoServices\";\nimport messageClient from \"../services/messageServices\";\n\nimport getExchangeRates from \"../utils/fiat-rates\";\nimport sleep from \"../utils/system\";\nimport { addToAccounts, loadAccounts } from \"../utils/accounts-utils\";\nimport {\n  loadAutomaticImageLoadingSetting,\n  loadSmoothAnimationsSetting,\n  loadSelectedCryptoUnit,\n  loadSelectedFiatUnit,\n  loadChatIdenticonsSetting,\n  loadChatLayoutSetting,\n  loadMyMessageColor,\n  loadOtherMessageColor,\n  loadDeveloperLogsSetting,\n} from \"../utils/settings\";\n\nimport { appendToChatHistory } from \"../utils/discussion-utils\";\n\nimport arcLogo from \"../media/arc-logo.png\";\nimport notificationAudio from \"../media/notification.mp3\";\n\nimport { concatUserNames } from \"../utils/discussion-utils\";\nimport channelClient from \"../services/channelServices\";\nimport \"./main.css\";\nimport { exportTextMessage } from \"../payload-protocol/utils\";\n\nconst { GetDiscussionsResponse } = require(\"../rpc/rpc_pb\");\nconst { SubscribeMessageResponse } = require(\"../rpc/rpc_pb\");\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * Root component of the application. Must be nested inside a notification\n * manager wrapper for notifications to work.\n */\n\nconst Main = () => {\n  // Connection Variables\n  const [initialConnection, setInitialConnection] = useState(true);\n  const [backendStatus, setBackendStatus] = useState(false);\n  const [msgRxUp, setMsgRxUp] = useState(0);\n  const [msgStreamActive, setMsgStreamActive] = useState(false);\n  const [backendVersion, setBackendVersion] = useState(\"\");\n\n  // Node Variables\n  const [selfInfo, setSelfInfo] = useState();\n  const [chainInfo, setChainInfo] = useState();\n  const [contacts, setContacts] = useState();\n  const [users, setUsers] = useState([]);\n  const [currentFunds, setCurrentFunds] = useState(-1);\n  const [lastFundChange, setLastFundChange] = useState(0);\n\n  // Discussion Variables\n  const [discussions, setDiscussions] = useState([]);\n  const [selectedDiscussion, setSelectedDiscussion] = useState();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [selectedParticipants, setSelectedParticipants] = useState([]);\n\n  // Account Variables\n  const [accounts, setAccounts] = useState([]);\n  const [loadAccount, setLoadAccount] = useState(0);\n\n  // View Variables\n  const [selectedPage, setSelectedPage] = useState(\"accounts\");\n  const [sideSquashed, setSideSquashed] = useState(false);\n  const [sideActivated, setSideActivated] = useState(false);\n\n  // Settings Variables\n  const [automaticImageLoading, setAutomaticImageLoading] = useState(false);\n  const [smoothAnimations, setSmoothAnimations] = useState(false);\n  const [selectedCryptoUnit, setSelectedCryptoUnit] = useState();\n  const [selectedFiatUnit, setSelectedFiatUnit] = useState();\n  const [chatLayout, setChatLayout] = useState();\n  const [chatIdenticons, setChatIdenticons] = useState();\n  const [myMessageColor, setMyMessageColor] = useState();\n  const [otherMessageColor, setOtherMessageColor] = useState();\n  const [developerLogs, setDeveloperLogs] = useState();\n\n  // Crypto Variables\n  const [exchangeRates, setExchangeRates] = useState();\n\n  // Funds Initialization Variables\n  const [fundsInitVisible, setFundsInitVisible] = useState(false);\n  const [fundsInitDisabled, setFundsInitDisabled] = useState(false);\n  const [balance, setBalance] = useState();\n\n  /**\n   * This function loads the static data of the currently active account.\n   */\n  const fetchAccountData = () => {\n    fetchUsers();\n    fetchContacts();\n    fetchDiscussions();\n  };\n\n  /**\n   * Loads the application settings from local storage.\n   */\n  const loadSettings = () => {\n    loadAutomaticImageLoadingSetting(setAutomaticImageLoading);\n    loadSmoothAnimationsSetting(setSmoothAnimations);\n    loadSelectedCryptoUnit(setSelectedCryptoUnit);\n    loadSelectedFiatUnit(setSelectedFiatUnit);\n    loadChatIdenticonsSetting(setChatIdenticons);\n    loadChatLayoutSetting(setChatLayout);\n    loadMyMessageColor(setMyMessageColor);\n    loadOtherMessageColor(setOtherMessageColor);\n    loadDeveloperLogsSetting(setDeveloperLogs);\n  };\n\n  /**\n   * Changes the active contents page.\n   * @param {*} pageName Name of the page.\n   * @param {*} sideMenuAction Side bar behavior (if set to 'hide' it will automatically close the side bar on the mobile view).\n   */\n  const changePage = (pageName, sideMenuAction) => {\n    setSelectedDiscussion();\n    setSelectedPage(pageName);\n    if (sideMenuAction === \"hide\") {\n      setSideActivated(false);\n    }\n  };\n\n  /**\n   * Calculates if the welcome dialog for funds initialization should be displayed.\n   */\n  const calculateFundsInitialization = () => {\n    let modalDisabled;\n    setFundsInitDisabled((oldValue) => {\n      modalDisabled = oldValue;\n      return oldValue;\n    });\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        setBalance(res);\n        const channelZero =\n          res.channelLocalMsat === 0 && res.pendingOpenLocalMsat === 0;\n        if (channelZero && !modalDisabled) {\n          setFundsInitVisible(true);\n        }\n      }\n    });\n  };\n\n  /**\n   * Updates current funds and triggers the balance change indicator.\n   */\n  const updateCurrentFunds = () => {\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        if (res.channelLocalMsat) {\n          const newAmount = Math.floor(res.channelLocalMsat / 1000);\n          let oldAmount = currentFunds;\n          setCurrentFunds((oldFunds) => {\n            oldAmount = oldFunds;\n            return newAmount;\n          });\n          let fundColor;\n          if (oldAmount === -1) {\n            fundColor = \"white\";\n          } else if (newAmount > oldAmount) {\n            fundColor = \"#00FF00\";\n          } else if (newAmount < oldAmount) {\n            fundColor = \"#FF0000\";\n          } else if (newAmount === oldAmount) {\n            fundColor = \"white\";\n          }\n          let fundsWrapper = document.getElementById(\"currentFundsWrapper\");\n          setTimeout(function () {\n            fundsWrapper.style.transition = \"0s\";\n            fundsWrapper.style.color = fundColor;\n          }, 1);\n          setTimeout(function () {\n            fundsWrapper.style.transition = smoothAnimations ? \"0.4s\" : \"0s\";\n            fundsWrapper.style.color = \"white\";\n          }, 200);\n          setTimeout(function () {\n            setLastFundChange(0);\n          }, 4000);\n        }\n      }\n    });\n  };\n\n  const mainProps = {\n    users,\n    setUsers,\n    selfInfo,\n    setSelfInfo,\n    selectedDiscussion,\n    setSelectedDiscussion,\n    contacts,\n    setContacts,\n    chatHistory,\n    setChatHistory,\n    selectedPage,\n    setSelectedPage,\n    backendStatus,\n    setBackendStatus,\n    discussions,\n    setDiscussions,\n    accounts,\n    setAccounts,\n    fetchAccountData,\n    loadAccount,\n    setLoadAccount,\n    sideSquashed,\n    setSideSquashed,\n    sideActivated,\n    setSideActivated,\n    automaticImageLoading,\n    setAutomaticImageLoading,\n    currentFunds,\n    updateCurrentFunds,\n    lastFundChange,\n    setLastFundChange,\n    smoothAnimations,\n    setSmoothAnimations,\n    selectedCryptoUnit,\n    setSelectedCryptoUnit,\n    selectedFiatUnit,\n    setSelectedFiatUnit,\n    exchangeRates,\n    backendVersion,\n    setBackendVersion,\n    chatLayout,\n    setChatLayout,\n    chatIdenticons,\n    setChatIdenticons,\n    myMessageColor,\n    setMyMessageColor,\n    otherMessageColor,\n    setOtherMessageColor,\n    selectedParticipants,\n    setSelectedParticipants,\n    msgStreamActive,\n    developerLogs,\n    setDeveloperLogs,\n    changePage,\n    chainInfo,\n    balance,\n    setFundsInitVisible,\n    setFundsInitDisabled,\n  };\n\n  /**\n   * This function runs asynchronously and checks for backend connection status based on fixed interval.\n   */\n  async function upStatusChecker() {\n    while (true) {\n      let deadline = new Date();\n      deadline.setSeconds(deadline.getSeconds() + 4);\n      nodeInfoClient().getSelfInfo(\n        {},\n        { deadline: deadline.getTime() },\n        (err, res) => {\n          if (err) {\n            console.log(err);\n            setBackendStatus(false);\n            NotificationManager.error(\"Server unreachable\");\n          }\n          if (res) {\n            let initial = true;\n            setInitialConnection((old) => {\n              initial = old;\n              return old;\n            });\n            let oldStatus = true;\n            setBackendStatus((old) => {\n              oldStatus = old;\n              return old;\n            });\n            if (initial) {\n              setChainInfo(res.chainsList[0]);\n              setSelfInfo(res.info);\n              addToAccounts(mainProps, {\n                url: localStorage.getItem(\"url\"),\n                username: localStorage.getItem(\"httpUsername\"),\n                address: res.info.address,\n                lastActive: Date.now(),\n              });\n              setBackendStatus(true);\n            } else {\n              if (oldStatus === false) {\n                window.location.reload(true);\n              }\n            }\n            setInitialConnection(false);\n          }\n        }\n      );\n      calculateFundsInitialization();\n      await sleep(8000);\n    }\n  }\n\n  /**\n   * This function fetches the users from backend.\n   */\n  const fetchUsers = () => {\n    console.log(\"Fetching Nodes...\");\n    nodeInfoClient().getNodes({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(\"Failed to fetch network\");\n      }\n      if (res) {\n        setUsers(res.nodesList);\n      }\n      console.log(\"Done Fetching Nodes...\");\n    });\n  };\n\n  /**\n   * This function fetches the contacts from backend.\n   */\n  const fetchContacts = () => {\n    contactClient().getContacts({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(\"Failed to fetch contacts\");\n      }\n      if (res) {\n        const parsedContacts = res.contactsList.map((item) => {\n          return {\n            user: item.node,\n            id: item.id,\n            displayName: item.displayName,\n          };\n        });\n        setContacts(parsedContacts);\n      }\n    });\n  };\n\n  /**\n   * This function fetches the discussions from the backend.\n   */\n  async function fetchDiscussions() {\n    let discussionsArray = [];\n    await discussionClient()\n      .getDiscussions({})\n      .on(\"data\", (res) => {\n        discussionsArray.push(\n          GetDiscussionsResponse.toObject(true, res).discussion\n        );\n      })\n      .on(\"end\", () => {\n        console.log(\"Got Discussions:\", discussionsArray);\n        setDiscussions(discussionsArray);\n      })\n      .on(\"error\", (e) => {\n        console.log(\"err\", e);\n      })\n      .on(\"status\", () => {});\n  }\n\n  const initializeExchangeRates = async () => {\n    getExchangeRates(setExchangeRates);\n  };\n\n  /**\n   * This function sets up the async functions that require a selected account.\n   */\n  useEffect(() => {\n    if (loadAccount !== 0) {\n      upStatusChecker();\n      loadSettings();\n      updateCurrentFunds();\n      initializeExchangeRates();\n      setInterval(() => {\n        getExchangeRates(setExchangeRates);\n      }, 300000);\n    }\n  }, [loadAccount]);\n\n  /**\n   * This function is called once when component loads.\n   * It loads the saved accounts from local storage to feed them to accounts page.\n   */\n  useEffect(() => {\n    loadAccounts(mainProps);\n    if (window.innerWidth < 520) {\n      setSideSquashed(true);\n    }\n  }, []);\n\n  /**\n   * Initializes account data and activates message subscription stream when backend status is active.\n   */\n  useEffect(() => {\n    if (backendStatus == true && loadAccount == 1) {\n      fetchAccountData();\n      setMsgRxUp(true);\n    }\n  }, [backendStatus]);\n\n  /**\n   * This function sets up an RX stream to listen for incoming messages.\n   * It is triggered by changes on variable 'msgRxUp', when it is false, it sets up\n   * the stream and switches it to true.\n   */\n  useEffect(async () => {\n    let streamValue;\n    await setMsgStreamActive((oldValue) => {\n      streamValue = oldValue;\n      return oldValue;\n    });\n    if (!streamValue && loadAccount == 1) {\n      console.log(\"Subscribing to messages...\");\n      let startTime = new Date();\n      let deadline = new Date();\n      deadline.setHours(deadline.getHours() + 2400);\n      await sleep(1000);\n      setMsgStreamActive(true);\n      messageClient()\n        .subscribeMessages({}, { deadline: deadline.getTime() })\n        .on(\"data\", (resp) => {\n          try {\n            const res = SubscribeMessageResponse.toObject(resp, resp);\n            setUsers((oldUsers) => {\n              mainProps[\"users\"] = oldUsers;\n              return oldUsers;\n            });\n            updateCurrentFunds();\n            setLastFundChange(`+${Number(res.receivedMessage.amtMsat / 1000)}`);\n            let curPage;\n            setSelectedPage((oldPage) => {\n              curPage = oldPage;\n              return oldPage;\n            });\n            if (curPage !== \"accounts\") {\n              console.log(\"Received: \", res);\n              let alias;\n              let discussion;\n\n              // Attempt to find what discussion the received message is part of\n              setDiscussions((oldDiscussions) => {\n                discussion = oldDiscussions.find((elem) => {\n                  return elem.id === res.receivedMessage.discussionId;\n                });\n                if (discussion === undefined) {\n                  fetchDiscussions();\n                }\n                return oldDiscussions;\n              });\n\n              // Look up the user who sent the message\n              setUsers((oldUsers) => {\n                let aliasLookup = oldUsers.find((elem) => {\n                  return elem.address === res.receivedMessage.sender;\n                });\n                if (aliasLookup) {\n                  alias = aliasLookup.alias;\n                } else {\n                  alias = \"Unknown\";\n                }\n                return oldUsers;\n              });\n\n              let directlyToRoom = false;\n\n              setSelectedDiscussion((oldSelectedDiscussion) => {\n                if (oldSelectedDiscussion) {\n                  if (\n                    oldSelectedDiscussion.id ===\n                    res.receivedMessage.discussionId\n                  ) {\n                    directlyToRoom = true;\n                  }\n                }\n                return oldSelectedDiscussion;\n              });\n\n              if (directlyToRoom) {\n                appendToChatHistory(mainProps, res.receivedMessage);\n              }\n\n              let messageText = exportTextMessage(res.receivedMessage.payload);\n              if (!document.hasFocus()) {\n                let audio = new Audio(notificationAudio);\n                audio.play();\n                new Notification(\n                  `${\n                    concatUserNames(mainProps, [res.receivedMessage.sender]) ||\n                    \"Unknown\"\n                  }: ${\n                    !messageText\n                      ? `Sent you ${cryptoUtils.msatToCurrentCryptoUnit(\n                        mainProps,\n                        res.receivedMessage.amtMsat\n                      )}${selectedCryptoUnit}`\n                      : messageText.length < 32\n                        ? messageText\n                        : messageText.substring(0, 32) + \"...\"\n                  }`,\n                  {\n                    icon: arcLogo,\n                  }\n                );\n              }\n\n              if (discussion) {\n                discussion.lastMsgId = res.receivedMessage.id;\n                if (!directlyToRoom) {\n                  NotificationManager.info(\n                    `${\n                      !messageText\n                        ? `Sent you ${cryptoUtils.msatToCurrentCryptoUnit(\n                          mainProps,\n                          res.receivedMessage.amtMsat\n                        )}${selectedCryptoUnit}`\n                        : messageText < 25\n                          ? messageText\n                          : messageText.substring(0, 25) + \"...\"\n                    }`,\n                    `${alias || \"Unknown\"}:`,\n                    4000,\n                    () => {\n                      setSelectedPage(\"chatHistory\");\n                      setSelectedDiscussion(discussion);\n                    }\n                  );\n                }\n              } else {\n                NotificationManager.info(\"\", \"New Discussion!\", 4000);\n              }\n            }\n          } catch (err) {\n            console.log(\"MessageSub err: \", err);\n          }\n        })\n        .on(\"end\", () => {\n          console.log(\"MsgRx Stopped\");\n          console.log(\"MsgRxUp: \", msgRxUp);\n        })\n        .on(\"error\", (e) => {\n          setMsgStreamActive(false);\n          setMsgRxUp(Date.now());\n          console.log(\n            \"Stream was active for: \",\n            new Date().getTime() - startTime.getTime()\n          );\n          console.log(\"Stopping Async Rx Function\");\n          console.log(\"err\", e);\n        })\n        .on(\"status\", (e) => {\n          console.log(\"Subscription status\");\n        });\n    }\n  }, [msgRxUp]);\n\n  // This funciton is used in order to test that the notifications are working as expected.\n  const showTestNotification = () => {\n    NotificationManager.success(\"copied\", \"\", 1000);\n  };\n\n  /**\n   * The main page JSX.\n   */\n  return (\n    <>\n      <div\n        className=\"main-page\"\n        onClick={\n          !(\"Notification\" in window)\n            ? console.log(\"This browser does not support notifications.\")\n            : () => {\n              Notification.requestPermission();\n            }\n        }\n      >\n        <NotificationContainer\n          enterTimeout={smoothAnimations ? 200 : 0}\n          leaveTimeout={smoothAnimations ? 200 : 0}\n        />\n        <WindowSizeListener\n          onResize={(size) => {\n            let width = size.windowWidth;\n            if (selectedPage === \"chatHistory\") {\n              let element = document.getElementById(\"chatHistoryListId\");\n              if (element) {\n                element.scroll({\n                  top: element.scrollHeight,\n                  behavior: smoothAnimations ? \"smooth\" : \"auto\",\n                });\n              }\n            }\n            if (width < 620) {\n              setSideSquashed(true);\n            } else {\n              setSideSquashed(false);\n              setSideActivated(false);\n            }\n          }}\n        >\n          <Side {...mainProps} />\n          <Contents {...mainProps} />\n        </WindowSizeListener>\n        <FundsInitialization\n          {...mainProps}\n          visible={fundsInitVisible}\n          setVisible={setFundsInitVisible}\n          balance={balance}\n          setDisabled={setFundsInitDisabled}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","import Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./style/index.css\";\nimport \"../node_modules/react-notifications/dist/react-notifications.css\";\nimport \"../node_modules/antd/dist/antd.dark.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","const parseCurrentFunds = (props) => {\n  if (props.currentFunds !== -1 && props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(props.currentFunds / cryptoRate).toFixed(0);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(props.currentFunds / cryptoRate).toFixed(0);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(props.currentFunds / cryptoRate).toFixed(5);\n    }\n  }\n  return 0;\n};\n\nconst parseLastFundChange = (props) => {\n  if (props.lastFundChange !== 0 && props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(props.lastFundChange / cryptoRate).toFixed(0);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(props.lastFundChange / cryptoRate).toFixed(0);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(props.lastFundChange / cryptoRate).toFixed(5);\n    }\n  }\n  return '';\n};\n\nconst parseCurrentFiatAmount = (props) => {\n  if (props.selectedFiatUnit && props.exchangeRates && props.currentFunds !== -1) {\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = props.currentFunds / 100000000;\n    return Number(btc * rate).toFixed(2);\n  }\n  return 0;\n};\n\nconst msatToCurrentCryptoUnit = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1000;\n      return Number(amount / cryptoRate);\n    case 'msat':\n      return amount;\n    case 'mBTC':\n      cryptoRate = 100000000;\n      return Number(amount / cryptoRate).toFixed(5);\n    }\n  }\n  return amount;\n};\n\nconst satToCurrentCryptoUnit = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(amount / cryptoRate);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(amount / cryptoRate);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(amount / cryptoRate).toFixed(5);\n    }\n  }\n  return amount;\n};\n\nconst currentCryptoAmtToFiat = (props, amount) => {\n  if (props.selectedCryptoUnit && props.selectedFiatUnit && props.exchangeRates) {\n    let satAmt;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      satAmt = amount;\n      break;\n    case 'msat':\n      satAmt = Number(amount / 1000);\n      break;\n    case 'mBTC':\n      satAmt = Number(amount * 100000).toFixed(5);\n      break;\n    }\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = satAmt / 100000000;\n    return Number(btc * rate).toFixed(6);\n  }\n  return 0;\n};\n\nconst msatAmtToFiat = (props, amount) => {\n  if (props.selectedFiatUnit && props.exchangeRates) {\n    let satAmt = amount / 1000;\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = satAmt / 100000000;\n    return Number(btc * rate).toFixed(6);\n  }\n  return 0;\n};\n\nconst currentCryptoAmtToMsat = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let msatAmt;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      msatAmt = Number(amount * 1000);\n      break;\n    case 'msat':\n      msatAmt = amount;\n      break;\n    case 'mBTC':\n      msatAmt = Number(amount * 100000000);\n      break;\n    }\n    return msatAmt;\n  }\n  return amount;\n};\n\nconst retrieveDefaultCryptoAmount = (props) => {\n  switch (props.selectedCryptoUnit) {\n  case 'sat':\n    return'1';\n  case 'msat':\n    return'1000';\n  case 'mBTC':\n    return'0.00001';\n  }\n};\n\nconst selectedCryptoToVerbose = (unit) => {\n  switch (unit) {\n  case 'sat':\n    return 'satoshis';\n  case 'msat':\n    return 'millisats';\n  case 'mBTC':\n    return 'mBTC';\n  }\n};\n\nexport {\n  parseCurrentFunds,\n  parseLastFundChange,\n  parseCurrentFiatAmount,\n  msatToCurrentCryptoUnit,\n  satToCurrentCryptoUnit,\n  currentCryptoAmtToFiat,\n  currentCryptoAmtToMsat,\n  msatAmtToFiat,\n  retrieveDefaultCryptoAmount,\n  selectedCryptoToVerbose\n};\n"],"sourceRoot":""}